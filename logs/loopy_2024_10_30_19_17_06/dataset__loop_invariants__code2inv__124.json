{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/124.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x == i;\nloop invariant y == j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant x <= j;\nloop invariant x == y || x < y;\n*/\n```",
            "```\n/*@\nloop invariant i == x;\nloop invariant j == y;\nloop invariant 0 <= y <= i;\nloop invariant 0 <= i <= j;\nloop invariant i - j == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x == (i - y);\nloop invariant y == (j - x);\nloop invariant (x == 0) ==> (y == j);\nloop invariant (y == 0) ==> (x == i);\nloop invariant ((x == 0) && (y == 0)) ==> (i == j);\nloop invariant ((x == 0) && (y == 0)) ==> (i == j);\nloop invariant ((x == i) && (y == j)) ==> (x == 0);\nloop invariant ((x == i) && (y == j)) ==> (y == 0);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == j - x;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= j;\nloop invariant y >= i;\nloop invariant x > 0 ==> x == i;\nloop invariant y > 0 ==> y == j;\nloop invariant x <= y ==> y == j;\nloop invariant i <= j ==> x >= j;\nloop invariant y <= x ==> y == j;\nloop invariant j <= i ==> x >= j;\nloop invariant x >= y ==> x == i;\nloop invariant j >= i ==> y >= i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == i ==> y == j;\nloop invariant y == j ==> x == i;\nloop invariant x == y ==> x == i;\nloop invariant x == y ==> y == j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= max;\nloop invariant 0 <= y <= max;\nloop invariant x >= (i - (i - j) * (i - j + 1) / 2);\nloop invariant y >= (y - (i - j) * (i - j + 1) / 2);\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == y;\n*/\n```",
            "```\n/*@\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y <= j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y >= j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\n*/\n```",
            "```\n/*@\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant x <= y;\nloop invariant y <= i + j;\nloop invariant x + y == i + j;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= y;\nloop invariant x = i - j + y;\nloop invariant x = y + j - i;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant 1 <= x <= j - y;\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= j;\nloop invariant y <= x;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x == i;\nloop invariant y == j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant x <= j;\nloop invariant x == y || x < y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\nloop invariant i6: y <= j;\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i == x;\nloop invariant j == y;\nloop invariant 0 <= y <= i;\nloop invariant 0 <= i <= j;\nloop invariant i - j == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x == (i - y);\nloop invariant y == (j - x);\nloop invariant (x == 0) ==> (y == j);\nloop invariant (y == 0) ==> (x == i);\nloop invariant ((x == 0) && (y == 0)) ==> (i == j);\nloop invariant ((x == 0) && (y == 0)) ==> (i == j);\nloop invariant ((x == i) && (y == j)) ==> (x == 0);\nloop invariant ((x == i) && (y == j)) ==> (y == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\nloop invariant i5: x + y <= i + j;\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == j - x;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant x * x == i * i - 2 * i * j + j * j;\nloop invariant y * y == i * i - 2 * i * j + j * j;\nloop invariant x + y == i;\nloop invariant x - y == i - 2 * y;\nloop invariant x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= j;\nloop invariant y >= i;\nloop invariant x > 0 ==> x == i;\nloop invariant y > 0 ==> y == j;\nloop invariant x <= y ==> y == j;\nloop invariant i <= j ==> x >= j;\nloop invariant y <= x ==> y == j;\nloop invariant j <= i ==> x >= j;\nloop invariant x >= y ==> x == i;\nloop invariant j >= i ==> y >= i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == i ==> y == j;\nloop invariant y == j ==> x == i;\nloop invariant x == y ==> x == i;\nloop invariant x == y ==> y == j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\nloop invariant x == y ==> y <= j;\nloop invariant x == y ==> x <= j;\nloop invariant x == y ==> y >= i;\nloop invariant x == y ==> x >= j;\nloop invariant x == y ==> y <= i;\nloop invariant x == y ==> x <= i;\nloop invariant x == y ==> y >= j;\nloop invariant x == y ==> x >= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i17: x == i ==> y == j;\nloop invariant i18: y == j ==> x == i;\n\n\n\nloop invariant i22: x == y ==> y <= j;\nloop invariant i23: x == y ==> x <= j;\n\n\nloop invariant i26: x == y ==> y <= i;\nloop invariant i27: x == y ==> x <= i;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= max;\nloop invariant 0 <= y <= max;\nloop invariant x >= (i - (i - j) * (i - j + 1) / 2);\nloop invariant y >= (y - (i - j) * (i - j + 1) / 2);\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: y >= (y - (i - j) * (i - j + 1) / 2);\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y <= j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y >= j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant ( ( ( i == x ) ) ==> ( y == j ) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: x <= i;\nloop invariant i2: y <= j;\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant x <= y;\nloop invariant y <= i + j;\nloop invariant x + y == i + j;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= y;\nloop invariant x = i - j + y;\nloop invariant x = y + j - i;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\nloop invariant x = y - i + j;\nloop invariant x = i - y + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant 1 <= x <= j - y;\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= j;\nloop invariant y <= x;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\nloop invariant x <= j - y;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant j >= i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant i >= j - x;\nloop invariant j >= i - y;\nloop invariant i == j - (x - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\nloop invariant x >= (i - y) * (i - y + 1) / 2;\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x == (i - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: y <= j;\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 86: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: 0 <= i <= j;\nloop invariant i2: x == i;\nloop invariant i3: y == j;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: y <= j;\nloop invariant i7: x <= j;\nloop invariant i8: x == y || x < y;\nloop invariant i9: i == x;\nloop invariant i10: j == y;\nloop invariant i11: 0 <= y <= i;\nloop invariant i12: i - j == y;\nloop invariant i13: 0 <= x <= i;\nloop invariant i14: 0 <= y <= j;\nloop invariant i15: x <= i;\nloop invariant i16: x + y <= i + j;\nloop invariant i17: x == (i - y);\nloop invariant i18: y == (j - x);\nloop invariant i19: (x == 0) ==> (y == j);\nloop invariant i20: (y == 0) ==> (x == i);\nloop invariant i21: ((x == 0) && (y == 0)) ==> (i == j);\nloop invariant i22: ((x == i) && (y == j)) ==> (x == 0);\nloop invariant i23: ((x == i) && (y == j)) ==> (y == 0);\nloop invariant i24: x == i - j;\nloop invariant i25: y == j - x;\nloop invariant i26: x + y == i;\nloop invariant i27: x - y == i - 2 * y;\nloop invariant i28: x * y == i * j - i * (i - 1) / 2 - j * (j - 1) / 2;\nloop invariant i29: x * x == i * i - 2 * i * j + j * j;\nloop invariant i30: y * y == i * i - 2 * i * j + j * j;\nloop invariant i31: 0 <= x;\nloop invariant i32: 0 <= y;\nloop invariant i33: x >= j;\nloop invariant i34: y >= i;\nloop invariant i35: x > 0 ==> x == i;\nloop invariant i36: y > 0 ==> y == j;\nloop invariant i37: x <= y ==> y == j;\nloop invariant i38: i <= j ==> x >= j;\nloop invariant i39: y <= x ==> y == j;\nloop invariant i40: j <= i ==> x >= j;\nloop invariant i41: x >= y ==> x == i;\nloop invariant i42: j >= i ==> y >= i;\nloop invariant i43: x == 0 ==> y == j;\nloop invariant i44: y == 0 ==> x == i;\nloop invariant i45: x == i ==> y == j;\nloop invariant i46: y == j ==> x == i;\nloop invariant i47: x == y ==> x == i;\nloop invariant i48: x == y ==> y == j;\nloop invariant i49: x == y ==> x >= i;\nloop invariant i50: x == y ==> y <= j;\nloop invariant i51: x == y ==> x <= j;\nloop invariant i52: x == y ==> y >= i;\nloop invariant i53: x == y ==> x >= j;\nloop invariant i54: x == y ==> y <= i;\nloop invariant i55: x == y ==> x <= i;\nloop invariant i56: x == y ==> y >= j;\nloop invariant i57: 0 <= x <= max;\nloop invariant i58: 0 <= y <= max;\nloop invariant i59: x >= (i - (i - j) * (i - j + 1) / 2);\nloop invariant i60: y >= (y - (i - j) * (i - j + 1) / 2);\nloop invariant i61: x >= y;\nloop invariant i62: x == y;\nloop invariant i63: ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant i64: ( ( ( i == x ) ) ==> ( y <= j ) );\nloop invariant i65: ( ( ( i == x ) ) ==> ( y >= j ) );\nloop invariant i66: x <= y;\nloop invariant i67: y <= i + j;\nloop invariant i68: x + y == i + j;\nloop invariant i69: x = i - j + y;\nloop invariant i70: x = y + j - i;\nloop invariant i71: x = i - y + j;\nloop invariant i72: x = y - i + j;\nloop invariant i73: 1 <= i <= j;\nloop invariant i74: 1 <= x <= j - y;\nloop invariant i75: y <= 0;\nloop invariant i76: y <= x;\nloop invariant i77: x <= j - y;\nloop invariant i78: i >= j - x;\nloop invariant i79: j >= i - y;\nloop invariant i80: i == j - (x - y);\nloop invariant i81: y == j - i;\nloop invariant i82: j >= i;\nloop invariant i83: i >= 0;\nloop invariant i84: j >= 0;\nloop invariant i85: x >= (i - y) * (i - y + 1) / 2;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 32,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\nloop invariant i6: y <= j;\n\n\n\n\n\n\n\n\nloop invariant i15: x <= i;\nloop invariant i16: x + y <= i + j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i45: x == i ==> y == j;\nloop invariant i46: y == j ==> x == i;\n\n\n\nloop invariant i50: x == y ==> y <= j;\nloop invariant i51: x == y ==> x <= j;\n\n\nloop invariant i54: x == y ==> y <= i;\nloop invariant i55: x == y ==> x <= i;\n\n\n\n\nloop invariant i60: y >= (y - (i - j) * (i - j + 1) / 2);\n\n\nloop invariant i63: ( ( ( i == x ) ) ==> ( y == j ) );\nloop invariant i64: ( ( ( i == x ) ) ==> ( y <= j ) );\nloop invariant i65: ( ( ( i == x ) ) ==> ( y >= j ) );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c"
        ],
        "skipped": [],
        "total": 1,
        "success_count": 0,
        "failure_count": 1,
        "success_rate": 0.0
    }
}