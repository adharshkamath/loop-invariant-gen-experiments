{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  while (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x > 50 ==> x == 50;\nloop invariant x == 0 ==> x == 1;\nloop invariant x < 50 ==> x > 0 && x < 50 && x != 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 50;\nloop invariant x == 0 ==> unknown_bool() == 0;\nloop invariant x > 0 ==> unknown_bool() == 1;\nloop invariant x > 50 ==> unknown_bool() == 1;\nloop invariant x < 0 ==> unknown_bool() == 0;\nloop invariant x == 0 ==> unknown_bool() == 0;\nloop invariant x > 0 ==> unknown_bool() == 1;\nloop invariant x > 50 ==> unknown_bool() == 1;\nloop invariant x < 0 ==> unknown_bool() == 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant (x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0);\nloop invariant x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= (x - 1) * (x - 1) / 2 + 1;\nloop invariant x <= (x + 1) * (x + 1) / 2 - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x <= 50 ==> !unknown_bool();\nloop invariant unknown_bool() ==> x <= 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == y ==> x == y + 1;\nloop invariant x != y ==> x == y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == (50 - (x - (x - 1) + (x - 2) + ... + 1));\nloop invariant x >= (x - 1) + (x - 2) + ... + 1;\nloop invariant x >= (x - 1);\nloop invariant x >= (x - 2);\nloop invariant x >= (x - 3);\nloop invariant x >= (x - 4);\nloop invariant x >= (x - 5);\nloop invariant x >= (x - 6);\nloop invariant x >= (x - 7);\nloop invariant x >= (x - 8);\nloop invariant x >= (x - 9);\nloop invariant x >= (x - 10);\nloop invariant x >= (x - 11);\nloop invariant x >= (x - 12);\nloop invariant x >= (x - 13);\nloop invariant x >= (x - 14);\nloop invariant x >= (x - 15);\nloop invariant x >= (x - 16);\nloop invariant x >= (x - 17);\nloop invariant x >= (x - 18);\nloop invariant x >= (x - 19);\nloop invariant x >= (x - 20);\nloop invariant x >= (x - 21);\nloop invariant x >= (x - 22);\nloop invariant x >= (x - 23);\nloop invariant x >= (x - 24);\nloop invariant x >= (x - 25);\nloop invariant x >= (x - 26);\nloop invariant x >= (x - 27);\nloop invariant x >= (x - 28);\nloop invariant x >= (x - 29);\nloop invariant x >= (x - 30);\nloop invariant x >= (x - 31);\nloop invariant x >= (x - 32);\nloop invariant x >= (x - 33);\nloop invariant x >= (x - 34);\nloop invariant x >= (x - 35);\nloop invariant x >= (x - 36);\nloop invariant x >= (x - 37);\nloop invariant x >= (x - 38);\nloop invariant x >= (x - 39);\nloop invariant x >= (x - 40);\nloop invariant x >= (x - 41);\nloop invariant x >= (x - 42);\nloop invariant x >= (x - 43);\nloop invariant x >= (x - 44);\nloop invariant x >= (x - 45);\nloop invariant x >= (x - 46);\nloop invariant x >= (x - 47);\nloop invariant x >= (x - 48);\nloop invariant x >= (x - 49);\nloop invariant x >= (x - 50);\nloop invariant x >= (x - 51);\nloop invariant x >= (x - 52);\nloop invariant x >= (x - 53);\nloop invariant x >= (x - 54);\nloop invariant x >= (x - 55);\nloop invariant x >= (x - 56);\nloop invariant x >= (x - 57);\nloop invariant x >= (x - 58);\nloop invariant x >= (x - 59);\nloop invariant x >= (x - 60);\nloop invariant x >= (x - 61);\nloop invariant x >= (x - 62);\nloop invariant x >= (x - 63);\nloop invariant x >= (x - 64);\nloop invariant x >= (x - 65);\nloop invariant x >= (x - 66);\nloop invariant x >= (x - 67);\nloop invariant x >= (x - 68);\nloop invariant x >= (x - 69);\nloop invariant x >= (x - 70);\nloop invariant x >= (x - 71);\nloop invariant x >= (x - 72);\nloop invariant x >= (x - 73);\nloop invariant x >= (x - 74);\nloop invariant x >= (x - 75);\nloop invariant x >= (x - 76);\nloop invariant x >= (x - 77);\nloop invariant x >= (x - 78);\nloop invariant x >= (x - 79);\nloop invariant x >= (x - 80);\nloop invariant x >= (x - 81);\nloop invariant x >= (x - 82);\nloop invariant x >= (x - 83);\nloop invariant x >= (x - 84);\nloop invariant x >= (x - 85);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x <= 50 ==> x' >= 0;\nloop invariant !unknown_bool() ==> x' = x;\nloop invariant unknown_bool() ==> x' = x + 1;\nloop invariant !unknown_bool() && x == 0 ==> x' = x + 1;\nloop invariant unknown_bool() && x == 0 ==> x' = x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == 0 ==> x >= 1;\nloop invariant x > 50 ==> x >= 51;\nloop invariant !unknown_bool() ==> x > 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0 && x <= 50;\nloop invariant x == 0 ==> (x - 1) < 0;\nloop invariant x != 0 ==> (x - 1) >= 0;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) > 1;\nloop invariant x == 0 ==> (x - 1) == -1;\nloop invariant x != 0 ==> (x - 1) < 50;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) < 51;\nloop invariant x == 0 ==> (x - 1) == -1;\nloop invariant x != 0 ==> (x - 1) < 50;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x > 50 ==> x == 50;\nloop invariant x == 0 ==> x == 1;\nloop invariant x < 50 ==> x > 0 && x < 50 && x != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 50;\nloop invariant i4: x > 50 ==> x == 50;\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 50;\nloop invariant x == 0 ==> unknown_bool() == 0;\nloop invariant x > 0 ==> unknown_bool() == 1;\nloop invariant x > 50 ==> unknown_bool() == 1;\nloop invariant x < 0 ==> unknown_bool() == 0;\nloop invariant x == 0 ==> unknown_bool() == 0;\nloop invariant x > 0 ==> unknown_bool() == 1;\nloop invariant x > 50 ==> unknown_bool() == 1;\nloop invariant x < 0 ==> unknown_bool() == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant (x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0);\nloop invariant x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: x <= 50;\nloop invariant i3: (x >= 0 ==> x <= 50);\nloop invariant i4: (x <= 50 ==> x >= 0);\nloop invariant i5: x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i6: x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i7: x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i8: x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i9: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i10: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i11: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i12: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i13: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i14: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i15: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i16: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i17: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i18: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i19: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i20: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i21: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i22: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i23: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i24: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i25: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i26: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= (x - 1) * (x - 1) / 2 + 1;\nloop invariant x <= (x + 1) * (x + 1) / 2 - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x <= 50 ==> !unknown_bool();\nloop invariant unknown_bool() ==> x <= 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == y ==> x == y + 1;\nloop invariant x != y ==> x == y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 50;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\nloop invariant x <= 50;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 50;\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == (50 - (x - (x - 1) + (x - 2) + ... + 1));\nloop invariant x >= (x - 1) + (x - 2) + ... + 1;\nloop invariant x >= (x - 1);\nloop invariant x >= (x - 2);\nloop invariant x >= (x - 3);\nloop invariant x >= (x - 4);\nloop invariant x >= (x - 5);\nloop invariant x >= (x - 6);\nloop invariant x >= (x - 7);\nloop invariant x >= (x - 8);\nloop invariant x >= (x - 9);\nloop invariant x >= (x - 10);\nloop invariant x >= (x - 11);\nloop invariant x >= (x - 12);\nloop invariant x >= (x - 13);\nloop invariant x >= (x - 14);\nloop invariant x >= (x - 15);\nloop invariant x >= (x - 16);\nloop invariant x >= (x - 17);\nloop invariant x >= (x - 18);\nloop invariant x >= (x - 19);\nloop invariant x >= (x - 20);\nloop invariant x >= (x - 21);\nloop invariant x >= (x - 22);\nloop invariant x >= (x - 23);\nloop invariant x >= (x - 24);\nloop invariant x >= (x - 25);\nloop invariant x >= (x - 26);\nloop invariant x >= (x - 27);\nloop invariant x >= (x - 28);\nloop invariant x >= (x - 29);\nloop invariant x >= (x - 30);\nloop invariant x >= (x - 31);\nloop invariant x >= (x - 32);\nloop invariant x >= (x - 33);\nloop invariant x >= (x - 34);\nloop invariant x >= (x - 35);\nloop invariant x >= (x - 36);\nloop invariant x >= (x - 37);\nloop invariant x >= (x - 38);\nloop invariant x >= (x - 39);\nloop invariant x >= (x - 40);\nloop invariant x >= (x - 41);\nloop invariant x >= (x - 42);\nloop invariant x >= (x - 43);\nloop invariant x >= (x - 44);\nloop invariant x >= (x - 45);\nloop invariant x >= (x - 46);\nloop invariant x >= (x - 47);\nloop invariant x >= (x - 48);\nloop invariant x >= (x - 49);\nloop invariant x >= (x - 50);\nloop invariant x >= (x - 51);\nloop invariant x >= (x - 52);\nloop invariant x >= (x - 53);\nloop invariant x >= (x - 54);\nloop invariant x >= (x - 55);\nloop invariant x >= (x - 56);\nloop invariant x >= (x - 57);\nloop invariant x >= (x - 58);\nloop invariant x >= (x - 59);\nloop invariant x >= (x - 60);\nloop invariant x >= (x - 61);\nloop invariant x >= (x - 62);\nloop invariant x >= (x - 63);\nloop invariant x >= (x - 64);\nloop invariant x >= (x - 65);\nloop invariant x >= (x - 66);\nloop invariant x >= (x - 67);\nloop invariant x >= (x - 68);\nloop invariant x >= (x - 69);\nloop invariant x >= (x - 70);\nloop invariant x >= (x - 71);\nloop invariant x >= (x - 72);\nloop invariant x >= (x - 73);\nloop invariant x >= (x - 74);\nloop invariant x >= (x - 75);\nloop invariant x >= (x - 76);\nloop invariant x >= (x - 77);\nloop invariant x >= (x - 78);\nloop invariant x >= (x - 79);\nloop invariant x >= (x - 80);\nloop invariant x >= (x - 81);\nloop invariant x >= (x - 82);\nloop invariant x >= (x - 83);\nloop invariant x >= (x - 84);\nloop invariant x >= (x - 85);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\n\nloop invariant i4: x >= (x - 1);\nloop invariant i5: x >= (x - 2);\nloop invariant i6: x >= (x - 3);\nloop invariant i7: x >= (x - 4);\nloop invariant i8: x >= (x - 5);\nloop invariant i9: x >= (x - 6);\nloop invariant i10: x >= (x - 7);\nloop invariant i11: x >= (x - 8);\nloop invariant i12: x >= (x - 9);\nloop invariant i13: x >= (x - 10);\nloop invariant i14: x >= (x - 11);\nloop invariant i15: x >= (x - 12);\nloop invariant i16: x >= (x - 13);\nloop invariant i17: x >= (x - 14);\nloop invariant i18: x >= (x - 15);\nloop invariant i19: x >= (x - 16);\nloop invariant i20: x >= (x - 17);\nloop invariant i21: x >= (x - 18);\nloop invariant i22: x >= (x - 19);\nloop invariant i23: x >= (x - 20);\nloop invariant i24: x >= (x - 21);\nloop invariant i25: x >= (x - 22);\nloop invariant i26: x >= (x - 23);\nloop invariant i27: x >= (x - 24);\nloop invariant i28: x >= (x - 25);\nloop invariant i29: x >= (x - 26);\nloop invariant i30: x >= (x - 27);\nloop invariant i31: x >= (x - 28);\nloop invariant i32: x >= (x - 29);\nloop invariant i33: x >= (x - 30);\nloop invariant i34: x >= (x - 31);\nloop invariant i35: x >= (x - 32);\nloop invariant i36: x >= (x - 33);\nloop invariant i37: x >= (x - 34);\nloop invariant i38: x >= (x - 35);\nloop invariant i39: x >= (x - 36);\nloop invariant i40: x >= (x - 37);\nloop invariant i41: x >= (x - 38);\nloop invariant i42: x >= (x - 39);\nloop invariant i43: x >= (x - 40);\nloop invariant i44: x >= (x - 41);\nloop invariant i45: x >= (x - 42);\nloop invariant i46: x >= (x - 43);\nloop invariant i47: x >= (x - 44);\nloop invariant i48: x >= (x - 45);\nloop invariant i49: x >= (x - 46);\nloop invariant i50: x >= (x - 47);\nloop invariant i51: x >= (x - 48);\nloop invariant i52: x >= (x - 49);\nloop invariant i53: x >= (x - 50);\nloop invariant i54: x >= (x - 51);\nloop invariant i55: x >= (x - 52);\nloop invariant i56: x >= (x - 53);\nloop invariant i57: x >= (x - 54);\nloop invariant i58: x >= (x - 55);\nloop invariant i59: x >= (x - 56);\nloop invariant i60: x >= (x - 57);\nloop invariant i61: x >= (x - 58);\nloop invariant i62: x >= (x - 59);\nloop invariant i63: x >= (x - 60);\nloop invariant i64: x >= (x - 61);\nloop invariant i65: x >= (x - 62);\nloop invariant i66: x >= (x - 63);\nloop invariant i67: x >= (x - 64);\nloop invariant i68: x >= (x - 65);\nloop invariant i69: x >= (x - 66);\nloop invariant i70: x >= (x - 67);\nloop invariant i71: x >= (x - 68);\nloop invariant i72: x >= (x - 69);\nloop invariant i73: x >= (x - 70);\nloop invariant i74: x >= (x - 71);\nloop invariant i75: x >= (x - 72);\nloop invariant i76: x >= (x - 73);\nloop invariant i77: x >= (x - 74);\nloop invariant i78: x >= (x - 75);\nloop invariant i79: x >= (x - 76);\nloop invariant i80: x >= (x - 77);\nloop invariant i81: x >= (x - 78);\nloop invariant i82: x >= (x - 79);\nloop invariant i83: x >= (x - 80);\nloop invariant i84: x >= (x - 81);\nloop invariant i85: x >= (x - 82);\nloop invariant i86: x >= (x - 83);\nloop invariant i87: x >= (x - 84);\nloop invariant i88: x >= (x - 85);\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x <= 50 ==> x' >= 0;\nloop invariant !unknown_bool() ==> x' = x;\nloop invariant unknown_bool() ==> x' = x + 1;\nloop invariant !unknown_bool() && x == 0 ==> x' = x + 1;\nloop invariant unknown_bool() && x == 0 ==> x' = x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: x <= 50 ==> x' >= 0;\nloop invariant i3: !unknown_bool() ==> x' = x;\nloop invariant i4: unknown_bool() ==> x' = x + 1;\nloop invariant i5: !unknown_bool() && x == 0 ==> x' = x + 1;\nloop invariant i6: unknown_bool() && x == 0 ==> x' = x;\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant x == 0 ==> x >= 1;\nloop invariant x > 50 ==> x >= 51;\nloop invariant !unknown_bool() ==> x > 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\n\nloop invariant i3: x > 50 ==> x >= 51;\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\nloop invariant (x == 0) ==> (x == 1);\nloop invariant !(x > 50) ==> (x >= 1);\nloop invariant !(x == 0) ==> (x <= 49);\nloop invariant (x > 50) ==> (x == 50);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: (x > 50) ==> (x == 50);\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0 && x <= 50;\nloop invariant x == 0 ==> (x - 1) < 0;\nloop invariant x != 0 ==> (x - 1) >= 0;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) > 1;\nloop invariant x == 0 ==> (x - 1) == -1;\nloop invariant x != 0 ==> (x - 1) < 50;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) < 51;\nloop invariant x == 0 ==> (x - 1) == -1;\nloop invariant x != 0 ==> (x - 1) < 50;\nloop invariant x == 0 ==> (x + 1) == 1;\nloop invariant x != 0 ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\nloop invariant (x != 0) ==> (x + 1) < 51;\nloop invariant (x == 0) ==> (x - 1) == -1;\nloop invariant (x != 0) ==> (x - 1) < 50;\nloop invariant (x == 0) ==> (x + 1) == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: x >= 0 && x <= 50;\nloop invariant i2: x == 0 ==> (x - 1) < 0;\nloop invariant i3: x != 0 ==> (x - 1) >= 0;\nloop invariant i4: x == 0 ==> (x + 1) == 1;\nloop invariant i5: x != 0 ==> (x + 1) > 1;\nloop invariant i6: x == 0 ==> (x - 1) == -1;\nloop invariant i7: x != 0 ==> (x - 1) < 50;\n\nloop invariant i9: (x == 0) ==> (x - 1) == -1;\nloop invariant i10: (x != 0) ==> (x - 1) < 50;\nloop invariant i11: (x == 0) ==> (x + 1) == 1;\n\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "No CSV output dump found from Frama-C",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 50;\nloop invariant i4: x > 50 ==> x == 50;\nloop invariant i5: x == 0 ==> x == 1;\nloop invariant i6: x < 50 ==> x > 0 && x < 50 && x != 0;\nloop invariant i7: 1 <= x <= 50;\nloop invariant i8: x == 0 ==> unknown_bool() == 0;\nloop invariant i9: x > 0 ==> unknown_bool() == 1;\nloop invariant i10: x > 50 ==> unknown_bool() == 1;\nloop invariant i11: x < 0 ==> unknown_bool() == 0;\nloop invariant i12: i1;\nloop invariant i13: i2;\nloop invariant i14: i3;\nloop invariant i15: i4;\nloop invariant i16: i5;\nloop invariant i17: i6;\nloop invariant i18: i7;\nloop invariant i19: i8;\nloop invariant i20: i9;\nloop invariant i21: i10;\nloop invariant i22: i11;\nloop invariant i23: i12;\nloop invariant i24: i13;\nloop invariant i25: i14;\nloop invariant i26: i15;\nloop invariant i27: i16;\nloop invariant i28: i17;\nloop invariant i29: i18;\nloop invariant i30: i19;\nloop invariant i31: i20;\nloop invariant i32: i21;\nloop invariant i33: i22;\nloop invariant i34: i23;\nloop invariant i35: i24;\nloop invariant i36: i25;\nloop invariant i37: i26;\nloop invariant i38: i27;\nloop invariant i39: i28;\nloop invariant i40: i29;\nloop invariant i41: i30;\nloop invariant i42: i31;\nloop invariant i43: i32;\nloop invariant i44: i33;\nloop invariant i45: i34;\nloop invariant i46: i35;\nloop invariant i47: i36;\nloop invariant i48: i37;\nloop invariant i49: i38;\nloop invariant i50: i39;\nloop invariant i51: i40;\nloop invariant i52: i41;\nloop invariant i53: i42;\nloop invariant i54: i43;\nloop invariant i55: i44;\nloop invariant i56: i45;\nloop invariant i57: i46;\nloop invariant i58: i47;\nloop invariant i59: i48;\nloop invariant i60: i49;\nloop invariant i61: i50;\nloop invariant i62: i51;\nloop invariant i63: i52;\nloop invariant i64: i53;\nloop invariant i65: i54;\nloop invariant i66: i55;\nloop invariant i67: i56;\nloop invariant i68: i57;\nloop invariant i69: i58;\nloop invariant i70: i59;\nloop invariant i71: i60;\nloop invariant i72: i61;\nloop invariant i73: i62;\nloop invariant i74: i63;\nloop invariant i75: i64;\nloop invariant i76: i65;\nloop invariant i77: i66;\nloop invariant i78: i67;\nloop invariant i79: i68;\nloop invariant i80: i69;\nloop invariant i81: i70;\nloop invariant i82: i71;\nloop invariant i83: i72;\nloop invariant i84: i73;\nloop invariant i85: i74;\nloop invariant i86: i75;\nloop invariant i87: i76;\nloop invariant i88: i77;\nloop invariant i89: i78;\nloop invariant i90: i79;\nloop invariant i91: i80;\nloop invariant i92: i81;\nloop invariant i93: i82;\nloop invariant i94: i83;\nloop invariant i95: i84;\nloop invariant i96: i85;\nloop invariant i97: i86;\nloop invariant i98: i87;\nloop invariant i99: i88;\nloop invariant i100: i89;\nloop invariant i101: i90;\nloop invariant i102: i91;\nloop invariant i103: i92;\nloop invariant i104: i93;\nloop invariant i105: i94;\nloop invariant i106: i95;\nloop invariant i107: i96;\nloop invariant i108: i97;\nloop invariant i109: i98;\nloop invariant i110: i99;\nloop invariant i111: i100;\nloop invariant i112: i101;\nloop invariant i113: i102;\nloop invariant i114: i103;\nloop invariant i115: i104;\nloop invariant i116: i105;\nloop invariant i117: i106;\nloop invariant i118: i107;\nloop invariant i119: i108;\nloop invariant i120: i109;\nloop invariant i121: i110;\nloop invariant i122: i111;\nloop invariant i123: i112;\nloop invariant i124: i113;\nloop invariant i125: i114;\nloop invariant i126: i115;\nloop invariant i127: i116;\nloop invariant i128: i117;\nloop invariant i129: i118;\nloop invariant i130: i119;\nloop invariant i131: i120;\nloop invariant i132: i121;\nloop invariant i133: i122;\nloop invariant i134: i123;\nloop invariant i135: i124;\nloop invariant i136: i125;\nloop invariant i137: i126;\nloop invariant i138: i127;\nloop invariant i139: i128;\nloop invariant i140: i129;\nloop invariant i141: i130;\nloop invariant i142: i131;\nloop invariant i143: i132;\nloop invariant i144: i133;\nloop invariant i145: i134;\nloop invariant i146: i135;\nloop invariant i147: i136;\nloop invariant i148: i137;\nloop invariant i149: i138;\nloop invariant i150: i139;\nloop invariant i151: i140;\nloop invariant i152: i141;\nloop invariant i153: i142;\nloop invariant i154: i143;\nloop invariant i155: i144;\nloop invariant i156: i145;\nloop invariant i157: i146;\nloop invariant i158: i147;\nloop invariant i159: i148;\nloop invariant i160: i149;\nloop invariant i161: i150;\nloop invariant i162: i151;\nloop invariant i163: i152;\nloop invariant i164: i153;\nloop invariant i165: i154;\nloop invariant i166: i155;\nloop invariant i167: i156;\nloop invariant i168: i157;\nloop invariant i169: i158;\nloop invariant i170: (x >= 0 ==> x <= 50);\nloop invariant i171: (x <= 50 ==> x >= 0);\nloop invariant i172: x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i173: x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i174: x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i175: x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i176: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i177: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i178: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i179: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i180: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i181: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i182: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i183: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i184: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i185: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i186: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i187: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i188: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i189: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i190: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i191: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i192: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i193: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i194: x >= (x - 1) * (x - 1) / 2 + 1;\nloop invariant i195: x <= (x + 1) * (x + 1) / 2 - 1;\nloop invariant i196: x <= 50 ==> !unknown_bool();\nloop invariant i197: unknown_bool() ==> x <= 50;\nloop invariant i198: x == y ==> x == y + 1;\nloop invariant i199: x != y ==> x == y - 1;\nloop invariant i200: x >= (1 + (y - 1) * y / 2);\nloop invariant i201: 0 <= y <= 50;\nloop invariant i202: x == (50 - (x - (x - 1) + (x - 2) + ... + 1));\nloop invariant i203: x >= (x - 1) + (x - 2) + ... + 1;\nloop invariant i204: x >= (x - 1);\nloop invariant i205: x >= (x - 2);\nloop invariant i206: x >= (x - 3);\nloop invariant i207: x >= (x - 4);\nloop invariant i208: x >= (x - 5);\nloop invariant i209: x >= (x - 6);\nloop invariant i210: x >= (x - 7);\nloop invariant i211: x >= (x - 8);\nloop invariant i212: x >= (x - 9);\nloop invariant i213: x >= (x - 10);\nloop invariant i214: x >= (x - 11);\nloop invariant i215: x >= (x - 12);\nloop invariant i216: x >= (x - 13);\nloop invariant i217: x >= (x - 14);\nloop invariant i218: x >= (x - 15);\nloop invariant i219: x >= (x - 16);\nloop invariant i220: x >= (x - 17);\nloop invariant i221: x >= (x - 18);\nloop invariant i222: x >= (x - 19);\nloop invariant i223: x >= (x - 20);\nloop invariant i224: x >= (x - 21);\nloop invariant i225: x >= (x - 22);\nloop invariant i226: x >= (x - 23);\nloop invariant i227: x >= (x - 24);\nloop invariant i228: x >= (x - 25);\nloop invariant i229: x >= (x - 26);\nloop invariant i230: x >= (x - 27);\nloop invariant i231: x >= (x - 28);\nloop invariant i232: x >= (x - 29);\nloop invariant i233: x >= (x - 30);\nloop invariant i234: x >= (x - 31);\nloop invariant i235: x >= (x - 32);\nloop invariant i236: x >= (x - 33);\nloop invariant i237: x >= (x - 34);\nloop invariant i238: x >= (x - 35);\nloop invariant i239: x >= (x - 36);\nloop invariant i240: x >= (x - 37);\nloop invariant i241: x >= (x - 38);\nloop invariant i242: x >= (x - 39);\nloop invariant i243: x >= (x - 40);\nloop invariant i244: x >= (x - 41);\nloop invariant i245: x >= (x - 42);\nloop invariant i246: x >= (x - 43);\nloop invariant i247: x >= (x - 44);\nloop invariant i248: x >= (x - 45);\nloop invariant i249: x >= (x - 46);\nloop invariant i250: x >= (x - 47);\nloop invariant i251: x >= (x - 48);\nloop invariant i252: x >= (x - 49);\nloop invariant i253: x >= (x - 50);\nloop invariant i254: x >= (x - 51);\nloop invariant i255: x >= (x - 52);\nloop invariant i256: x >= (x - 53);\nloop invariant i257: x >= (x - 54);\nloop invariant i258: x >= (x - 55);\nloop invariant i259: x >= (x - 56);\nloop invariant i260: x >= (x - 57);\nloop invariant i261: x >= (x - 58);\nloop invariant i262: x >= (x - 59);\nloop invariant i263: x >= (x - 60);\nloop invariant i264: x >= (x - 61);\nloop invariant i265: x >= (x - 62);\nloop invariant i266: x >= (x - 63);\nloop invariant i267: x >= (x - 64);\nloop invariant i268: x >= (x - 65);\nloop invariant i269: x >= (x - 66);\nloop invariant i270: x >= (x - 67);\nloop invariant i271: x >= (x - 68);\nloop invariant i272: x >= (x - 69);\nloop invariant i273: x >= (x - 70);\nloop invariant i274: x >= (x - 71);\nloop invariant i275: x >= (x - 72);\nloop invariant i276: x >= (x - 73);\nloop invariant i277: x >= (x - 74);\nloop invariant i278: x >= (x - 75);\nloop invariant i279: x >= (x - 76);\nloop invariant i280: x >= (x - 77);\nloop invariant i281: x >= (x - 78);\nloop invariant i282: x >= (x - 79);\nloop invariant i283: x >= (x - 80);\nloop invariant i284: x >= (x - 81);\nloop invariant i285: x >= (x - 82);\nloop invariant i286: x >= (x - 83);\nloop invariant i287: x >= (x - 84);\nloop invariant i288: x >= (x - 85);\nloop invariant i289: x <= 50 ==> x' >= 0;\nloop invariant i290: !unknown_bool() ==> x' = x;\nloop invariant i291: unknown_bool() ==> x' = x + 1;\nloop invariant i292: !unknown_bool() && x == 0 ==> x' = x + 1;\nloop invariant i293: unknown_bool() && x == 0 ==> x' = x;\nloop invariant i294: x == 0 ==> x >= 1;\nloop invariant i295: x > 50 ==> x >= 51;\nloop invariant i296: !unknown_bool() ==> x > 50;\nloop invariant i297: (x > 50) ==> (x == 50);\nloop invariant i298: (x == 0) ==> (x == 1);\nloop invariant i299: !(x > 50) ==> (x >= 1);\nloop invariant i300: !(x == 0) ==> (x <= 49);\nloop invariant i301: x >= 0 && x <= 50;\nloop invariant i302: x == 0 ==> (x - 1) < 0;\nloop invariant i303: x != 0 ==> (x - 1) >= 0;\nloop invariant i304: x == 0 ==> (x + 1) == 1;\nloop invariant i305: x != 0 ==> (x + 1) > 1;\nloop invariant i306: x == 0 ==> (x - 1) == -1;\nloop invariant i307: x != 0 ==> (x - 1) < 50;\nloop invariant i308: x != 0 ==> (x + 1) < 51;\nloop invariant i309: (x == 0) ==> (x - 1) == -1;\nloop invariant i310: (x != 0) ==> (x - 1) < 50;\nloop invariant i311: (x == 0) ==> (x + 1) == 1;\nloop invariant i312: (x != 0) ==> (x + 1) < 51;\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 2,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!((x>=0) && (x<=50))) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 50;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 50;\nloop invariant i4: x > 50 ==> x == 50;\nloop invariant i5: x == 0 ==> x == 1;\nloop invariant i6: x < 50 ==> x > 0 && x < 50 && x != 0;\nloop invariant i7: 1 <= x <= 50;\nloop invariant i8: x == 0 ==> unknown_bool() == 0;\nloop invariant i9: x > 0 ==> unknown_bool() == 1;\nloop invariant i10: x > 50 ==> unknown_bool() == 1;\nloop invariant i11: x < 0 ==> unknown_bool() == 0;\nloop invariant i12: i1;\nloop invariant i13: i2;\nloop invariant i14: i3;\nloop invariant i15: i4;\nloop invariant i16: i5;\nloop invariant i17: i6;\nloop invariant i18: i7;\nloop invariant i19: i8;\nloop invariant i20: i9;\nloop invariant i21: i10;\nloop invariant i22: i11;\nloop invariant i23: i12;\nloop invariant i24: i13;\nloop invariant i25: i14;\nloop invariant i26: i15;\nloop invariant i27: i16;\nloop invariant i28: i17;\nloop invariant i29: i18;\nloop invariant i30: i19;\nloop invariant i31: i20;\nloop invariant i32: i21;\nloop invariant i33: i22;\nloop invariant i34: i23;\nloop invariant i35: i24;\nloop invariant i36: i25;\nloop invariant i37: i26;\nloop invariant i38: i27;\nloop invariant i39: i28;\nloop invariant i40: i29;\nloop invariant i41: i30;\nloop invariant i42: i31;\nloop invariant i43: i32;\nloop invariant i44: i33;\nloop invariant i45: i34;\nloop invariant i46: i35;\nloop invariant i47: i36;\nloop invariant i48: i37;\nloop invariant i49: i38;\nloop invariant i50: i39;\nloop invariant i51: i40;\nloop invariant i52: i41;\nloop invariant i53: i42;\nloop invariant i54: i43;\nloop invariant i55: i44;\nloop invariant i56: i45;\nloop invariant i57: i46;\nloop invariant i58: i47;\nloop invariant i59: i48;\nloop invariant i60: i49;\nloop invariant i61: i50;\nloop invariant i62: i51;\nloop invariant i63: i52;\nloop invariant i64: i53;\nloop invariant i65: i54;\nloop invariant i66: i55;\nloop invariant i67: i56;\nloop invariant i68: i57;\nloop invariant i69: i58;\nloop invariant i70: i59;\nloop invariant i71: i60;\nloop invariant i72: i61;\nloop invariant i73: i62;\nloop invariant i74: i63;\nloop invariant i75: i64;\nloop invariant i76: i65;\nloop invariant i77: i66;\nloop invariant i78: i67;\nloop invariant i79: i68;\nloop invariant i80: i69;\nloop invariant i81: i70;\nloop invariant i82: i71;\nloop invariant i83: i72;\nloop invariant i84: i73;\nloop invariant i85: i74;\nloop invariant i86: i75;\nloop invariant i87: i76;\nloop invariant i88: i77;\nloop invariant i89: i78;\nloop invariant i90: i79;\nloop invariant i91: i80;\nloop invariant i92: i81;\nloop invariant i93: i82;\nloop invariant i94: i83;\nloop invariant i95: i84;\nloop invariant i96: i85;\nloop invariant i97: i86;\nloop invariant i98: i87;\nloop invariant i99: i88;\nloop invariant i100: i89;\nloop invariant i101: i90;\nloop invariant i102: i91;\nloop invariant i103: i92;\nloop invariant i104: i93;\nloop invariant i105: i94;\nloop invariant i106: i95;\nloop invariant i107: i96;\nloop invariant i108: i97;\nloop invariant i109: i98;\nloop invariant i110: i99;\nloop invariant i111: i100;\nloop invariant i112: i101;\nloop invariant i113: i102;\nloop invariant i114: i103;\nloop invariant i115: i104;\nloop invariant i116: i105;\nloop invariant i117: i106;\nloop invariant i118: i107;\nloop invariant i119: i108;\nloop invariant i120: i109;\nloop invariant i121: i110;\nloop invariant i122: i111;\nloop invariant i123: i112;\nloop invariant i124: i113;\nloop invariant i125: i114;\nloop invariant i126: i115;\nloop invariant i127: i116;\nloop invariant i128: i117;\nloop invariant i129: i118;\nloop invariant i130: i119;\nloop invariant i131: i120;\nloop invariant i132: i121;\nloop invariant i133: i122;\nloop invariant i134: i123;\nloop invariant i135: i124;\nloop invariant i136: i125;\nloop invariant i137: i126;\nloop invariant i138: i127;\nloop invariant i139: i128;\nloop invariant i140: i129;\nloop invariant i141: i130;\nloop invariant i142: i131;\nloop invariant i143: i132;\nloop invariant i144: i133;\nloop invariant i145: i134;\nloop invariant i146: i135;\nloop invariant i147: i136;\nloop invariant i148: i137;\nloop invariant i149: i138;\nloop invariant i150: i139;\nloop invariant i151: i140;\nloop invariant i152: i141;\nloop invariant i153: i142;\nloop invariant i154: i143;\nloop invariant i155: i144;\nloop invariant i156: i145;\nloop invariant i157: i146;\nloop invariant i158: i147;\nloop invariant i159: i148;\nloop invariant i160: i149;\nloop invariant i161: i150;\nloop invariant i162: i151;\nloop invariant i163: i152;\nloop invariant i164: i153;\nloop invariant i165: i154;\nloop invariant i166: i155;\nloop invariant i167: i156;\nloop invariant i168: i157;\nloop invariant i169: i158;\nloop invariant i170: (x >= 0 ==> x <= 50);\nloop invariant i171: (x <= 50 ==> x >= 0);\nloop invariant i172: x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i173: x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i174: x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50;\nloop invariant i175: x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0;\nloop invariant i176: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i177: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i178: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i179: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i180: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i181: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i182: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i183: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i184: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i185: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i186: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i187: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i188: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i189: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i190: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i191: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i192: (x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50);\nloop invariant i193: (x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0 ==> x <= 50 ==> x >= 0);\nloop invariant i194: x >= (x - 1) * (x - 1) / 2 + 1;\nloop invariant i195: x <= (x + 1) * (x + 1) / 2 - 1;\nloop invariant i196: x <= 50 ==> !unknown_bool();\nloop invariant i197: unknown_bool() ==> x <= 50;\nloop invariant i198: x == y ==> x == y + 1;\nloop invariant i199: x != y ==> x == y - 1;\nloop invariant i200: x >= (1 + (y - 1) * y / 2);\nloop invariant i201: 0 <= y <= 50;\nloop invariant i202: x == (50 - (x - (x - 1) + (x - 2) + ... + 1));\nloop invariant i203: x >= (x - 1) + (x - 2) + ... + 1;\nloop invariant i204: x >= (x - 1);\nloop invariant i205: x >= (x - 2);\nloop invariant i206: x >= (x - 3);\nloop invariant i207: x >= (x - 4);\nloop invariant i208: x >= (x - 5);\nloop invariant i209: x >= (x - 6);\nloop invariant i210: x >= (x - 7);\nloop invariant i211: x >= (x - 8);\nloop invariant i212: x >= (x - 9);\nloop invariant i213: x >= (x - 10);\nloop invariant i214: x >= (x - 11);\nloop invariant i215: x >= (x - 12);\nloop invariant i216: x >= (x - 13);\nloop invariant i217: x >= (x - 14);\nloop invariant i218: x >= (x - 15);\nloop invariant i219: x >= (x - 16);\nloop invariant i220: x >= (x - 17);\nloop invariant i221: x >= (x - 18);\nloop invariant i222: x >= (x - 19);\nloop invariant i223: x >= (x - 20);\nloop invariant i224: x >= (x - 21);\nloop invariant i225: x >= (x - 22);\nloop invariant i226: x >= (x - 23);\nloop invariant i227: x >= (x - 24);\nloop invariant i228: x >= (x - 25);\nloop invariant i229: x >= (x - 26);\nloop invariant i230: x >= (x - 27);\nloop invariant i231: x >= (x - 28);\nloop invariant i232: x >= (x - 29);\nloop invariant i233: x >= (x - 30);\nloop invariant i234: x >= (x - 31);\nloop invariant i235: x >= (x - 32);\nloop invariant i236: x >= (x - 33);\nloop invariant i237: x >= (x - 34);\nloop invariant i238: x >= (x - 35);\nloop invariant i239: x >= (x - 36);\nloop invariant i240: x >= (x - 37);\nloop invariant i241: x >= (x - 38);\nloop invariant i242: x >= (x - 39);\nloop invariant i243: x >= (x - 40);\nloop invariant i244: x >= (x - 41);\nloop invariant i245: x >= (x - 42);\nloop invariant i246: x >= (x - 43);\nloop invariant i247: x >= (x - 44);\nloop invariant i248: x >= (x - 45);\nloop invariant i249: x >= (x - 46);\nloop invariant i250: x >= (x - 47);\nloop invariant i251: x >= (x - 48);\nloop invariant i252: x >= (x - 49);\nloop invariant i253: x >= (x - 50);\nloop invariant i254: x >= (x - 51);\nloop invariant i255: x >= (x - 52);\nloop invariant i256: x >= (x - 53);\nloop invariant i257: x >= (x - 54);\nloop invariant i258: x >= (x - 55);\nloop invariant i259: x >= (x - 56);\nloop invariant i260: x >= (x - 57);\nloop invariant i261: x >= (x - 58);\nloop invariant i262: x >= (x - 59);\nloop invariant i263: x >= (x - 60);\nloop invariant i264: x >= (x - 61);\nloop invariant i265: x >= (x - 62);\nloop invariant i266: x >= (x - 63);\nloop invariant i267: x >= (x - 64);\nloop invariant i268: x >= (x - 65);\nloop invariant i269: x >= (x - 66);\nloop invariant i270: x >= (x - 67);\nloop invariant i271: x >= (x - 68);\nloop invariant i272: x >= (x - 69);\nloop invariant i273: x >= (x - 70);\nloop invariant i274: x >= (x - 71);\nloop invariant i275: x >= (x - 72);\nloop invariant i276: x >= (x - 73);\nloop invariant i277: x >= (x - 74);\nloop invariant i278: x >= (x - 75);\nloop invariant i279: x >= (x - 76);\nloop invariant i280: x >= (x - 77);\nloop invariant i281: x >= (x - 78);\nloop invariant i282: x >= (x - 79);\nloop invariant i283: x >= (x - 80);\nloop invariant i284: x >= (x - 81);\nloop invariant i285: x >= (x - 82);\nloop invariant i286: x >= (x - 83);\nloop invariant i287: x >= (x - 84);\nloop invariant i288: x >= (x - 85);\nloop invariant i289: x <= 50 ==> x' >= 0;\nloop invariant i290: !unknown_bool() ==> x' = x;\nloop invariant i291: unknown_bool() ==> x' = x + 1;\nloop invariant i292: !unknown_bool() && x == 0 ==> x' = x + 1;\nloop invariant i293: unknown_bool() && x == 0 ==> x' = x;\nloop invariant i294: x == 0 ==> x >= 1;\nloop invariant i295: x > 50 ==> x >= 51;\nloop invariant i296: !unknown_bool() ==> x > 50;\nloop invariant i297: (x > 50) ==> (x == 50);\nloop invariant i298: (x == 0) ==> (x == 1);\nloop invariant i299: !(x > 50) ==> (x >= 1);\nloop invariant i300: !(x == 0) ==> (x <= 49);\nloop invariant i301: x >= 0 && x <= 50;\nloop invariant i302: x == 0 ==> (x - 1) < 0;\nloop invariant i303: x != 0 ==> (x - 1) >= 0;\nloop invariant i304: x == 0 ==> (x + 1) == 1;\nloop invariant i305: x != 0 ==> (x + 1) > 1;\nloop invariant i306: x == 0 ==> (x - 1) == -1;\nloop invariant i307: x != 0 ==> (x - 1) < 50;\nloop invariant i308: x != 0 ==> (x + 1) < 51;\nloop invariant i309: (x == 0) ==> (x - 1) == -1;\nloop invariant i310: (x != 0) ==> (x - 1) < 50;\nloop invariant i311: (x == 0) ==> (x + 1) == 1;\nloop invariant i312: (x != 0) ==> (x + 1) < 51;\n*/\nwhile (unknown_bool()) {\n    if (x>50) x++;\n    if (x == 0) { x ++;\n    } else x--;\n  }\n  {;\n//@ assert((x>=0) && (x<=50));\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "skipped": [],
        "total": 169,
        "success_count": 149,
        "failure_count": 20,
        "success_rate": 0.8816568047337278
    }
}