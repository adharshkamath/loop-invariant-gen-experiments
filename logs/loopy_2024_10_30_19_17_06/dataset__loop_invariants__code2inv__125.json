{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/125.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant x == i - j;\n*/\n```",
            "```\n/*@\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant y != 0;\nloop invariant x != 0;\nloop invariant x + y == i + j;\nloop invariant x - y == i - j;\nloop invariant (x - y) * (x + y) == (x * y) * 2;\nloop invariant (x - y) * (x + y) >= 0;\nloop invariant x >= y;\nloop invariant x >= j;\nloop invariant y >= i;\nloop invariant x - y == i - j;\nloop invariant x - y == i - j;\nloop invariant x + y == i + j;\nloop invariant x + y >= i + j;\nloop invariant x + y >= j + i;\nloop invariant x + y <= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y == i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant  0 <= x <= 1;\nloop invariant  0 <= y <= x;\nloop invariant  x >= (x - 1);\nloop invariant  y >= (y - 1);\nloop invariant  x >= y;\nloop invariant  x >= 0;\nloop invariant  y >= 0;\nloop invariant  x <= y;\nloop invariant  x <= 1;\nloop invariant  y <= x;\nloop invariant  y <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= x;\nloop invariant x >= (x - 1);\nloop invariant y >= (y - 1);\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant x <= 1;\nloop invariant y <= x;\nloop invariant y <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant i >= j;\nloop invariant (x - y) >= 0;\nloop invariant (y - x) <= 0;\nloop invariant (x - i) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (i - j) >= 0;\nloop invariant (x - j) >= 0;\nloop invariant (j - x) <= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= i;\nloop invariant i >= 0;\nloop invariant y <= (i - 1);\nloop invariant (x + y) <= i;\nloop invariant (x - 1) >= 0;\nloop invariant (y - 1) >= 0;\nloop invariant (x - y) >= 0;\nloop invariant (x - y) <= i;\nloop invariant (x + y) >= (2 * y);\nloop invariant (x + y) >= (2 * x);\nloop invariant (x + y) <= (2 * i);\nloop invariant (x + y) <= (2 * (i - 1));\nloop invariant (x + y) <= (2 * (i - 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - y;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - x);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1));\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y = x + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x = i - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x <= i;\nloop invariant j <= y;\nloop invariant x <= j;\nloop invariant x <= i + j;\nloop invariant x - y <= j;\nloop invariant x - y <= i;\nloop invariant x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\nloop invariant 0 <= i <= y;\nloop invariant x <= i;\nloop invariant j <= y;\nloop invariant x <= j;\nloop invariant x <= i + j;\nloop invariant x - y <= j;\nloop invariant x - y <= i;\nloop invariant x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= j;\nloop invariant 0 <= y <= j;\nloop invariant i <= j;\nloop invariant x + y <= j;\nloop invariant x - j <= j;\nloop invariant y - j <= j;\nloop invariant x + y - j <= j;\nloop invariant i - j <= j;\nloop invariant i - j <= x;\nloop invariant i - j <= y;\nloop invariant i - j <= x + y;\nloop invariant i - j <= x - j;\nloop invariant i - j <= y - j;\nloop invariant i - j <= x + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x != 0) ==> (y >= 0);\nloop invariant (x != 0) ==> (y >= (i - x));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x and x <= i;\nloop invariant 0 <= y and y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= (j + 1);\nloop invariant 0 <= j <= (i + 1);\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i == x || i == (x + 1);\nloop invariant j == y || j == (y + 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant x == i - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant y != 0;\nloop invariant x != 0;\nloop invariant x + y == i + j;\nloop invariant x - y == i - j;\nloop invariant (x - y) * (x + y) == (x * y) * 2;\nloop invariant (x - y) * (x + y) >= 0;\nloop invariant x >= y;\nloop invariant x >= j;\nloop invariant y >= i;\nloop invariant x - y == i - j;\nloop invariant x - y == i - j;\nloop invariant x + y == i + j;\nloop invariant x + y >= i + j;\nloop invariant x + y >= j + i;\nloop invariant x + y <= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y == i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x + y <= j + i;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: x - y == i - j;\n\n\n\n\n\n\nloop invariant i16: x + y <= i + j;\nloop invariant i17: x + y <= j + i;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant  0 <= x <= 1;\nloop invariant  0 <= y <= x;\nloop invariant  x >= (x - 1);\nloop invariant  y >= (y - 1);\nloop invariant  x >= y;\nloop invariant  x >= 0;\nloop invariant  y >= 0;\nloop invariant  x <= y;\nloop invariant  x <= 1;\nloop invariant  y <= x;\nloop invariant  y <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= x;\nloop invariant x >= (x - 1);\nloop invariant y >= (y - 1);\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant x <= 1;\nloop invariant y <= x;\nloop invariant y <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1:  0 <= x <= 1;\nloop invariant i2:  0 <= y <= x;\nloop invariant i3:  x >= (x - 1);\nloop invariant i4:  y >= (y - 1);\nloop invariant i5:  x >= y;\nloop invariant i6:  x >= 0;\nloop invariant i7:  y >= 0;\nloop invariant i8:  x <= y;\nloop invariant i9:  x <= 1;\nloop invariant i10:  y <= x;\nloop invariant i11:  y <= 1;\n\n\nloop invariant i14: x >= (x - 1);\nloop invariant i15: y >= (y - 1);\nloop invariant i16: x >= y;\nloop invariant i17: x >= 0;\nloop invariant i18: y >= 0;\n\nloop invariant i20: x <= 1;\nloop invariant i21: y <= x;\nloop invariant i22: y <= 1;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant i >= j;\nloop invariant (x - y) >= 0;\nloop invariant (y - x) <= 0;\nloop invariant (x - i) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (i - j) >= 0;\nloop invariant (x - j) >= 0;\nloop invariant (j - x) <= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\nloop invariant (i - x) >= 0;\nloop invariant (y - j) <= 0;\nloop invariant (j - y) >= 0;\nloop invariant (y - i) <= 0;\nloop invariant (i - y) >= 0;\nloop invariant (x - j) <= 0;\nloop invariant (j - x) >= 0;\nloop invariant (x - i) <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: (x - i) <= 0;\n\n\n\n\nloop invariant i12: (i - x) >= 0;\nloop invariant i13: (y - j) <= 0;\nloop invariant i14: (j - y) >= 0;\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (0 <= x);\nloop invariant (x <= i) ==> (0 <= y);\nloop invariant (x <= i) ==> (x <= i);\nloop invariant (x <= i) ==> (y <= j);\nloop invariant (x <= i) ==> (x <= y);\nloop invariant (x <= i) ==> (y <= j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: y <= j;\nloop invariant i3: (x <= i) ==> (y <= j);\n\n\n\nloop invariant i7: (x <= i) ==> (x <= i);\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= i;\nloop invariant i >= 0;\nloop invariant y <= (i - 1);\nloop invariant (x + y) <= i;\nloop invariant (x - 1) >= 0;\nloop invariant (y - 1) >= 0;\nloop invariant (x - y) >= 0;\nloop invariant (x - y) <= i;\nloop invariant (x + y) >= (2 * y);\nloop invariant (x + y) >= (2 * x);\nloop invariant (x + y) <= (2 * i);\nloop invariant (x + y) <= (2 * (i - 1));\nloop invariant (x + y) <= (2 * (i - 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - y;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - x);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1));\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1);\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y = x + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x = i - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x <= i;\nloop invariant j <= y;\nloop invariant x <= j;\nloop invariant x <= i + j;\nloop invariant x - y <= j;\nloop invariant x - y <= i;\nloop invariant x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\nloop invariant 0 <= i <= y;\nloop invariant x <= i;\nloop invariant j <= y;\nloop invariant x <= j;\nloop invariant x <= i + j;\nloop invariant x - y <= j;\nloop invariant x - y <= i;\nloop invariant x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: x <= i;\n\n\n\n\n\n\n\n\n\nloop invariant i12: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= j;\nloop invariant 0 <= y <= j;\nloop invariant i <= j;\nloop invariant x + y <= j;\nloop invariant x - j <= j;\nloop invariant y - j <= j;\nloop invariant x + y - j <= j;\nloop invariant i - j <= j;\nloop invariant i - j <= x;\nloop invariant i - j <= y;\nloop invariant i - j <= x + y;\nloop invariant i - j <= x - j;\nloop invariant i - j <= y - j;\nloop invariant i - j <= x + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\nloop invariant x - j <= x - j + y - j;\nloop invariant y - j <= x - j + y - j;\nloop invariant x + y - j <= x - j + y - j;\nloop invariant i - j <= x - j + y - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x != 0) ==> (y >= 0);\nloop invariant (x != 0) ==> (y >= (i - x));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\nloop invariant (x != 0) ==> (y >= (x - 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: (x != 0) ==> (x <= i);\nloop invariant i4: (x != 0) ==> (y <= j);\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x and x <= i;\nloop invariant 0 <= y and y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: x <= i;\nloop invariant i8: y <= j;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= (j + 1);\nloop invariant 0 <= j <= (i + 1);\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i == x || i == (x + 1);\nloop invariant j == y || j == (y + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 105: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: 0 <= x <= i;\nloop invariant i2: 0 <= y <= j;\nloop invariant i3: x >= y;\nloop invariant i4: x == i - j;\nloop invariant i5: i <= x;\nloop invariant i6: j <= y;\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\nloop invariant i9: y != 0;\nloop invariant i10: x != 0;\nloop invariant i11: x + y == i + j;\nloop invariant i12: x - y == i - j;\nloop invariant i13: (x - y) * (x + y) == (x * y) * 2;\nloop invariant i14: (x - y) * (x + y) >= 0;\nloop invariant i15: x >= j;\nloop invariant i16: y >= i;\nloop invariant i17: x + y >= i + j;\nloop invariant i18: x + y >= j + i;\nloop invariant i19: x + y <= i + j;\nloop invariant i20: x + y <= j + i;\nloop invariant i21: x + y >= 0;\nloop invariant i22:  0 <= x <= 1;\nloop invariant i23:  0 <= y <= x;\nloop invariant i24:  x >= (x - 1);\nloop invariant i25:  y >= (y - 1);\nloop invariant i26:  x >= y;\nloop invariant i27:  x >= 0;\nloop invariant i28:  y >= 0;\nloop invariant i29:  x <= y;\nloop invariant i30:  x <= 1;\nloop invariant i31:  y <= x;\nloop invariant i32:  y <= 1;\nloop invariant i33: 0 <= x <= 1;\nloop invariant i34: 0 <= y <= x;\nloop invariant i35: x >= (x - 1);\nloop invariant i36: y >= (y - 1);\nloop invariant i37: x <= y;\nloop invariant i38: x <= 1;\nloop invariant i39: y <= x;\nloop invariant i40: y <= 1;\nloop invariant i41: i >= j;\nloop invariant i42: (x - y) >= 0;\nloop invariant i43: (y - x) <= 0;\nloop invariant i44: (x - i) <= 0;\nloop invariant i45: (j - x) >= 0;\nloop invariant i46: (i - j) >= 0;\nloop invariant i47: (x - j) >= 0;\nloop invariant i48: (j - x) <= 0;\nloop invariant i49: (i - x) >= 0;\nloop invariant i50: (y - j) <= 0;\nloop invariant i51: (j - y) >= 0;\nloop invariant i52: (y - i) <= 0;\nloop invariant i53: (i - y) >= 0;\nloop invariant i54: (x - j) <= 0;\nloop invariant i55: y <= j;\nloop invariant i56: (x <= i) ==> (y <= j);\nloop invariant i57: (x <= i) ==> (x <= y);\nloop invariant i58: (x <= i) ==> (0 <= x);\nloop invariant i59: (x <= i) ==> (0 <= y);\nloop invariant i60: (x <= i) ==> (x <= i);\nloop invariant i61: 0 <= y <= i;\nloop invariant i62: i >= 0;\nloop invariant i63: y <= (i - 1);\nloop invariant i64: (x + y) <= i;\nloop invariant i65: (x - 1) >= 0;\nloop invariant i66: (y - 1) >= 0;\nloop invariant i67: (x - y) <= i;\nloop invariant i68: (x + y) >= (2 * y);\nloop invariant i69: (x + y) >= (2 * x);\nloop invariant i70: (x + y) <= (2 * i);\nloop invariant i71: (x + y) <= (2 * (i - 1));\nloop invariant i72: (x + y) <= (2 * (i - 1) + 1);\nloop invariant i73: (x + y) <= (2 * (i - 1) + 1) - 1;\nloop invariant i74: (x + y) <= (2 * (i - 1) + 1) - y;\nloop invariant i75: (x + y) <= (2 * (i - 1) + 1) - (i - x);\nloop invariant i76: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1));\nloop invariant i77: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1);\nloop invariant i78: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1;\nloop invariant i79: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - 1;\nloop invariant i80: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1);\nloop invariant i81: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant i82: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant i83: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant i84: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant i85: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant i86: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant i87: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant i88: y = x + y;\nloop invariant i89: x = i - j;\nloop invariant i90: x == i - y;\nloop invariant i91: 0 <= i <= y;\nloop invariant i92: x <= i;\nloop invariant i93: x <= j;\nloop invariant i94: x <= i + j;\nloop invariant i95: x - y <= j;\nloop invariant i96: x - y <= i;\nloop invariant i97: x - y <= i + j - y;\nloop invariant i98: x - y <= i + j - y - 1;\nloop invariant i99: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant i100: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant i101: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant i102: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant i103: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\nloop invariant i104: 0 <= x <= j;\nloop invariant i105: i <= j;\nloop invariant i106: x + y <= j;\nloop invariant i107: x - j <= j;\nloop invariant i108: y - j <= j;\nloop invariant i109: x + y - j <= j;\nloop invariant i110: i - j <= j;\nloop invariant i111: i - j <= x;\nloop invariant i112: i - j <= y;\nloop invariant i113: i - j <= x + y;\nloop invariant i114: i - j <= x - j;\nloop invariant i115: i - j <= y - j;\nloop invariant i116: i - j <= x + y - j;\nloop invariant i117: i - j <= x - j + y - j;\nloop invariant i118: x - j <= x - j + y - j;\nloop invariant i119: y - j <= x - j + y - j;\nloop invariant i120: x + y - j <= x - j + y - j;\nloop invariant i121: (x != 0) ==> (x <= i);\nloop invariant i122: (x != 0) ==> (y <= j);\nloop invariant i123: (x != 0) ==> (y >= 0);\nloop invariant i124: (x != 0) ==> (y >= (i - x));\nloop invariant i125: (x != 0) ==> (y >= (x - 1));\nloop invariant i126: 0 <= i <= j;\nloop invariant i127: 0 <= x and x <= i;\nloop invariant i128: 0 <= y and y <= j;\nloop invariant i129: 0 <= i <= (j + 1);\nloop invariant i130: 0 <= j <= (i + 1);\nloop invariant i131: i == x || i == (x + 1);\nloop invariant i132: j == y || j == (y + 1);\nloop invariant i133: y == j - x;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 41,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i12: x - y == i - j;\n\n\n\n\n\n\nloop invariant i19: x + y <= i + j;\nloop invariant i20: x + y <= j + i;\n\nloop invariant i22:  0 <= x <= 1;\nloop invariant i23:  0 <= y <= x;\nloop invariant i24:  x >= (x - 1);\nloop invariant i25:  y >= (y - 1);\nloop invariant i26:  x >= y;\nloop invariant i27:  x >= 0;\nloop invariant i28:  y >= 0;\nloop invariant i29:  x <= y;\nloop invariant i30:  x <= 1;\nloop invariant i31:  y <= x;\nloop invariant i32:  y <= 1;\n\n\nloop invariant i35: x >= (x - 1);\nloop invariant i36: y >= (y - 1);\n\nloop invariant i38: x <= 1;\nloop invariant i39: y <= x;\nloop invariant i40: y <= 1;\nloop invariant i41: i >= j;\nloop invariant i42: (x - y) >= 0;\nloop invariant i43: (y - x) <= 0;\nloop invariant i44: (x - i) <= 0;\nloop invariant i45: (j - x) >= 0;\nloop invariant i46: (i - j) >= 0;\n\n\nloop invariant i49: (i - x) >= 0;\nloop invariant i50: (y - j) <= 0;\nloop invariant i51: (j - y) >= 0;\nloop invariant i52: (y - i) <= 0;\nloop invariant i53: (i - y) >= 0;\nloop invariant i54: (x - j) <= 0;\nloop invariant i55: y <= j;\nloop invariant i56: (x <= i) ==> (y <= j);\nloop invariant i57: (x <= i) ==> (x <= y);\nloop invariant i58: (x <= i) ==> (0 <= x);\nloop invariant i59: (x <= i) ==> (0 <= y);\nloop invariant i60: (x <= i) ==> (x <= i);\nloop invariant i61: 0 <= y <= i;\nloop invariant i62: i >= 0;\n\n\n\n\nloop invariant i67: (x - y) <= i;\nloop invariant i68: (x + y) >= (2 * y);\nloop invariant i69: (x + y) >= (2 * x);\nloop invariant i70: (x + y) <= (2 * i);\n\n\n\n\n\nloop invariant i76: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1));\n\nloop invariant i78: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1;\n\nloop invariant i80: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1);\nloop invariant i81: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\nloop invariant i82: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - 1;\nloop invariant i83: (x + y) <= (2 * (i - 1) + 1) - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1 - (i - (x + 1) + 1) + 1;\n\n\n\n\n\n\n\n\nloop invariant i92: x <= i;\nloop invariant i93: x <= j;\nloop invariant i94: x <= i + j;\nloop invariant i95: x - y <= j;\nloop invariant i96: x - y <= i;\nloop invariant i97: x - y <= i + j - y;\n\nloop invariant i99: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= j;\nloop invariant i100: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i;\nloop invariant i101: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y;\nloop invariant i102: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= j;\nloop invariant i103: x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i + j - y - 1 ==> x - y <= i + j - y - 1 ==> i + j - y - 1 != 0 ==> x - y <= i;\nloop invariant i104: 0 <= x <= j;\nloop invariant i105: i <= j;\n\nloop invariant i107: x - j <= j;\nloop invariant i108: y - j <= j;\nloop invariant i109: x + y - j <= j;\nloop invariant i110: i - j <= j;\nloop invariant i111: i - j <= x;\nloop invariant i112: i - j <= y;\nloop invariant i113: i - j <= x + y;\n\n\n\n\n\n\n\nloop invariant i121: (x != 0) ==> (x <= i);\nloop invariant i122: (x != 0) ==> (y <= j);\nloop invariant i123: (x != 0) ==> (y >= 0);\nloop invariant i124: (x != 0) ==> (y >= (i - x));\nloop invariant i125: (x != 0) ==> (y >= (x - 1));\nloop invariant i126: 0 <= i <= j;\n\n\nloop invariant i129: 0 <= i <= (j + 1);\nloop invariant i130: 0 <= j <= (i + 1);\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c"
        ],
        "skipped": [],
        "total": 2,
        "success_count": 1,
        "failure_count": 1,
        "success_rate": 0.5
    }
}