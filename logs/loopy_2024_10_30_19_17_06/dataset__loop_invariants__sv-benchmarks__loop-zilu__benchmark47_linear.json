{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  while (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x <= y + 16;\nloop invariant x >= y - 10;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x <= y;\nloop invariant x + 16 >= y;\nloop invariant x + 16 <= y + 16;\nloop invariant x >= y - 10;\nloop invariant x <= y - 10 + 16;\nloop invariant x >= y - 10 + 7;\nloop invariant x <= y - 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\n*/\n```",
            "```\n/*@\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y - 100000;\nloop invariant x - y >= 0;\nloop invariant x - y <= 16;\nloop invariant y - x >= 0;\nloop invariant y - x <= 16;\nloop invariant x - y >= 0 ==> y - x >= 0;\nloop invariant x - y <= 16 ==> y - x <= 16;\nloop invariant y - x >= 0 ==> x - y >= 0;\nloop invariant y - x <= 16 ==> x - y <= 16;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x; loop invariant x <= y + 16; loop invariant x == y || x == y + 10; loop invariant x >= y; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x <= y + 16;\nloop invariant x >= y - 16;\nloop invariant x + 10 <= y + 16;\nloop invariant x + 7 <= y + 16;\nloop invariant x + 10 >= y;\nloop invariant x + 7 >= y;\nloop invariant x >= y - 16;\nloop invariant x <= y - 10;\nloop invariant x <= y - 7;\nloop invariant x + 10 <= y + 16;\nloop invariant x + 7 <= y + 16;\nloop invariant x + 10 >= y;\nloop invariant x + 7 >= y;\nloop invariant x >= y - 16;\nloop invariant x <= y - 10;\nloop invariant x <= y - 7;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;loop invariant x <= y + 16;loop invariant y >= -16;loop invariant x >= -16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= y + 10 * (x - y + 16 / 10 - 1);\nloop invariant x <= y + 16;\nloop invariant x >= y + (x - y + 16 * (x - y + 1) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y + 16;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y + 16;\nloop invariant x <= y + 10;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant (x < 0) => (y < 0);\nloop invariant (x >= 0) => (y >= 0);\nloop invariant (x < 0) => (x == y + 10);\nloop invariant (x >= 0) => (x == y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y);\nloop invariant (x < 0) => (x + 7 <= y) ==> (x + 14 <= y + 10);\nloop invariant (x >= 0) => (x + 10 <= y) ==> (x + 16 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10) ==> (x + 42 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16) ==> (x + 48 <= y + 16);\n*/\n```",
            "```\n/*@\nloop invariant x >= y && x <= y + 16;\nloop invariant x >= y ==> x >= y - 10 && y <= y + 3;\nloop invariant x >= y ==> x >= y + 10 && y <= y + 3;\nloop invariant x >= y ==> x >= y + 7 && y <= y + 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant (x == y) ==> (x % 10 == 0);\nloop invariant (x == y + 1) ==> (x % 10 == 10);\nloop invariant (x == y + 2) ==> (x % 10 == 20);\nloop invariant (x == y + 3) ==> (x % 10 == 30);\nloop invariant (x == y + 4) ==> (x % 10 == 40);\nloop invariant (x == y + 5) ==> (x % 10 == 50);\nloop invariant (x == y + 6) ==> (x % 10 == 60);\nloop invariant (x == y + 7) ==> (x % 10 == 70);\nloop invariant (x == y + 8) ==> (x % 10 == 80);\nloop invariant (x == y + 9) ==> (x % 10 == 90);\nloop invariant (x == y + 10) ==> (x % 10 == 0);\nloop invariant (x == y + 11) ==> (x % 10 == 10);\nloop invariant (x == y + 12) ==> (x % 10 == 20);\nloop invariant (x == y + 13) ==> (x % 10 == 30);\nloop invariant (x == y + 14) ==> (x % 10 == 40);\nloop invariant (x == y + 15) ==> (x % 10 == 50);\nloop invariant (x == y + 16) ==> (x % 10 == 60);\nloop invariant (x == y + 17) ==> (x % 10 == 70);\nloop invariant (x == y + 18) ==> (x % 10 == 80);\nloop invariant (x == y + 19) ==> (x % 10 == 90);\nloop invariant (x == y + 20) ==> (x % 10 == 0);\nloop invariant (x == y + 21) ==> (x % 10 == 10);\nloop invariant (x == y + 22) ==> (x % 10 == 20);\nloop invariant (x == y + 23) ==> (x % 10 == 30);\nloop invariant (x == y + 24) ==> (x % 10 == 40);\nloop invariant (x == y + 25) ==> (x % 10 == 50);\nloop invariant (x == y + 26) ==> (x % 10 == 60);\nloop invariant (x == y + 27) ==> (x % 10 == 70);\nloop invariant (x == y + 28) ==> (x % 10 == 80);\nloop invariant (x == y + 29) ==> (x % 10 == 90);\nloop invariant (x == y + 30) ==> (x % 10 == 0);\nloop invariant (x == y + 31) ==> (x % 10 == 10);\nloop invariant (x == y + 32) ==> (x % 10 == 20);\nloop invariant (x == y + 33) ==> (x % 10 == 30);\nloop invariant (x == y + 34) ==> (x % 10 == 40);\nloop invariant (x == y + 35) ==> (x % 10 == 50);\nloop invariant (x == y + 36) ==> (x % 10 == 60);\nloop invariant (x == y + 37) ==> (x % 10 == 70);\nloop invariant (x == y + 38) ==> (x % 10 == 80);\nloop invariant (x == y + 39) ==> (x % 10 == 90);\nloop invariant (x == y + 40) ==> (x % 10 == 0);\nloop invariant (x == y + 41) ==> (x % 10 == 10);\nloop invariant (x == y + 42) ==> (x % 10 == 20);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 16;\nloop invariant x >= y - 16;\nloop invariant x >= y - 10;\nloop invariant x <= y + 10;\nloop invariant x >= y - 7;\nloop invariant x <= y + 7;\nloop invariant x >= y - 3;\nloop invariant x <= y + 3;\nloop invariant x >= y - 16 + 3;\nloop invariant x <= y + 16 - 3;\nloop invariant x >= y - 10 + 7;\nloop invariant x <= y + 10 - 7;\nloop invariant x >= y - 7 + 3;\nloop invariant x <= y + 7 - 3;\nloop invariant x >= y - 16 + 3 - 10 + 7;\nloop invariant x <= y + 16 - 3 + 10 - 7;\nloop invariant x >= y - 10 + 7 - 3 + 16;\nloop invariant x <= y + 10 - 7 + 3 - 16;\nloop invariant x >= y - 7 + 3 - 10 + 16;\nloop invariant x <= y + 7 - 3 + 10 - 16;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10 - 7 + 3;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10 + 7 - 3;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7 - 3 + 10;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7 + 3 - 10;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3 + 10 - 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3 - 10 + 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16; loop invariant 0 <= y <= y + 16; loop invariant x >= y - 16; loop invariant x <= y + 16; loop invariant y >= 0; loop invariant y <= y + 16;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y + 16;\nloop invariant x >= y - 10;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\nloop invariant y >= -7;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= -10;\nloop invariant x <= y + 16;\nloop invariant y >= -7;\nloop invariant x >= y - 10;\nloop invariant x <= y + 16;\nloop invariant y >= x - 7;\nloop invariant x >= 0;\nloop invariant x <= y + 16;\nloop invariant y >= -10;\nloop invariant y <= x + 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x <= y + 16;\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x <= y;\nloop invariant x + 16 >= y;\nloop invariant x + 16 <= y + 16;\nloop invariant x >= y - 10;\nloop invariant x <= y - 10 + 16;\nloop invariant x >= y - 10 + 7;\nloop invariant x <= y - 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: x <= y - 10 + 7 + 10 + 16;\n\nloop invariant i13: x <= y - 10 + 7 + 10 + 3 + 16;\n\nloop invariant i15: x <= y - 10 + 7 + 10 + 3 + 10 + 16;\n\nloop invariant i17: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 16;\n\nloop invariant i19: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\n\nloop invariant i21: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\n\nloop invariant i23: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\n\nloop invariant i25: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 16;\n\nloop invariant i27: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\n\nloop invariant i29: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\n\nloop invariant i31: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y - 100000;\nloop invariant x - y >= 0;\nloop invariant x - y <= 16;\nloop invariant y - x >= 0;\nloop invariant y - x <= 16;\nloop invariant x - y >= 0 ==> y - x >= 0;\nloop invariant x - y <= 16 ==> y - x <= 16;\nloop invariant y - x >= 0 ==> x - y >= 0;\nloop invariant y - x <= 16 ==> x - y <= 16;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x <= 100000 ==> y <= 100000;\nloop invariant y >= 0 ==> x >= 0;\nloop invariant y <= 100000 ==> x <= 100000;\nloop invariant x - y >= 0 ==> x - y <= 16;\nloop invariant x - y <= 16 ==> x - y >= 0;\nloop invariant y - x >= 0 ==> y - x <= 16;\nloop invariant y - x <= 16 ==> y - x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\nloop invariant i1: x <= y + 16;\n\n\n\n\n\n\n\nloop invariant i9: x - y <= 16;\n\n\n\n\n\nloop invariant i15: y - x <= 16 ==> x - y <= 16;\n\n\n\n\nloop invariant i20: x - y >= 0 ==> x - y <= 16;\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x; loop invariant x <= y + 16; loop invariant x == y || x == y + 10; loop invariant x >= y; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x <= y + 16;\nloop invariant x >= y - 16;\nloop invariant x + 10 <= y + 16;\nloop invariant x + 7 <= y + 16;\nloop invariant x + 10 >= y;\nloop invariant x + 7 >= y;\nloop invariant x >= y - 16;\nloop invariant x <= y - 10;\nloop invariant x <= y - 7;\nloop invariant x + 10 <= y + 16;\nloop invariant x + 7 <= y + 16;\nloop invariant x + 10 >= y;\nloop invariant x + 7 >= y;\nloop invariant x >= y - 16;\nloop invariant x <= y - 10;\nloop invariant x <= y - 7;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\nloop invariant i4: x <= y + 16;\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= y;loop invariant x <= y + 16;loop invariant y >= -16;loop invariant x >= -16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= y + 10 * (x - y + 16 / 10 - 1);\nloop invariant x <= y + 16;\nloop invariant x >= y + (x - y + 16 * (x - y + 1) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x <= y + 16;\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y + 16;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 21,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y + 16;\nloop invariant x <= y + 10;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant (x < 0) => (y < 0);\nloop invariant (x >= 0) => (y >= 0);\nloop invariant (x < 0) => (x == y + 10);\nloop invariant (x >= 0) => (x == y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y);\nloop invariant (x < 0) => (x + 7 <= y) ==> (x + 14 <= y + 10);\nloop invariant (x >= 0) => (x + 10 <= y) ==> (x + 16 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16);\nloop invariant (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10) ==> (x + 42 <= y + 10);\nloop invariant (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16) ==> (x + 48 <= y + 16);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= y && x <= y + 16;\nloop invariant x >= y ==> x >= y - 10 && y <= y + 3;\nloop invariant x >= y ==> x >= y + 10 && y <= y + 3;\nloop invariant x >= y ==> x >= y + 7 && y <= y + 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\nloop invariant i2: x >= y ==> x >= y - 10 && y <= y + 3;\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\nloop invariant (x < y) ==> (x >= y && x <= y + 16);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant (x == y) ==> (x % 10 == 0);\nloop invariant (x == y + 1) ==> (x % 10 == 10);\nloop invariant (x == y + 2) ==> (x % 10 == 20);\nloop invariant (x == y + 3) ==> (x % 10 == 30);\nloop invariant (x == y + 4) ==> (x % 10 == 40);\nloop invariant (x == y + 5) ==> (x % 10 == 50);\nloop invariant (x == y + 6) ==> (x % 10 == 60);\nloop invariant (x == y + 7) ==> (x % 10 == 70);\nloop invariant (x == y + 8) ==> (x % 10 == 80);\nloop invariant (x == y + 9) ==> (x % 10 == 90);\nloop invariant (x == y + 10) ==> (x % 10 == 0);\nloop invariant (x == y + 11) ==> (x % 10 == 10);\nloop invariant (x == y + 12) ==> (x % 10 == 20);\nloop invariant (x == y + 13) ==> (x % 10 == 30);\nloop invariant (x == y + 14) ==> (x % 10 == 40);\nloop invariant (x == y + 15) ==> (x % 10 == 50);\nloop invariant (x == y + 16) ==> (x % 10 == 60);\nloop invariant (x == y + 17) ==> (x % 10 == 70);\nloop invariant (x == y + 18) ==> (x % 10 == 80);\nloop invariant (x == y + 19) ==> (x % 10 == 90);\nloop invariant (x == y + 20) ==> (x % 10 == 0);\nloop invariant (x == y + 21) ==> (x % 10 == 10);\nloop invariant (x == y + 22) ==> (x % 10 == 20);\nloop invariant (x == y + 23) ==> (x % 10 == 30);\nloop invariant (x == y + 24) ==> (x % 10 == 40);\nloop invariant (x == y + 25) ==> (x % 10 == 50);\nloop invariant (x == y + 26) ==> (x % 10 == 60);\nloop invariant (x == y + 27) ==> (x % 10 == 70);\nloop invariant (x == y + 28) ==> (x % 10 == 80);\nloop invariant (x == y + 29) ==> (x % 10 == 90);\nloop invariant (x == y + 30) ==> (x % 10 == 0);\nloop invariant (x == y + 31) ==> (x % 10 == 10);\nloop invariant (x == y + 32) ==> (x % 10 == 20);\nloop invariant (x == y + 33) ==> (x % 10 == 30);\nloop invariant (x == y + 34) ==> (x % 10 == 40);\nloop invariant (x == y + 35) ==> (x % 10 == 50);\nloop invariant (x == y + 36) ==> (x % 10 == 60);\nloop invariant (x == y + 37) ==> (x % 10 == 70);\nloop invariant (x == y + 38) ==> (x % 10 == 80);\nloop invariant (x == y + 39) ==> (x % 10 == 90);\nloop invariant (x == y + 40) ==> (x % 10 == 0);\nloop invariant (x == y + 41) ==> (x % 10 == 10);\nloop invariant (x == y + 42) ==> (x % 10 == 20);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i21: (x == y + 17) ==> (x % 10 == 70);\nloop invariant i22: (x == y + 18) ==> (x % 10 == 80);\nloop invariant i23: (x == y + 19) ==> (x % 10 == 90);\nloop invariant i24: (x == y + 20) ==> (x % 10 == 0);\nloop invariant i25: (x == y + 21) ==> (x % 10 == 10);\nloop invariant i26: (x == y + 22) ==> (x % 10 == 20);\nloop invariant i27: (x == y + 23) ==> (x % 10 == 30);\nloop invariant i28: (x == y + 24) ==> (x % 10 == 40);\nloop invariant i29: (x == y + 25) ==> (x % 10 == 50);\nloop invariant i30: (x == y + 26) ==> (x % 10 == 60);\nloop invariant i31: (x == y + 27) ==> (x % 10 == 70);\nloop invariant i32: (x == y + 28) ==> (x % 10 == 80);\nloop invariant i33: (x == y + 29) ==> (x % 10 == 90);\nloop invariant i34: (x == y + 30) ==> (x % 10 == 0);\nloop invariant i35: (x == y + 31) ==> (x % 10 == 10);\nloop invariant i36: (x == y + 32) ==> (x % 10 == 20);\nloop invariant i37: (x == y + 33) ==> (x % 10 == 30);\nloop invariant i38: (x == y + 34) ==> (x % 10 == 40);\nloop invariant i39: (x == y + 35) ==> (x % 10 == 50);\nloop invariant i40: (x == y + 36) ==> (x % 10 == 60);\nloop invariant i41: (x == y + 37) ==> (x % 10 == 70);\nloop invariant i42: (x == y + 38) ==> (x % 10 == 80);\nloop invariant i43: (x == y + 39) ==> (x % 10 == 90);\nloop invariant i44: (x == y + 40) ==> (x % 10 == 0);\nloop invariant i45: (x == y + 41) ==> (x % 10 == 10);\nloop invariant i46: (x == y + 42) ==> (x % 10 == 20);\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 16;\nloop invariant x >= y - 16;\nloop invariant x >= y - 10;\nloop invariant x <= y + 10;\nloop invariant x >= y - 7;\nloop invariant x <= y + 7;\nloop invariant x >= y - 3;\nloop invariant x <= y + 3;\nloop invariant x >= y - 16 + 3;\nloop invariant x <= y + 16 - 3;\nloop invariant x >= y - 10 + 7;\nloop invariant x <= y + 10 - 7;\nloop invariant x >= y - 7 + 3;\nloop invariant x <= y + 7 - 3;\nloop invariant x >= y - 16 + 3 - 10 + 7;\nloop invariant x <= y + 16 - 3 + 10 - 7;\nloop invariant x >= y - 10 + 7 - 3 + 16;\nloop invariant x <= y + 10 - 7 + 3 - 16;\nloop invariant x >= y - 7 + 3 - 10 + 16;\nloop invariant x <= y + 7 - 3 + 10 - 16;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3;\nloop invariant x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10 - 7 + 3;\nloop invariant x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10 + 7 - 3;\nloop invariant x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7 - 3 + 10;\nloop invariant x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7 + 3 - 10;\nloop invariant x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3 + 10 - 3;\nloop invariant x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3 - 10 + 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: x <= y + 16;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i21: x <= y + 16 - 3 + 10 - 7;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16; loop invariant 0 <= y <= y + 16; loop invariant x >= y - 16; loop invariant x <= y + 16; loop invariant y >= 0; loop invariant y <= y + 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 95: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\nloop invariant i1: 1 <= x <= y + 16;\nloop invariant i2: x >= y - 10;\nloop invariant i3: y >= x - 7;\nloop invariant i4: x >= 0;\nloop invariant i5: x <= y + 16;\nloop invariant i6: y >= -10;\nloop invariant i7: y <= x + 16;\nloop invariant i8: y >= -7;\nloop invariant i9: x >= -10;\nloop invariant i10: 0 <= x <= 2147483647;\nloop invariant i11: 0 <= y <= 2147483647;\nloop invariant i12: x <= y;\nloop invariant i13: x + 16 >= y;\nloop invariant i14: x + 16 <= y + 16;\nloop invariant i15: x <= y - 10 + 16;\nloop invariant i16: x >= y - 10 + 7;\nloop invariant i17: x <= y - 10 + 7 + 16;\nloop invariant i18: x >= y - 10 + 7 + 10;\nloop invariant i19: x <= y - 10 + 7 + 10 + 16;\nloop invariant i20: x >= y - 10 + 7 + 10 + 3;\nloop invariant i21: x <= y - 10 + 7 + 10 + 3 + 16;\nloop invariant i22: x >= y - 10 + 7 + 10 + 3 + 10;\nloop invariant i23: x <= y - 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant i24: x >= y - 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant i25: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant i26: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant i27: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant i28: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant i29: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant i30: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant i31: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant i32: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant i33: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 16;\nloop invariant i34: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10;\nloop invariant i35: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\nloop invariant i36: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3;\nloop invariant i37: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\nloop invariant i38: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10;\nloop invariant i39: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\nloop invariant i40: x >= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7;\nloop invariant i41: y >= 0;\nloop invariant i42: x <= 100000;\nloop invariant i43: y <= 100000;\nloop invariant i44: x >= y - 100000;\nloop invariant i45: x - y >= 0;\nloop invariant i46: x - y <= 16;\nloop invariant i47: y - x >= 0;\nloop invariant i48: y - x <= 16;\nloop invariant i49: x - y >= 0 ==> y - x >= 0;\nloop invariant i50: x - y <= 16 ==> y - x <= 16;\nloop invariant i51: y - x >= 0 ==> x - y >= 0;\nloop invariant i52: y - x <= 16 ==> x - y <= 16;\nloop invariant i53: x >= 0 ==> y >= 0;\nloop invariant i54: x <= 100000 ==> y <= 100000;\nloop invariant i55: y >= 0 ==> x >= 0;\nloop invariant i56: y <= 100000 ==> x <= 100000;\nloop invariant i57: x - y >= 0 ==> x - y <= 16;\nloop invariant i58: x - y <= 16 ==> x - y >= 0;\nloop invariant i59: y - x >= 0 ==> y - x <= 16;\nloop invariant i60: y - x <= 16 ==> y - x >= 0;\nloop invariant i61: 0 <= x; loop invariant x <= y + 16; loop invariant x == y || x == y + 10; loop invariant x >= y; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant x >= y - 10; loop invariant x <= y + 16; loop invariant y <= x + 16; loop invariant y >= x - 10; loop invariant y <= x + 16; loop invariant y >= x - 10;\nloop invariant i62: 0 <= y <= 100000;\nloop invariant i63: x >= (1 + (y - 1) * y / 2);\nloop invariant i64: 0 <= x <= 100000;\nloop invariant i65: x >= y;\nloop invariant i66: x >= y - 16;\nloop invariant i67: x + 10 <= y + 16;\nloop invariant i68: x + 7 <= y + 16;\nloop invariant i69: x + 10 >= y;\nloop invariant i70: x + 7 >= y;\nloop invariant i71: x <= y - 10;\nloop invariant i72: x <= y - 7;\nloop invariant i73: x >= y;loop invariant x <= y + 16;loop invariant y >= -16;loop invariant x >= -16;\nloop invariant i74: 0 <= x <= y + 16;\nloop invariant i75: 0 <= y;\nloop invariant i76: x >= y + 10 * (x - y + 16 / 10 - 1);\nloop invariant i77: x >= y + (x - y + 16 * (x - y + 1) / 2);\nloop invariant i78: 1 <= x <= y + 16;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x <= y + 10 * (x - y + 1) / 10;loop invariant x >= y + 8 * (x - y + 1) / 10;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;loop invariant x <= y + 16;loop invariant x <= y + 16;loop invariant x >= y;\nloop invariant i79: x <= y + 10;\nloop invariant i80: (x < 0) => (y < 0);\nloop invariant i81: (x >= 0) => (y >= 0);\nloop invariant i82: (x < 0) => (x == y + 10);\nloop invariant i83: (x >= 0) => (x == y + 16);\nloop invariant i84: (x < 0) => (x == y + 10) ==> (x + 7 <= y);\nloop invariant i85: (x >= 0) => (x == y + 16) ==> (x + 10 <= y);\nloop invariant i86: (x < 0) => (x + 7 <= y) ==> (x + 14 <= y + 10);\nloop invariant i87: (x >= 0) => (x + 10 <= y) ==> (x + 16 <= y + 16);\nloop invariant i88: (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10);\nloop invariant i89: (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16);\nloop invariant i90: (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10);\nloop invariant i91: (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16);\nloop invariant i92: (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10);\nloop invariant i93: (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16);\nloop invariant i94: (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10);\nloop invariant i95: (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16);\nloop invariant i96: (x < 0) => (x == y + 10) ==> (x + 7 <= y + 10) ==> (x + 14 <= y + 10) ==> (x + 21 <= y + 10) ==> (x + 28 <= y + 10) ==> (x + 35 <= y + 10) ==> (x + 42 <= y + 10);\nloop invariant i97: (x >= 0) => (x == y + 16) ==> (x + 10 <= y + 16) ==> (x + 16 <= y + 16) ==> (x + 26 <= y + 16) ==> (x + 32 <= y + 16) ==> (x + 42 <= y + 16) ==> (x + 48 <= y + 16);\nloop invariant i98: x >= y && x <= y + 16;\nloop invariant i99: x >= y ==> x >= y - 10 && y <= y + 3;\nloop invariant i100: x >= y ==> x >= y + 10 && y <= y + 3;\nloop invariant i101: x >= y ==> x >= y + 7 && y <= y + 3;\nloop invariant i102: (x < y) ==> (x >= y && x <= y + 16);\nloop invariant i103: (x == y) ==> (x % 10 == 0);\nloop invariant i104: (x == y + 1) ==> (x % 10 == 10);\nloop invariant i105: (x == y + 2) ==> (x % 10 == 20);\nloop invariant i106: (x == y + 3) ==> (x % 10 == 30);\nloop invariant i107: (x == y + 4) ==> (x % 10 == 40);\nloop invariant i108: (x == y + 5) ==> (x % 10 == 50);\nloop invariant i109: (x == y + 6) ==> (x % 10 == 60);\nloop invariant i110: (x == y + 7) ==> (x % 10 == 70);\nloop invariant i111: (x == y + 8) ==> (x % 10 == 80);\nloop invariant i112: (x == y + 9) ==> (x % 10 == 90);\nloop invariant i113: (x == y + 10) ==> (x % 10 == 0);\nloop invariant i114: (x == y + 11) ==> (x % 10 == 10);\nloop invariant i115: (x == y + 12) ==> (x % 10 == 20);\nloop invariant i116: (x == y + 13) ==> (x % 10 == 30);\nloop invariant i117: (x == y + 14) ==> (x % 10 == 40);\nloop invariant i118: (x == y + 15) ==> (x % 10 == 50);\nloop invariant i119: (x == y + 16) ==> (x % 10 == 60);\nloop invariant i120: (x == y + 17) ==> (x % 10 == 70);\nloop invariant i121: (x == y + 18) ==> (x % 10 == 80);\nloop invariant i122: (x == y + 19) ==> (x % 10 == 90);\nloop invariant i123: (x == y + 20) ==> (x % 10 == 0);\nloop invariant i124: (x == y + 21) ==> (x % 10 == 10);\nloop invariant i125: (x == y + 22) ==> (x % 10 == 20);\nloop invariant i126: (x == y + 23) ==> (x % 10 == 30);\nloop invariant i127: (x == y + 24) ==> (x % 10 == 40);\nloop invariant i128: (x == y + 25) ==> (x % 10 == 50);\nloop invariant i129: (x == y + 26) ==> (x % 10 == 60);\nloop invariant i130: (x == y + 27) ==> (x % 10 == 70);\nloop invariant i131: (x == y + 28) ==> (x % 10 == 80);\nloop invariant i132: (x == y + 29) ==> (x % 10 == 90);\nloop invariant i133: (x == y + 30) ==> (x % 10 == 0);\nloop invariant i134: (x == y + 31) ==> (x % 10 == 10);\nloop invariant i135: (x == y + 32) ==> (x % 10 == 20);\nloop invariant i136: (x == y + 33) ==> (x % 10 == 30);\nloop invariant i137: (x == y + 34) ==> (x % 10 == 40);\nloop invariant i138: (x == y + 35) ==> (x % 10 == 50);\nloop invariant i139: (x == y + 36) ==> (x % 10 == 60);\nloop invariant i140: (x == y + 37) ==> (x % 10 == 70);\nloop invariant i141: (x == y + 38) ==> (x % 10 == 80);\nloop invariant i142: (x == y + 39) ==> (x % 10 == 90);\nloop invariant i143: (x == y + 40) ==> (x % 10 == 0);\nloop invariant i144: (x == y + 41) ==> (x % 10 == 10);\nloop invariant i145: (x == y + 42) ==> (x % 10 == 20);\nloop invariant i146: x >= y - 7;\nloop invariant i147: x <= y + 7;\nloop invariant i148: x >= y - 3;\nloop invariant i149: x <= y + 3;\nloop invariant i150: x >= y - 16 + 3;\nloop invariant i151: x <= y + 16 - 3;\nloop invariant i152: x <= y + 10 - 7;\nloop invariant i153: x >= y - 7 + 3;\nloop invariant i154: x <= y + 7 - 3;\nloop invariant i155: x >= y - 16 + 3 - 10 + 7;\nloop invariant i156: x <= y + 16 - 3 + 10 - 7;\nloop invariant i157: x >= y - 10 + 7 - 3 + 16;\nloop invariant i158: x <= y + 10 - 7 + 3 - 16;\nloop invariant i159: x >= y - 7 + 3 - 10 + 16;\nloop invariant i160: x <= y + 7 - 3 + 10 - 16;\nloop invariant i161: x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7;\nloop invariant i162: x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7;\nloop invariant i163: x >= y - 10 + 7 - 3 + 16 - 10 + 3;\nloop invariant i164: x <= y + 10 - 7 + 3 - 16 + 10 - 3;\nloop invariant i165: x >= y - 7 + 3 - 10 + 16 - 7 + 3;\nloop invariant i166: x <= y + 7 - 3 + 10 - 16 + 7 - 3;\nloop invariant i167: x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10;\nloop invariant i168: x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10;\nloop invariant i169: x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7;\nloop invariant i170: x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7;\nloop invariant i171: x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3;\nloop invariant i172: x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3;\nloop invariant i173: x >= y - 16 + 3 - 10 + 7 - 3 + 10 + 7 - 3 + 10 - 7 + 3;\nloop invariant i174: x <= y + 16 - 3 + 10 - 7 + 3 - 10 - 7 + 3 - 10 + 7 - 3;\nloop invariant i175: x >= y - 10 + 7 - 3 + 16 - 10 + 3 - 10 + 7 - 3 + 10;\nloop invariant i176: x <= y + 10 - 7 + 3 - 16 + 10 - 3 + 10 - 7 + 3 - 10;\nloop invariant i177: x >= y - 7 + 3 - 10 + 16 - 7 + 3 - 10 + 7 - 3 + 10 - 3;\nloop invariant i178: x <= y + 7 - 3 + 10 - 16 + 7 - 3 + 10 - 7 + 3 - 10 + 3;\nloop invariant i179: 0 <= x <= y + 16; loop invariant 0 <= y <= y + 16; loop invariant x >= y - 16; loop invariant x <= y + 16; loop invariant y >= 0; loop invariant y <= y + 16;\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 63,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x <= y + 16;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i19: x <= y - 10 + 7 + 10 + 16;\n\nloop invariant i21: x <= y - 10 + 7 + 10 + 3 + 16;\n\nloop invariant i23: x <= y - 10 + 7 + 10 + 3 + 10 + 16;\n\nloop invariant i25: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 16;\n\nloop invariant i27: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\n\nloop invariant i29: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\n\nloop invariant i31: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\n\nloop invariant i33: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 16;\n\nloop invariant i35: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 16;\n\nloop invariant i37: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 16;\n\nloop invariant i39: x <= y - 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 7 + 10 + 3 + 10 + 16;\n\n\n\n\n\n\nloop invariant i46: x - y <= 16;\n\n\n\n\n\nloop invariant i52: y - x <= 16 ==> x - y <= 16;\n\n\n\n\nloop invariant i57: x - y >= 0 ==> x - y <= 16;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i99: x >= y ==> x >= y - 10 && y <= y + 3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i120: (x == y + 17) ==> (x % 10 == 70);\nloop invariant i121: (x == y + 18) ==> (x % 10 == 80);\nloop invariant i122: (x == y + 19) ==> (x % 10 == 90);\nloop invariant i123: (x == y + 20) ==> (x % 10 == 0);\nloop invariant i124: (x == y + 21) ==> (x % 10 == 10);\nloop invariant i125: (x == y + 22) ==> (x % 10 == 20);\nloop invariant i126: (x == y + 23) ==> (x % 10 == 30);\nloop invariant i127: (x == y + 24) ==> (x % 10 == 40);\nloop invariant i128: (x == y + 25) ==> (x % 10 == 50);\nloop invariant i129: (x == y + 26) ==> (x % 10 == 60);\nloop invariant i130: (x == y + 27) ==> (x % 10 == 70);\nloop invariant i131: (x == y + 28) ==> (x % 10 == 80);\nloop invariant i132: (x == y + 29) ==> (x % 10 == 90);\nloop invariant i133: (x == y + 30) ==> (x % 10 == 0);\nloop invariant i134: (x == y + 31) ==> (x % 10 == 10);\nloop invariant i135: (x == y + 32) ==> (x % 10 == 20);\nloop invariant i136: (x == y + 33) ==> (x % 10 == 30);\nloop invariant i137: (x == y + 34) ==> (x % 10 == 40);\nloop invariant i138: (x == y + 35) ==> (x % 10 == 50);\nloop invariant i139: (x == y + 36) ==> (x % 10 == 60);\nloop invariant i140: (x == y + 37) ==> (x % 10 == 70);\nloop invariant i141: (x == y + 38) ==> (x % 10 == 80);\nloop invariant i142: (x == y + 39) ==> (x % 10 == 90);\nloop invariant i143: (x == y + 40) ==> (x % 10 == 0);\nloop invariant i144: (x == y + 41) ==> (x % 10 == 10);\nloop invariant i145: (x == y + 42) ==> (x % 10 == 20);\n\n\n\n\n\n\n\n\n\n\nloop invariant i156: x <= y + 16 - 3 + 10 - 7;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "skipped": [],
        "total": 165,
        "success_count": 145,
        "failure_count": 20,
        "success_rate": 0.8787878787878788
    }
}