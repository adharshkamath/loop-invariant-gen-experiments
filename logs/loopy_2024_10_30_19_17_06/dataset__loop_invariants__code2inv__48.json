{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/48.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant n > 0;\nloop invariant 0 <= c <= n;\nloop invariant if unknown() then c != n else c == n;\nloop invariant if unknown() then n > -1 else 1 == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (n >= 1) ==> (c >= 0);\nloop invariant (c < n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n) ==> (c == n);\nloop invariant (n >= 1) ==> (c != n) ==> (c >= 0);\nloop invariant (c < n) ==> (c != n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c != n) ==> (c <= n);\nloop invariant (c < n) ==> (c != n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (n > -1);\nloop invariant ((c != n) ==> ((c >= 0) && (c < n)));\nloop invariant ((c == n) ==> ((c >= 0) && (c <= n)));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c == n + 1 ==> (c >= n);\nloop invariant c == n ==> (c == n);\nloop invariant c != n ==> (c != n);\nloop invariant c == 1 ==> (c == 1);\nloop invariant c == 0 ==> (c == 0);\n*/\n```",
            "```\n/*@\nloop invariant c > -1;\nloop invariant c < n + 1;\nloop invariant (c == n) ==> (n > -1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= c - 1 <= n;\nloop invariant n <= c + 1 <= n;\nloop invariant 1 <= c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant 1 <= c;\nloop invariant c == 0 ==> (n > 0);\nloop invariant c == n ==> (n > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n; loop invariant 0 <= c <= n; loop invariant c <= n; loop invariant 0 <= c <= n; loop invariant c == n ==> n > -1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant unknown() == true ==> c == n;\nloop invariant unknown() == false ==> c == 1;\nloop invariant unknown() == false ==> n > -1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n > -1 ==> (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n)));\nloop invariant c >= 1 ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c <= n + 1;\nloop invariant c >= 0;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant n > -1 ==> c == n;\nloop invariant n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant n > -1 ==> c == n;\nloop invariant c <= n ==> c == n ==> n > -1;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant n > 0;\nloop invariant 0 <= c <= n;\nloop invariant if unknown() then c != n else c == n;\nloop invariant if unknown() then n > -1 else 1 == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: n > 0;\nloop invariant i2: 0 <= c <= n;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (n >= 1) ==> (c >= 0);\nloop invariant (c < n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n) ==> (c == n);\nloop invariant (n >= 1) ==> (c != n) ==> (c >= 0);\nloop invariant (c < n) ==> (c != n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c != n) ==> (c <= n);\nloop invariant (c < n) ==> (c != n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant (n >= 1) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (n >= 1) ==> (c >= 0);\nloop invariant i3: (c < n) ==> (c >= 0);\nloop invariant i4: (n >= 1) ==> (c <= n);\nloop invariant i5: (c < n) ==> (c <= n);\nloop invariant i6: (n >= 1) ==> (c == n) ==> (c == n);\nloop invariant i7: (c < n) ==> (c == n) ==> (c == n);\nloop invariant i8: (n >= 1) ==> (c != n) ==> (c >= 0);\nloop invariant i9: (c < n) ==> (c != n) ==> (c >= 0);\nloop invariant i10: (n >= 1) ==> (c != n) ==> (c <= n);\nloop invariant i11: (c < n) ==> (c != n) ==> (c <= n);\nloop invariant i12: (n >= 1) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i13: (c < n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i14: (n >= 1) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i15: (c < n) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i16: (n >= 1) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i17: (c < n) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i18: (n >= 1) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i19: (c < n) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (n > -1);\nloop invariant ((c != n) ==> ((c >= 0) && (c < n)));\nloop invariant ((c == n) ==> ((c >= 0) && (c <= n)));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\nloop invariant (n > 0) ==> (c <= n);\nloop invariant (n > 0) ==> (c >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (n > 0) ==> (c <= n);\nloop invariant i3: (n > 0) ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c == n + 1 ==> (c >= n);\nloop invariant c == n ==> (c == n);\nloop invariant c != n ==> (c != n);\nloop invariant c == 1 ==> (c == 1);\nloop invariant c == 0 ==> (c == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c == n + 1 ==> (c >= n);\nloop invariant i3: c == n ==> (c == n);\nloop invariant i4: c != n ==> (c != n);\nloop invariant i5: c == 1 ==> (c == 1);\nloop invariant i6: c == 0 ==> (c == 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c > -1;\nloop invariant c < n + 1;\nloop invariant (c == n) ==> (n > -1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c > -1;\n\nloop invariant i3: (c == n) ==> (n > -1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 18,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= c - 1 <= n;\nloop invariant n <= c + 1 <= n;\nloop invariant 1 <= c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant 1 <= c;\nloop invariant c == 0 ==> (n > 0);\nloop invariant c == n ==> (n > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\n\n\n\nloop invariant i5: c <= n;\nloop invariant i6: c >= 0;\n\nloop invariant i8: c == 0 ==> (n > 0);\nloop invariant i9: c == n ==> (n > 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n; loop invariant 0 <= c <= n; loop invariant c <= n; loop invariant 0 <= c <= n; loop invariant c == n ==> n > -1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant unknown() == true ==> c == n;\nloop invariant unknown() == false ==> c == 1;\nloop invariant unknown() == false ==> n > -1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n > -1 ==> (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n)));\nloop invariant c >= 1 ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c >= 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c <= n + 1;\nloop invariant c >= 0;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\nloop invariant c >= n;\nloop invariant c >= 1;\nloop invariant c >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c;\n\n\nloop invariant i4: c >= 0;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant n > -1 ==> c == n;\nloop invariant n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n\n\nloop invariant i5: n > -1 ==> c >= -1;\n\nloop invariant i7: n > -1 ==> c == n ==> n > -1;\nloop invariant i8: n > -1 ==> c == n ==> c >= -1;\nloop invariant i9: n > -1 ==> c == n ==> c <= n;\nloop invariant i10: n > -1 ==> c == n ==> n > -1 ==> c >= -1;\nloop invariant i11: n > -1 ==> c == n ==> n > -1 ==> c <= n;\nloop invariant i12: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i13: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i14: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i15: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i16: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i17: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i18: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i19: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i20: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i21: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i22: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i23: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i24: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i25: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant n > -1 ==> c == n;\nloop invariant c <= n ==> c == n ==> n > -1;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\nloop invariant i5: c <= n ==> c == n ==> n > -1 ==> c == n;\nloop invariant i6: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n;\nloop invariant i7: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n;\nloop invariant i8: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i9: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i10: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i11: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i12: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i13: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i14: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i15: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i16: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i17: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i18: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i19: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i20: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i21: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i22: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 20: unexpected token 'unknown'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: n > 0;\nloop invariant i2: 0 <= c <= n;\nloop invariant i3: if unknown() then c != n else c == n;\nloop invariant i4: if unknown() then n > -1 else 1 == 1;\nloop invariant i5: (n >= 1) ==> (c >= 0);\nloop invariant i6: (c < n) ==> (c >= 0);\nloop invariant i7: (n >= 1) ==> (c <= n);\nloop invariant i8: (c < n) ==> (c <= n);\nloop invariant i9: (n >= 1) ==> (c == n) ==> (c == n);\nloop invariant i10: (c < n) ==> (c == n) ==> (c == n);\nloop invariant i11: (n >= 1) ==> (c != n) ==> (c >= 0);\nloop invariant i12: (c < n) ==> (c != n) ==> (c >= 0);\nloop invariant i13: (n >= 1) ==> (c != n) ==> (c <= n);\nloop invariant i14: (c < n) ==> (c != n) ==> (c <= n);\nloop invariant i15: (n >= 1) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i16: (c < n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i17: (n >= 1) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i18: (c < n) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i19: (n >= 1) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i20: (c < n) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i21: (n >= 1) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i22: (c < n) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i23: (c == n) ==> (n > -1);\nloop invariant i24: ((c != n) ==> ((c >= 0) && (c < n)));\nloop invariant i25: ((c == n) ==> ((c >= 0) && (c <= n)));\nloop invariant i26: (n > 0) ==> (c <= n);\nloop invariant i27: (n > 0) ==> (c >= 0);\nloop invariant i28: 0 <= c <= n + 1;\nloop invariant i29: c == n + 1 ==> (c >= n);\nloop invariant i30: c == n ==> (c == n);\nloop invariant i31: c != n ==> (c != n);\nloop invariant i32: c == 1 ==> (c == 1);\nloop invariant i33: c == 0 ==> (c == 0);\nloop invariant i34: c > -1;\nloop invariant i35: c < n + 1;\nloop invariant i36: c == n || c == 1;\nloop invariant i37: c == n || c == 1 || c == 0;\nloop invariant i38: c == n || c == 1 || c == 0 || c == n;\nloop invariant i39: c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant i40: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant i41: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant i42: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant i43: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant i44: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant i45: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant i46: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant i47: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant i48: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant i49: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant i50: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant i51: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1;\nloop invariant i52: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0;\nloop invariant i53: c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n || c == 1 || c == 0 || c == n;\nloop invariant i54: 0 <= c - 1 <= n;\nloop invariant i55: n <= c + 1 <= n;\nloop invariant i56: 1 <= c <= n;\nloop invariant i57: c <= n;\nloop invariant i58: c >= 0;\nloop invariant i59: 1 <= c;\nloop invariant i60: c == 0 ==> (n > 0);\nloop invariant i61: c == n ==> (n > 0);\nloop invariant i62: 0 <= c <= n; loop invariant 0 <= c <= n; loop invariant c <= n; loop invariant 0 <= c <= n; loop invariant c == n ==> n > -1;\nloop invariant i63: unknown() == true ==> c == n;\nloop invariant i64: unknown() == false ==> c == 1;\nloop invariant i65: unknown() == false ==> n > -1;\nloop invariant i66: n > -1 ==> (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n)));\nloop invariant i67: c >= 1 ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant i68: (if (unknown()) then (if (c != n) then (c < n) else (c <= n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant i69: (if (unknown()) then (if (c != n) then (c <= n) else (c < n)) else (if (c == n) then (c <= n) else (c < n))) ==> (if (unknown()) then (if (c != n) then (c >= 1) else (c > 1)) else (if (c == n) then (c >= 1) else (c > 1)));\nloop invariant i70: 0 <= c;\nloop invariant i71: c <= n + 1;\nloop invariant i72: c >= 1;\nloop invariant i73: c >= n;\nloop invariant i74: 0 <= n;\nloop invariant i75: n > -1 ==> c == n;\nloop invariant i76: n > -1 ==> c >= -1;\nloop invariant i77: n > -1 ==> c <= n;\nloop invariant i78: n > -1 ==> c == n ==> n > -1;\nloop invariant i79: n > -1 ==> c == n ==> c >= -1;\nloop invariant i80: n > -1 ==> c == n ==> c <= n;\nloop invariant i81: n > -1 ==> c == n ==> n > -1 ==> c >= -1;\nloop invariant i82: n > -1 ==> c == n ==> n > -1 ==> c <= n;\nloop invariant i83: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i84: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i85: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i86: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i87: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i88: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i89: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i90: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i91: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i92: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i93: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i94: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i95: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i96: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i97: c <= n ==> c == n ==> n > -1;\nloop invariant i98: c <= n ==> c == n ==> n > -1 ==> c == n;\nloop invariant i99: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n;\nloop invariant i100: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n;\nloop invariant i101: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i102: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i103: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i104: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i105: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i106: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i107: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i108: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i109: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i110: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i111: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i112: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i113: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i114: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i115: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 34,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: n > 0;\nloop invariant i2: 0 <= c <= n;\n\n\nloop invariant i5: (n >= 1) ==> (c >= 0);\nloop invariant i6: (c < n) ==> (c >= 0);\nloop invariant i7: (n >= 1) ==> (c <= n);\nloop invariant i8: (c < n) ==> (c <= n);\nloop invariant i9: (n >= 1) ==> (c == n) ==> (c == n);\nloop invariant i10: (c < n) ==> (c == n) ==> (c == n);\nloop invariant i11: (n >= 1) ==> (c != n) ==> (c >= 0);\nloop invariant i12: (c < n) ==> (c != n) ==> (c >= 0);\nloop invariant i13: (n >= 1) ==> (c != n) ==> (c <= n);\nloop invariant i14: (c < n) ==> (c != n) ==> (c <= n);\nloop invariant i15: (n >= 1) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i16: (c < n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i17: (n >= 1) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i18: (c < n) ==> (c != n) ==> (c != n) ==> (c >= 0);\nloop invariant i19: (n >= 1) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i20: (c < n) ==> (c != n) ==> (c != n) ==> (c <= n);\nloop invariant i21: (n >= 1) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i22: (c < n) ==> (c != n) ==> (c != n) ==> (c == n) ==> (c == n);\nloop invariant i23: (c == n) ==> (n > -1);\nloop invariant i24: ((c != n) ==> ((c >= 0) && (c < n)));\nloop invariant i25: ((c == n) ==> ((c >= 0) && (c <= n)));\nloop invariant i26: (n > 0) ==> (c <= n);\nloop invariant i27: (n > 0) ==> (c >= 0);\nloop invariant i28: 0 <= c <= n + 1;\nloop invariant i29: c == n + 1 ==> (c >= n);\nloop invariant i30: c == n ==> (c == n);\nloop invariant i31: c != n ==> (c != n);\nloop invariant i32: c == 1 ==> (c == 1);\nloop invariant i33: c == 0 ==> (c == 0);\nloop invariant i34: c > -1;\nloop invariant i35: c < n + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i57: c <= n;\nloop invariant i58: c >= 0;\n\nloop invariant i60: c == 0 ==> (n > 0);\nloop invariant i61: c == n ==> (n > 0);\nloop invariant i62: 0 <= c <= n; loop invariant 0 <= c <= n; loop invariant c <= n; loop invariant 0 <= c <= n; loop invariant c == n ==> n > -1;\n\n\n\n\n\n\n\nloop invariant i70: 0 <= c;\nloop invariant i71: c <= n + 1;\n\n\nloop invariant i74: 0 <= n;\n\nloop invariant i76: n > -1 ==> c >= -1;\nloop invariant i77: n > -1 ==> c <= n;\nloop invariant i78: n > -1 ==> c == n ==> n > -1;\nloop invariant i79: n > -1 ==> c == n ==> c >= -1;\nloop invariant i80: n > -1 ==> c == n ==> c <= n;\nloop invariant i81: n > -1 ==> c == n ==> n > -1 ==> c >= -1;\nloop invariant i82: n > -1 ==> c == n ==> n > -1 ==> c <= n;\nloop invariant i83: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i84: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i85: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i86: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i87: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i88: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i89: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i90: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i91: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i92: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i93: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i94: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1;\nloop invariant i95: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n;\nloop invariant i96: n > -1 ==> c == n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1 ==> c >= -1 ==> c <= n ==> n > -1;\nloop invariant i97: c <= n ==> c == n ==> n > -1;\nloop invariant i98: c <= n ==> c == n ==> n > -1 ==> c == n;\nloop invariant i99: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n;\nloop invariant i100: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n;\nloop invariant i101: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i102: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i103: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i104: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i105: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i106: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i107: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i108: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i109: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i110: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i111: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i112: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i113: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i114: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\nloop invariant i115: c <= n ==> c == n ==> n > -1 ==> c == n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n ==> c <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c == n) )\n{;\n//@ assert( (n > -1) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 40,
        "success_count": 33,
        "failure_count": 7,
        "success_rate": 0.825
    }
}