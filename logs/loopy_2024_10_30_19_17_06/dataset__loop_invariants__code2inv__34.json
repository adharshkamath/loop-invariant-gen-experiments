{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/34.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant n - x == 0;\n*/\n```",
            "```\n/*@\nloop invariant x = n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant n - x >= 0;\nloop invariant x - n <= 0;\nloop invariant x - n = 0;\nloop invariant x = n - x;\nloop invariant x + x = n;\nloop invariant 2 * x = n;\nloop invariant x = n / 2;\nloop invariant x = n % 2;\nloop invariant x = n % 2 == 0;\nloop invariant x = n % 2 == 1;\nloop invariant x = n % 2 == 0 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x + 1 == n;\nloop invariant x == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x <= n;\nloop invariant x == n - (loop counter);\nloop invariant loop counter <= n;\nloop invariant loop counter >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - x;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= n;\nloop invariant n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x + 1 == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n;\nloop invariant 0 <= x <= n;\nloop invariant x >= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - i;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (x - 1);\nloop invariant x == n - x + 1;\nloop invariant x == n - (x - 1) + 1;\nloop invariant x == n - x + 2;\nloop invariant x == n - (x - 1) + 2;\nloop invariant x == n - x + 3;\nloop invariant x == n - (x - 1) + 3;\nloop invariant x == n - x + 4;\nloop invariant x == n - (x - 1) + 4;\nloop invariant x == n - x + 5;\nloop invariant x == n - (x - 1) + 5;\nloop invariant x == n - x + 6;\nloop invariant x == n - (x - 1) + 6;\nloop invariant x == n - x + 7;\nloop invariant x == n - (x - 1) + 7;\nloop invariant x == n - x + 8;\nloop invariant x == n - (x - 1) + 8;\nloop invariant x == n - x + 9;\nloop invariant x == n - (x - 1) + 9;\nloop invariant x == n - x + 10;\nloop invariant x == n - (x - 1) + 10;\nloop invariant x == n - x + 11;\nloop invariant x == n - (x - 1) + 11;\nloop invariant x == n - x + 12;\nloop invariant x == n - (x - 1) + 12;\nloop invariant x == n - x + 13;\nloop invariant x == n - (x - 1) + 13;\nloop invariant x == n - x + 14;\nloop invariant x == n - (x - 1) + 14;\nloop invariant x == n - x + 15;\nloop invariant x == n - (x - 1) + 15;\nloop invariant x == n - x + 16;\nloop invariant x == n - (x - 1) + 16;\nloop invariant x == n - x + 17;\nloop invariant x == n - (x - 1) + 17;\nloop invariant x == n - x + 18;\nloop invariant x == n - (x - 1) + 18;\nloop invariant x == n - x + 19;\nloop invariant x == n - (x - 1) + 19;\nloop invariant x == n - x + 20;\nloop invariant x == n - (x - 1) + 20;\nloop invariant x == n - x + 21;\nloop invariant x == n - (x - 1) + 21;\nloop invariant x == n - x + 22;\nloop invariant x == n - (x - 1) + 22;\nloop invariant x == n - x + 23;\nloop invariant x == n - (x - 1) + 23;\nloop invariant x == n - x + 24;\nloop invariant x == n - (x - 1) + 24;\nloop invariant x == n - x + 25;\nloop invariant x == n - (x - 1) + 25;\nloop invariant x == n - x + 26;\nloop invariant x == n - (x - 1) + 26;\nloop invariant x == n - x + 27;\nloop invariant x == n - (x - 1) + 27;\nloop invariant x == n - x + 28;\nloop invariant x == n - (x - 1) + 28;\nloop invariant x == n - x + 29;\nloop invariant x == n - (x - 1) + 29;\nloop invariant x == n - x + 30;\nloop invariant x == n - (x - 1) + 30;\nloop invariant x == n - x + 31;\nloop invariant x == n - (x - 1) + 31;\nloop invariant x == n - x + 32;\nloop invariant x == n - (x - 1) + 32;\nloop invariant x == n - x + 33;\nloop invariant x == n - (x - 1) + 33;\nloop invariant x == n - x + 34;\nloop invariant x == n - (x - 1) + 34;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - i;\nloop invariant x <= n;\nloop invariant x == n - i;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant n >= 0;\nloop invariant n <= 0;\nloop invariant n == 0;\nloop invariant n == 1;\nloop invariant n == 2;\nloop invariant n == 3;\nloop invariant n == 4;\nloop invariant n == 5;\nloop invariant n == 6;\nloop invariant n == 7;\nloop invariant n == 8;\nloop invariant n == 9;\nloop invariant n == 10;\nloop invariant n == 11;\nloop invariant n == 12;\nloop invariant n == 13;\nloop invariant n == 14;\nloop invariant n == 15;\nloop invariant n == 16;\nloop invariant n == 17;\nloop invariant n == 18;\nloop invariant n == 19;\nloop invariant n == 20;\nloop invariant n == 21;\nloop invariant n == 22;\nloop invariant n == 23;\nloop invariant n == 24;\nloop invariant n == 25;\nloop invariant n == 26;\nloop invariant n == 27;\nloop invariant n == 28;\nloop invariant n == 29;\nloop invariant n == 30;\nloop invariant n == 31;\nloop invariant n == 32;\nloop invariant n == 33;\nloop invariant n == 34;\nloop invariant n == 35;\nloop invariant n == 36;\nloop invariant n == 37;\nloop invariant n == 38;\nloop invariant n == 39;\nloop invariant n == 40;\nloop invariant n == 41;\nloop invariant n == 42;\nloop invariant n == 43;\nloop invariant n == 44;\nloop invariant n == 45;\nloop invariant n == 46;\nloop invariant n == 47;\nloop invariant n == 48;\nloop invariant n == 49;\nloop invariant n == 50;\nloop invariant n == 51;\nloop invariant n == 52;\nloop invariant n == 53;\nloop invariant n == 54;\nloop invariant n == 55;\nloop invariant n == 56;\nloop invariant n == 57;\nloop invariant n == 58;\nloop invariant n == 59;\nloop invariant n == 60;\nloop invariant n == 61;\nloop invariant n == 62;\nloop invariant n == 63;\nloop invariant n == 64;\nloop invariant n == 65;\nloop invariant n == 66;\nloop invariant n == 67;\nloop invariant n == 68;\nloop invariant n == 69;\nloop invariant n == 70;\nloop invariant n == 71;\nloop invariant n == 72;\nloop invariant n == 73;\nloop invariant n == 74;\nloop invariant n == 75;\nloop invariant n == 76;\nloop invariant n == 77;\nloop invariant n == 78;\nloop invariant n == 79;\nloop invariant n == 80;\nloop invariant n == 81;\nloop invariant n == 82;\nloop invariant n == 83;\nloop invariant n == 84;\nloop invariant n == 85;\nloop invariant n == 86;\nloop invariant n == 87;\nloop invariant n == 88;\nloop invariant n == 89;\nloop invariant n == 90;\nloop invariant n == 91;\nloop invariant n == 92;\nloop invariant n == 93;\nloop invariant n == 94;\nloop invariant n == 95;\nloop invariant n == 96;\nloop invariant n == 97;\nloop invariant n == 98;\nloop invariant n == 99;\nloop invariant n == 100;\nloop invariant n == 101;\nloop invariant n == 102;\nloop invariant n == 103;\nloop invariant n == 104;\nloop invariant n == 105;\nloop invariant n == 106;\nloop invariant n == 107;\nloop invariant n == 108;\nloop invariant n == 109;\nloop invariant n == 110;\nloop invariant n == 111;\nloop invariant n == 112;\nloop invariant n == 113;\nloop invariant n == 114;\nloop invariant n == 115;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0 ==> n >= x;\nloop invariant x >= 0 ==> x <= n;\nloop invariant n >= 0 ==> n >= x;\nloop invariant x >= 0 ==> n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n && n <= 2147483647;\nloop invariant 0 <= x && x <= 2147483647;\nloop invariant x <= n;\nloop invariant n - x <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x - n <= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == (n - x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - (iteraion_count);\nloop invariant iteration_count >= 0;\nloop invariant iteration_count <= n;\nloop invariant x == n - iteration_count;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant n - x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 28,
                "annotations": "```\n/*@\nloop invariant x = n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant n - x >= 0;\nloop invariant x - n <= 0;\nloop invariant x - n = 0;\nloop invariant x = n - x;\nloop invariant x + x = n;\nloop invariant 2 * x = n;\nloop invariant x = n / 2;\nloop invariant x = n % 2;\nloop invariant x = n % 2 == 0;\nloop invariant x = n % 2 == 1;\nloop invariant x = n % 2 == 0 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\nloop invariant i4: x <= n;\nloop invariant i5: n - x >= 0;\nloop invariant i6: x - n <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x + 1 == n;\nloop invariant x == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x <= n;\nloop invariant x == n - (loop counter);\nloop invariant loop counter <= n;\nloop invariant loop counter >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - x;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\nloop invariant x == n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= n;\nloop invariant n >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x + 1 == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n;\nloop invariant 0 <= x <= n;\nloop invariant x >= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - i;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 36,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (x - 1);\nloop invariant x == n - x + 1;\nloop invariant x == n - (x - 1) + 1;\nloop invariant x == n - x + 2;\nloop invariant x == n - (x - 1) + 2;\nloop invariant x == n - x + 3;\nloop invariant x == n - (x - 1) + 3;\nloop invariant x == n - x + 4;\nloop invariant x == n - (x - 1) + 4;\nloop invariant x == n - x + 5;\nloop invariant x == n - (x - 1) + 5;\nloop invariant x == n - x + 6;\nloop invariant x == n - (x - 1) + 6;\nloop invariant x == n - x + 7;\nloop invariant x == n - (x - 1) + 7;\nloop invariant x == n - x + 8;\nloop invariant x == n - (x - 1) + 8;\nloop invariant x == n - x + 9;\nloop invariant x == n - (x - 1) + 9;\nloop invariant x == n - x + 10;\nloop invariant x == n - (x - 1) + 10;\nloop invariant x == n - x + 11;\nloop invariant x == n - (x - 1) + 11;\nloop invariant x == n - x + 12;\nloop invariant x == n - (x - 1) + 12;\nloop invariant x == n - x + 13;\nloop invariant x == n - (x - 1) + 13;\nloop invariant x == n - x + 14;\nloop invariant x == n - (x - 1) + 14;\nloop invariant x == n - x + 15;\nloop invariant x == n - (x - 1) + 15;\nloop invariant x == n - x + 16;\nloop invariant x == n - (x - 1) + 16;\nloop invariant x == n - x + 17;\nloop invariant x == n - (x - 1) + 17;\nloop invariant x == n - x + 18;\nloop invariant x == n - (x - 1) + 18;\nloop invariant x == n - x + 19;\nloop invariant x == n - (x - 1) + 19;\nloop invariant x == n - x + 20;\nloop invariant x == n - (x - 1) + 20;\nloop invariant x == n - x + 21;\nloop invariant x == n - (x - 1) + 21;\nloop invariant x == n - x + 22;\nloop invariant x == n - (x - 1) + 22;\nloop invariant x == n - x + 23;\nloop invariant x == n - (x - 1) + 23;\nloop invariant x == n - x + 24;\nloop invariant x == n - (x - 1) + 24;\nloop invariant x == n - x + 25;\nloop invariant x == n - (x - 1) + 25;\nloop invariant x == n - x + 26;\nloop invariant x == n - (x - 1) + 26;\nloop invariant x == n - x + 27;\nloop invariant x == n - (x - 1) + 27;\nloop invariant x == n - x + 28;\nloop invariant x == n - (x - 1) + 28;\nloop invariant x == n - x + 29;\nloop invariant x == n - (x - 1) + 29;\nloop invariant x == n - x + 30;\nloop invariant x == n - (x - 1) + 30;\nloop invariant x == n - x + 31;\nloop invariant x == n - (x - 1) + 31;\nloop invariant x == n - x + 32;\nloop invariant x == n - (x - 1) + 32;\nloop invariant x == n - x + 33;\nloop invariant x == n - (x - 1) + 33;\nloop invariant x == n - x + 34;\nloop invariant x == n - (x - 1) + 34;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 63,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - i;\nloop invariant x <= n;\nloop invariant x == n - i;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant n >= 0;\nloop invariant n <= 0;\nloop invariant n == 0;\nloop invariant n == 1;\nloop invariant n == 2;\nloop invariant n == 3;\nloop invariant n == 4;\nloop invariant n == 5;\nloop invariant n == 6;\nloop invariant n == 7;\nloop invariant n == 8;\nloop invariant n == 9;\nloop invariant n == 10;\nloop invariant n == 11;\nloop invariant n == 12;\nloop invariant n == 13;\nloop invariant n == 14;\nloop invariant n == 15;\nloop invariant n == 16;\nloop invariant n == 17;\nloop invariant n == 18;\nloop invariant n == 19;\nloop invariant n == 20;\nloop invariant n == 21;\nloop invariant n == 22;\nloop invariant n == 23;\nloop invariant n == 24;\nloop invariant n == 25;\nloop invariant n == 26;\nloop invariant n == 27;\nloop invariant n == 28;\nloop invariant n == 29;\nloop invariant n == 30;\nloop invariant n == 31;\nloop invariant n == 32;\nloop invariant n == 33;\nloop invariant n == 34;\nloop invariant n == 35;\nloop invariant n == 36;\nloop invariant n == 37;\nloop invariant n == 38;\nloop invariant n == 39;\nloop invariant n == 40;\nloop invariant n == 41;\nloop invariant n == 42;\nloop invariant n == 43;\nloop invariant n == 44;\nloop invariant n == 45;\nloop invariant n == 46;\nloop invariant n == 47;\nloop invariant n == 48;\nloop invariant n == 49;\nloop invariant n == 50;\nloop invariant n == 51;\nloop invariant n == 52;\nloop invariant n == 53;\nloop invariant n == 54;\nloop invariant n == 55;\nloop invariant n == 56;\nloop invariant n == 57;\nloop invariant n == 58;\nloop invariant n == 59;\nloop invariant n == 60;\nloop invariant n == 61;\nloop invariant n == 62;\nloop invariant n == 63;\nloop invariant n == 64;\nloop invariant n == 65;\nloop invariant n == 66;\nloop invariant n == 67;\nloop invariant n == 68;\nloop invariant n == 69;\nloop invariant n == 70;\nloop invariant n == 71;\nloop invariant n == 72;\nloop invariant n == 73;\nloop invariant n == 74;\nloop invariant n == 75;\nloop invariant n == 76;\nloop invariant n == 77;\nloop invariant n == 78;\nloop invariant n == 79;\nloop invariant n == 80;\nloop invariant n == 81;\nloop invariant n == 82;\nloop invariant n == 83;\nloop invariant n == 84;\nloop invariant n == 85;\nloop invariant n == 86;\nloop invariant n == 87;\nloop invariant n == 88;\nloop invariant n == 89;\nloop invariant n == 90;\nloop invariant n == 91;\nloop invariant n == 92;\nloop invariant n == 93;\nloop invariant n == 94;\nloop invariant n == 95;\nloop invariant n == 96;\nloop invariant n == 97;\nloop invariant n == 98;\nloop invariant n == 99;\nloop invariant n == 100;\nloop invariant n == 101;\nloop invariant n == 102;\nloop invariant n == 103;\nloop invariant n == 104;\nloop invariant n == 105;\nloop invariant n == 106;\nloop invariant n == 107;\nloop invariant n == 108;\nloop invariant n == 109;\nloop invariant n == 110;\nloop invariant n == 111;\nloop invariant n == 112;\nloop invariant n == 113;\nloop invariant n == 114;\nloop invariant n == 115;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0 ==> n >= x;\nloop invariant x >= 0 ==> x <= n;\nloop invariant n >= 0 ==> n >= x;\nloop invariant x >= 0 ==> n >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x >= 0 ==> n >= x;\nloop invariant i3: x >= 0 ==> x <= n;\nloop invariant i4: n >= 0 ==> n >= x;\nloop invariant i5: x >= 0 ==> n >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n && n <= 2147483647;\nloop invariant 0 <= x && x <= 2147483647;\nloop invariant x <= n;\nloop invariant n - x <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x - n <= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == (n - x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x - n <= 0;\n\nloop invariant i4: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - (iteraion_count);\nloop invariant iteration_count >= 0;\nloop invariant iteration_count <= n;\nloop invariant x == n - iteration_count;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 22: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\nloop invariant i1: n >= 0;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= n;\nloop invariant i4: n - x == 0;\nloop invariant i5: x = n;\nloop invariant i6: n - x >= 0;\nloop invariant i7: x - n <= 0;\nloop invariant i8: x - n = 0;\nloop invariant i9: x = n - x;\nloop invariant i10: x + x = n;\nloop invariant i11: 2 * x = n;\nloop invariant i12: x = n / 2;\nloop invariant i13: x = n % 2;\nloop invariant i14: x = n % 2 == 0;\nloop invariant i15: x = n % 2 == 1;\nloop invariant i16: x = n % 2 == 0 ==> x = n / 2;\nloop invariant i17: x = n % 2 == 1 ==> x = (n + 1) / 2;\nloop invariant i18: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2;\nloop invariant i19: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i20: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i21: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i22: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i23: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i24: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i25: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i26: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i27: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i28: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i29: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i30: x = n % 2 == 0 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2 ==> x = n / 2;\nloop invariant i31: x = n % 2 == 1 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2 ==> x = (n + 1) / 2;\nloop invariant i32: 0 <= x <= n;\nloop invariant i33: x + 1 == n;\nloop invariant i34: x == n;\nloop invariant i35: x == n - (loop counter);\nloop invariant i36: loop counter <= n;\nloop invariant i37: loop counter >= 0;\nloop invariant i38: x >= n - x;\nloop invariant i39: x == n - x;\nloop invariant i40: 0 <= x;\nloop invariant i41: x >= n;\nloop invariant i42: x >= n - i;\nloop invariant i43: x == n - (x - 1);\nloop invariant i44: x == n - x + 1;\nloop invariant i45: x == n - (x - 1) + 1;\nloop invariant i46: x == n - x + 2;\nloop invariant i47: x == n - (x - 1) + 2;\nloop invariant i48: x == n - x + 3;\nloop invariant i49: x == n - (x - 1) + 3;\nloop invariant i50: x == n - x + 4;\nloop invariant i51: x == n - (x - 1) + 4;\nloop invariant i52: x == n - x + 5;\nloop invariant i53: x == n - (x - 1) + 5;\nloop invariant i54: x == n - x + 6;\nloop invariant i55: x == n - (x - 1) + 6;\nloop invariant i56: x == n - x + 7;\nloop invariant i57: x == n - (x - 1) + 7;\nloop invariant i58: x == n - x + 8;\nloop invariant i59: x == n - (x - 1) + 8;\nloop invariant i60: x == n - x + 9;\nloop invariant i61: x == n - (x - 1) + 9;\nloop invariant i62: x == n - x + 10;\nloop invariant i63: x == n - (x - 1) + 10;\nloop invariant i64: x == n - x + 11;\nloop invariant i65: x == n - (x - 1) + 11;\nloop invariant i66: x == n - x + 12;\nloop invariant i67: x == n - (x - 1) + 12;\nloop invariant i68: x == n - x + 13;\nloop invariant i69: x == n - (x - 1) + 13;\nloop invariant i70: x == n - x + 14;\nloop invariant i71: x == n - (x - 1) + 14;\nloop invariant i72: x == n - x + 15;\nloop invariant i73: x == n - (x - 1) + 15;\nloop invariant i74: x == n - x + 16;\nloop invariant i75: x == n - (x - 1) + 16;\nloop invariant i76: x == n - x + 17;\nloop invariant i77: x == n - (x - 1) + 17;\nloop invariant i78: x == n - x + 18;\nloop invariant i79: x == n - (x - 1) + 18;\nloop invariant i80: x == n - x + 19;\nloop invariant i81: x == n - (x - 1) + 19;\nloop invariant i82: x == n - x + 20;\nloop invariant i83: x == n - (x - 1) + 20;\nloop invariant i84: x == n - x + 21;\nloop invariant i85: x == n - (x - 1) + 21;\nloop invariant i86: x == n - x + 22;\nloop invariant i87: x == n - (x - 1) + 22;\nloop invariant i88: x == n - x + 23;\nloop invariant i89: x == n - (x - 1) + 23;\nloop invariant i90: x == n - x + 24;\nloop invariant i91: x == n - (x - 1) + 24;\nloop invariant i92: x == n - x + 25;\nloop invariant i93: x == n - (x - 1) + 25;\nloop invariant i94: x == n - x + 26;\nloop invariant i95: x == n - (x - 1) + 26;\nloop invariant i96: x == n - x + 27;\nloop invariant i97: x == n - (x - 1) + 27;\nloop invariant i98: x == n - x + 28;\nloop invariant i99: x == n - (x - 1) + 28;\nloop invariant i100: x == n - x + 29;\nloop invariant i101: x == n - (x - 1) + 29;\nloop invariant i102: x == n - x + 30;\nloop invariant i103: x == n - (x - 1) + 30;\nloop invariant i104: x == n - x + 31;\nloop invariant i105: x == n - (x - 1) + 31;\nloop invariant i106: x == n - x + 32;\nloop invariant i107: x == n - (x - 1) + 32;\nloop invariant i108: x == n - x + 33;\nloop invariant i109: x == n - (x - 1) + 33;\nloop invariant i110: x == n - x + 34;\nloop invariant i111: x == n - (x - 1) + 34;\nloop invariant i112: x == n - i;\nloop invariant i113: x == 0;\nloop invariant i114: n <= 0;\nloop invariant i115: n == 0;\nloop invariant i116: n == 1;\nloop invariant i117: n == 2;\nloop invariant i118: n == 3;\nloop invariant i119: n == 4;\nloop invariant i120: n == 5;\nloop invariant i121: n == 6;\nloop invariant i122: n == 7;\nloop invariant i123: n == 8;\nloop invariant i124: n == 9;\nloop invariant i125: n == 10;\nloop invariant i126: n == 11;\nloop invariant i127: n == 12;\nloop invariant i128: n == 13;\nloop invariant i129: n == 14;\nloop invariant i130: n == 15;\nloop invariant i131: n == 16;\nloop invariant i132: n == 17;\nloop invariant i133: n == 18;\nloop invariant i134: n == 19;\nloop invariant i135: n == 20;\nloop invariant i136: n == 21;\nloop invariant i137: n == 22;\nloop invariant i138: n == 23;\nloop invariant i139: n == 24;\nloop invariant i140: n == 25;\nloop invariant i141: n == 26;\nloop invariant i142: n == 27;\nloop invariant i143: n == 28;\nloop invariant i144: n == 29;\nloop invariant i145: n == 30;\nloop invariant i146: n == 31;\nloop invariant i147: n == 32;\nloop invariant i148: n == 33;\nloop invariant i149: n == 34;\nloop invariant i150: n == 35;\nloop invariant i151: n == 36;\nloop invariant i152: n == 37;\nloop invariant i153: n == 38;\nloop invariant i154: n == 39;\nloop invariant i155: n == 40;\nloop invariant i156: n == 41;\nloop invariant i157: n == 42;\nloop invariant i158: n == 43;\nloop invariant i159: n == 44;\nloop invariant i160: n == 45;\nloop invariant i161: n == 46;\nloop invariant i162: n == 47;\nloop invariant i163: n == 48;\nloop invariant i164: n == 49;\nloop invariant i165: n == 50;\nloop invariant i166: n == 51;\nloop invariant i167: n == 52;\nloop invariant i168: n == 53;\nloop invariant i169: n == 54;\nloop invariant i170: n == 55;\nloop invariant i171: n == 56;\nloop invariant i172: n == 57;\nloop invariant i173: n == 58;\nloop invariant i174: n == 59;\nloop invariant i175: n == 60;\nloop invariant i176: n == 61;\nloop invariant i177: n == 62;\nloop invariant i178: n == 63;\nloop invariant i179: n == 64;\nloop invariant i180: n == 65;\nloop invariant i181: n == 66;\nloop invariant i182: n == 67;\nloop invariant i183: n == 68;\nloop invariant i184: n == 69;\nloop invariant i185: n == 70;\nloop invariant i186: n == 71;\nloop invariant i187: n == 72;\nloop invariant i188: n == 73;\nloop invariant i189: n == 74;\nloop invariant i190: n == 75;\nloop invariant i191: n == 76;\nloop invariant i192: n == 77;\nloop invariant i193: n == 78;\nloop invariant i194: n == 79;\nloop invariant i195: n == 80;\nloop invariant i196: n == 81;\nloop invariant i197: n == 82;\nloop invariant i198: n == 83;\nloop invariant i199: n == 84;\nloop invariant i200: n == 85;\nloop invariant i201: n == 86;\nloop invariant i202: n == 87;\nloop invariant i203: n == 88;\nloop invariant i204: n == 89;\nloop invariant i205: n == 90;\nloop invariant i206: n == 91;\nloop invariant i207: n == 92;\nloop invariant i208: n == 93;\nloop invariant i209: n == 94;\nloop invariant i210: n == 95;\nloop invariant i211: n == 96;\nloop invariant i212: n == 97;\nloop invariant i213: n == 98;\nloop invariant i214: n == 99;\nloop invariant i215: n == 100;\nloop invariant i216: n == 101;\nloop invariant i217: n == 102;\nloop invariant i218: n == 103;\nloop invariant i219: n == 104;\nloop invariant i220: n == 105;\nloop invariant i221: n == 106;\nloop invariant i222: n == 107;\nloop invariant i223: n == 108;\nloop invariant i224: n == 109;\nloop invariant i225: n == 110;\nloop invariant i226: n == 111;\nloop invariant i227: n == 112;\nloop invariant i228: n == 113;\nloop invariant i229: n == 114;\nloop invariant i230: n == 115;\nloop invariant i231: x >= 0 ==> n >= x;\nloop invariant i232: x >= 0 ==> x <= n;\nloop invariant i233: n >= 0 ==> n >= x;\nloop invariant i234: x >= 0 ==> n >= 0;\nloop invariant i235: 0 <= n && n <= 2147483647;\nloop invariant i236: 0 <= x && x <= 2147483647;\nloop invariant i237: n - x <= 0;\nloop invariant i238: x == (n - x);\nloop invariant i239: x == n - (iteraion_count);\nloop invariant i240: iteration_count >= 0;\nloop invariant i241: iteration_count <= n;\nloop invariant i242: x == n - iteration_count;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 135,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int v1;\n  int v2;\n  int v3;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\nloop invariant i6: n - x >= 0;\nloop invariant i7: x - n <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i231: x >= 0 ==> n >= x;\nloop invariant i232: x >= 0 ==> x <= n;\nloop invariant i233: n >= 0 ==> n >= x;\nloop invariant i234: x >= 0 ==> n >= 0;\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 25,
        "success_count": 18,
        "failure_count": 7,
        "success_rate": 0.72
    }
}