{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant (i%2 == 0) ==> (i <= k);\nloop invariant (i%3 == 0) ==> (i <= j);\nloop invariant (i%4 == 0) ==> (i <= v4);\nloop invariant (i%5 == 0) ==> (i <= v3);\nloop invariant (i%6 == 0) ==> (i <= v2);\nloop invariant (i%7 == 0) ==> (i <= v1);\nloop invariant (i%8 == 0) ==> (i <= v5);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l < n;\nloop invariant v1 + v2 + v3 + v4 + v5 + i + j + k = l;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n <= 20000001;\nloop invariant l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= v5 <= n/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n; loop invariant 0 <= i <= l / 2; loop invariant 0 <= j <= l / 2; loop invariant 0 <= k <= l / 2; loop invariant 0 <= v1 <= l / 7; loop invariant 0 <= v2 <= l / 6; loop invariant 0 <= v3 <= l / 5; loop invariant 0 <= v4 <= l / 4; loop invariant 0 <= v5 <= l / 8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= l <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant k % 2 == 0;\nloop invariant v1 % 3 == 1;\nloop invariant v2 % 3 == 2;\nloop invariant v3 % 3 == 0;\nloop invariant v4 % 3 == 2;\nloop invariant v5 % 3 == 0;\nloop invariant i % 4 == 0;\nloop invariant j % 4 == 1;\nloop invariant k % 4 == 2;\nloop invariant v1 % 4 == 2;\nloop invariant v2 % 4 == 3;\nloop invariant v3 % 4 == 1;\nloop invariant v4 % 4 == 0;\nloop invariant v5 % 4 == 3;\nloop invariant i % 5 == 0;\nloop invariant j % 5 == 1;\nloop invariant k % 5 == 2;\nloop invariant v1 % 5 == 3;\nloop invariant v2 % 5 == 4;\nloop invariant v3 % 5 == 0;\nloop invariant v4 % 5 == 4;\nloop invariant v5 % 5 == 0;\nloop invariant i % 6 == 0;\nloop invariant j % 6 == 1;\nloop invariant k % 6 == 2;\nloop invariant v1 % 6 == 4;\nloop invariant v2 % 6 == 5;\nloop invariant v3 % 6 == 0;\nloop invariant v4 % 6 == 3;\nloop invariant v5 % 6 == 0;\nloop invariant i % 7 == 0;\nloop invariant j % 7 == 1;\nloop invariant k % 7 == 2;\nloop invariant v1 % 7 == 2;\nloop invariant v2 % 7 == 3;\nloop invariant v3 % 7 == 4;\nloop invariant v4 % 7 == 5;\nloop invariant v5 % 7 == 0;\nloop invariant i % 8 == 0;\nloop invariant j % 8 == 1;\nloop invariant k % 8 == 2;\nloop invariant v1 % 8 == 3;\nloop invariant v2 % 8 == 4;\nloop invariant v3 % 8 == 5;\nloop invariant v4 % 8 == 6;\nloop invariant v5 % 8 == 0;\nloop invariant l % 8 == 0;\nloop invariant l % 7 == 1;\nloop invariant l % 6 == 2;\nloop invariant l % 5 == 0;\nloop invariant l % 4 == 0;\nloop invariant l % 3 == 0;\nloop invariant l % 2 == 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant ((k + j) % 2 == 0) ==> (i <= l);\nloop invariant ((k + j) % 2 == 1) ==> (i == l);\nloop invariant ((k + j) % 3 == 0) ==> (v1 <= l);\nloop invariant ((k + j) % 3 == 1) ==> (v2 <= l);\nloop invariant ((k + j) % 3 == 2) ==> (v3 <= l);\nloop invariant ((k + j) % 4 == 0) ==> (v4 <= l);\nloop invariant ((k + j) % 4 == 1) ==> (v5 <= l);\nloop invariant ((k + j) % 4 == 2) ==> (v2 <= l);\nloop invariant ((k + j) % 4 == 3) ==> (v3 <= l);\nloop invariant ((k + j) % 5 == 0) ==> (v4 <= l);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant l == 0 ==> v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0 && v5 == 0 && i == 0 && j == 0 && k == 0;\nloop invariant l == n ==> i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8);\nloop invariant l == n ==> (i+j+k+v1+v2+v3+v4+v5) == n;\nloop invariant l == n ==> (n <= SIZE);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= SIZE; loop invariant 0 <= j <= SIZE/2; loop invariant 0 <= v1 <= SIZE/7; loop invariant 0 <= v2 <= SIZE/6; loop invariant 0 <= v3 <= SIZE/5; loop invariant 0 <= v4 <= SIZE/4; loop invariant 0 <= v5 <= SIZE/8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant v1 + v2 + v3 + v4 + v5 + i + j + k == l;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= v5 <= n/8;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
            "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant i+j+k+v1+v2+v3+v4+v5 == l;\nloop invariant l <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant l <= n;\nloop invariant 0 <= l;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant l%8 <= n%8;\nloop invariant l%7 <= n%7;\nloop invariant l%6 <= n%6;\nloop invariant l%5 <= n%5;\nloop invariant l%4 <= n%4;\nloop invariant l%3 <= n%3;\nloop invariant l%2 <= n%2;\nloop invariant l%1 <= n%1;\nloop invariant l%0 <= n%0;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant (i%2 == 0) ==> (i <= k);\nloop invariant (i%3 == 0) ==> (i <= j);\nloop invariant (i%4 == 0) ==> (i <= v4);\nloop invariant (i%5 == 0) ==> (i <= v3);\nloop invariant (i%6 == 0) ==> (i <= v2);\nloop invariant (i%7 == 0) ==> (i <= v1);\nloop invariant (i%8 == 0) ==> (i <= v5);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= l <= n;\nloop invariant i5: 0 <= v1 <= n;\nloop invariant i6: 0 <= v2 <= n;\nloop invariant i7: 0 <= v3 <= n;\nloop invariant i8: 0 <= v4 <= n;\nloop invariant i9: 0 <= v5 <= n;\nloop invariant i10: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= l < n;\nloop invariant v1 + v2 + v3 + v4 + v5 + i + j + k = l;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n <= 20000001;\nloop invariant l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\nloop invariant i3: v1 >= 0;\nloop invariant i4: v2 >= 0;\nloop invariant i5: v3 >= 0;\nloop invariant i6: v4 >= 0;\nloop invariant i7: v5 >= 0;\nloop invariant i8: i >= 0;\nloop invariant i9: j >= 0;\nloop invariant i10: k >= 0;\nloop invariant i11: n <= 20000001;\nloop invariant i12: l <= n;\nloop invariant i13: i <= l;\nloop invariant i14: j <= l;\nloop invariant i15: k <= l;\nloop invariant i16: v1 <= l;\nloop invariant i17: v2 <= l;\nloop invariant i18: v3 <= l;\nloop invariant i19: v4 <= l;\nloop invariant i20: v5 <= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= v5 <= n/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n\nloop invariant i10: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i11: l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l/2;\n\nloop invariant i4: 0 <= k <= l/2;\n\n\n\n\n\nloop invariant i10: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i11: l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n; loop invariant 0 <= i <= l / 2; loop invariant 0 <= j <= l / 2; loop invariant 0 <= k <= l / 2; loop invariant 0 <= v1 <= l / 7; loop invariant 0 <= v2 <= l / 6; loop invariant 0 <= v3 <= l / 5; loop invariant 0 <= v4 <= l / 4; loop invariant 0 <= v5 <= l / 8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n; loop invariant 0 <= i <= l / 2; loop invariant 0 <= j <= l / 2; loop invariant 0 <= k <= l / 2; loop invariant 0 <= v1 <= l / 7; loop invariant 0 <= v2 <= l / 6; loop invariant 0 <= v3 <= l / 5; loop invariant 0 <= v4 <= l / 4; loop invariant 0 <= v5 <= l / 8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 51,
                "annotations": "```\n/*@\nloop invariant 1 <= l <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant k % 2 == 0;\nloop invariant v1 % 3 == 1;\nloop invariant v2 % 3 == 2;\nloop invariant v3 % 3 == 0;\nloop invariant v4 % 3 == 2;\nloop invariant v5 % 3 == 0;\nloop invariant i % 4 == 0;\nloop invariant j % 4 == 1;\nloop invariant k % 4 == 2;\nloop invariant v1 % 4 == 2;\nloop invariant v2 % 4 == 3;\nloop invariant v3 % 4 == 1;\nloop invariant v4 % 4 == 0;\nloop invariant v5 % 4 == 3;\nloop invariant i % 5 == 0;\nloop invariant j % 5 == 1;\nloop invariant k % 5 == 2;\nloop invariant v1 % 5 == 3;\nloop invariant v2 % 5 == 4;\nloop invariant v3 % 5 == 0;\nloop invariant v4 % 5 == 4;\nloop invariant v5 % 5 == 0;\nloop invariant i % 6 == 0;\nloop invariant j % 6 == 1;\nloop invariant k % 6 == 2;\nloop invariant v1 % 6 == 4;\nloop invariant v2 % 6 == 5;\nloop invariant v3 % 6 == 0;\nloop invariant v4 % 6 == 3;\nloop invariant v5 % 6 == 0;\nloop invariant i % 7 == 0;\nloop invariant j % 7 == 1;\nloop invariant k % 7 == 2;\nloop invariant v1 % 7 == 2;\nloop invariant v2 % 7 == 3;\nloop invariant v3 % 7 == 4;\nloop invariant v4 % 7 == 5;\nloop invariant v5 % 7 == 0;\nloop invariant i % 8 == 0;\nloop invariant j % 8 == 1;\nloop invariant k % 8 == 2;\nloop invariant v1 % 8 == 3;\nloop invariant v2 % 8 == 4;\nloop invariant v3 % 8 == 5;\nloop invariant v4 % 8 == 6;\nloop invariant v5 % 8 == 0;\nloop invariant l % 8 == 0;\nloop invariant l % 7 == 1;\nloop invariant l % 6 == 2;\nloop invariant l % 5 == 0;\nloop invariant l % 4 == 0;\nloop invariant l % 3 == 0;\nloop invariant l % 2 == 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant ((k + j) % 2 == 0) ==> (i <= l);\nloop invariant ((k + j) % 2 == 1) ==> (i == l);\nloop invariant ((k + j) % 3 == 0) ==> (v1 <= l);\nloop invariant ((k + j) % 3 == 1) ==> (v2 <= l);\nloop invariant ((k + j) % 3 == 2) ==> (v3 <= l);\nloop invariant ((k + j) % 4 == 0) ==> (v4 <= l);\nloop invariant ((k + j) % 4 == 1) ==> (v5 <= l);\nloop invariant ((k + j) % 4 == 2) ==> (v2 <= l);\nloop invariant ((k + j) % 4 == 3) ==> (v3 <= l);\nloop invariant ((k + j) % 5 == 0) ==> (v4 <= l);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\nloop invariant i2: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i3: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i4: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i5: i <= l;\nloop invariant i6: j <= l;\nloop invariant i7: k <= l;\nloop invariant i8: v1 <= l;\nloop invariant i9: v2 <= l;\nloop invariant i10: v3 <= l;\nloop invariant i11: v4 <= l;\nloop invariant i12: v5 <= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i68: i >= 0;\nloop invariant i69: j >= 0;\nloop invariant i70: k >= 0;\nloop invariant i71: v1 >= 0;\nloop invariant i72: v2 >= 0;\nloop invariant i73: v3 >= 0;\nloop invariant i74: v4 >= 0;\nloop invariant i75: v5 >= 0;\nloop invariant i76: ((k + j) % 2 == 0) ==> (i <= l);\n\nloop invariant i78: ((k + j) % 3 == 0) ==> (v1 <= l);\nloop invariant i79: ((k + j) % 3 == 1) ==> (v2 <= l);\nloop invariant i80: ((k + j) % 3 == 2) ==> (v3 <= l);\nloop invariant i81: ((k + j) % 4 == 0) ==> (v4 <= l);\nloop invariant i82: ((k + j) % 4 == 1) ==> (v5 <= l);\nloop invariant i83: ((k + j) % 4 == 2) ==> (v2 <= l);\nloop invariant i84: ((k + j) % 4 == 3) ==> (v3 <= l);\nloop invariant i85: ((k + j) % 5 == 0) ==> (v4 <= l);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant l == 0 ==> v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0 && v5 == 0 && i == 0 && j == 0 && k == 0;\nloop invariant l == n ==> i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8);\nloop invariant l == n ==> (i+j+k+v1+v2+v3+v4+v5) == n;\nloop invariant l == n ==> (n <= SIZE);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i3: 0 <= v1 <= n;\nloop invariant i4: 0 <= v2 <= n;\nloop invariant i5: 0 <= v3 <= n;\nloop invariant i6: 0 <= v4 <= n;\nloop invariant i7: 0 <= v5 <= n;\nloop invariant i8: 0 <= i <= n;\nloop invariant i9: 0 <= j <= n;\nloop invariant i10: 0 <= k <= n;\nloop invariant i11: l == 0 ==> v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0 && v5 == 0 && i == 0 && j == 0 && k == 0;\n\nloop invariant i13: l == n ==> (i+j+k+v1+v2+v3+v4+v5) == n;\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= SIZE; loop invariant 0 <= j <= SIZE/2; loop invariant 0 <= v1 <= SIZE/7; loop invariant 0 <= v2 <= SIZE/6; loop invariant 0 <= v3 <= SIZE/5; loop invariant 0 <= v4 <= SIZE/4; loop invariant 0 <= v5 <= SIZE/8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l/2;\n\nloop invariant i4: 0 <= k <= l/2;\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant v1 + v2 + v3 + v4 + v5 + i + j + k == l;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v1 <= v5;\nloop invariant v2 <= v5;\nloop invariant v3 <= v5;\nloop invariant v4 <= v5;\nloop invariant i <= v5;\nloop invariant j <= v5;\nloop invariant k <= v5;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant v5 <= n;\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= v1 <= n;\nloop invariant i2: 0 <= v2 <= n;\nloop invariant i3: 0 <= v3 <= n;\nloop invariant i4: 0 <= v4 <= n;\nloop invariant i5: 0 <= v5 <= n;\nloop invariant i6: 0 <= i <= n;\nloop invariant i7: 0 <= j <= n;\nloop invariant i8: 0 <= k <= n;\nloop invariant i9: 0 <= l <= n;\nloop invariant i10: v1 + v2 + v3 + v4 + v5 + i + j + k == l;\nloop invariant i11: l <= n;\n\n\n\n\n\n\n\nloop invariant i19: v1 <= n;\nloop invariant i20: v2 <= n;\nloop invariant i21: v3 <= n;\nloop invariant i22: v4 <= n;\nloop invariant i23: v5 <= n;\nloop invariant i24: i <= n;\nloop invariant i25: j <= n;\nloop invariant i26: k <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= v5 <= n/8;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= n;\n\n\n\n\n\nloop invariant i10: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant j + i + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= v1 <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= v5 <= n;\nloop invariant i9: j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i10: j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i11: j + i + k + v1 + v2 + v3 + v4 + v5 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant i+j+k+v1+v2+v3+v4+v5 == l;\nloop invariant l <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= v1 <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= v5 <= n;\nloop invariant i9: i+j+k+v1+v2+v3+v4+v5 == l;\nloop invariant i10: l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant l <= n;\nloop invariant 0 <= l;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant l%8 <= n%8;\nloop invariant l%7 <= n%7;\nloop invariant l%6 <= n%6;\nloop invariant l%5 <= n%5;\nloop invariant l%4 <= n%4;\nloop invariant l%3 <= n%3;\nloop invariant l%2 <= n%2;\nloop invariant l%1 <= n%1;\nloop invariant l%0 <= n%0;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: l <= n;\nloop invariant i3: 0 <= l;\nloop invariant i4: i >= 0;\nloop invariant i5: j >= 0;\nloop invariant i6: k >= 0;\nloop invariant i7: v1 >= 0;\nloop invariant i8: v2 >= 0;\nloop invariant i9: v3 >= 0;\nloop invariant i10: v4 >= 0;\nloop invariant i11: v5 >= 0;\n\n\n\n\n\n\n\nloop invariant i19: l%1 <= n%1;\n\nloop invariant i21: (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant i22: (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 35: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= l <= n;\nloop invariant i5: 0 <= v1 <= n;\nloop invariant i6: 0 <= v2 <= n;\nloop invariant i7: 0 <= v3 <= n;\nloop invariant i8: 0 <= v4 <= n;\nloop invariant i9: 0 <= v5 <= n;\nloop invariant i10: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i11: (i%2 == 0) ==> (i <= k);\nloop invariant i12: (i%3 == 0) ==> (i <= j);\nloop invariant i13: (i%4 == 0) ==> (i <= v4);\nloop invariant i14: (i%5 == 0) ==> (i <= v3);\nloop invariant i15: (i%6 == 0) ==> (i <= v2);\nloop invariant i16: (i%7 == 0) ==> (i <= v1);\nloop invariant i17: (i%8 == 0) ==> (i <= v5);\nloop invariant i18: 0 <= l < n;\nloop invariant i19: v1 + v2 + v3 + v4 + v5 + i + j + k = l;\nloop invariant i20: v1 >= 0;\nloop invariant i21: v2 >= 0;\nloop invariant i22: v3 >= 0;\nloop invariant i23: v4 >= 0;\nloop invariant i24: v5 >= 0;\nloop invariant i25: i >= 0;\nloop invariant i26: j >= 0;\nloop invariant i27: k >= 0;\nloop invariant i28: n <= 20000001;\nloop invariant i29: l <= n;\nloop invariant i30: i <= l;\nloop invariant i31: j <= l;\nloop invariant i32: k <= l;\nloop invariant i33: v1 <= l;\nloop invariant i34: v2 <= l;\nloop invariant i35: v3 <= l;\nloop invariant i36: v4 <= l;\nloop invariant i37: v5 <= l;\nloop invariant i38: 0 <= i <= n/2;\nloop invariant i39: 0 <= j <= n/2;\nloop invariant i40: 0 <= k <= n/2;\nloop invariant i41: 0 <= v1 <= n/7;\nloop invariant i42: 0 <= v2 <= n/6;\nloop invariant i43: 0 <= v3 <= n/5;\nloop invariant i44: 0 <= v4 <= n/4;\nloop invariant i45: 0 <= v5 <= n/8;\nloop invariant i46: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i47: 0 <= i <= l/2;\nloop invariant i48: 0 <= j <= l/2;\nloop invariant i49: 0 <= k <= l/2;\nloop invariant i50: 0 <= v1 <= l/7;\nloop invariant i51: 0 <= v2 <= l/6;\nloop invariant i52: 0 <= v3 <= l/5;\nloop invariant i53: 0 <= v4 <= l/4;\nloop invariant i54: 0 <= v5 <= l/8;\nloop invariant i55: 0 <= l <= n; loop invariant 0 <= i <= l / 2; loop invariant 0 <= j <= l / 2; loop invariant 0 <= k <= l / 2; loop invariant 0 <= v1 <= l / 7; loop invariant 0 <= v2 <= l / 6; loop invariant 0 <= v3 <= l / 5; loop invariant 0 <= v4 <= l / 4; loop invariant 0 <= v5 <= l / 8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i56: 1 <= l <= n;\nloop invariant i57: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i58: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i59: i % 2 == 0;\nloop invariant i60: j % 2 == 1;\nloop invariant i61: k % 2 == 0;\nloop invariant i62: v1 % 3 == 1;\nloop invariant i63: v2 % 3 == 2;\nloop invariant i64: v3 % 3 == 0;\nloop invariant i65: v4 % 3 == 2;\nloop invariant i66: v5 % 3 == 0;\nloop invariant i67: i % 4 == 0;\nloop invariant i68: j % 4 == 1;\nloop invariant i69: k % 4 == 2;\nloop invariant i70: v1 % 4 == 2;\nloop invariant i71: v2 % 4 == 3;\nloop invariant i72: v3 % 4 == 1;\nloop invariant i73: v4 % 4 == 0;\nloop invariant i74: v5 % 4 == 3;\nloop invariant i75: i % 5 == 0;\nloop invariant i76: j % 5 == 1;\nloop invariant i77: k % 5 == 2;\nloop invariant i78: v1 % 5 == 3;\nloop invariant i79: v2 % 5 == 4;\nloop invariant i80: v3 % 5 == 0;\nloop invariant i81: v4 % 5 == 4;\nloop invariant i82: v5 % 5 == 0;\nloop invariant i83: i % 6 == 0;\nloop invariant i84: j % 6 == 1;\nloop invariant i85: k % 6 == 2;\nloop invariant i86: v1 % 6 == 4;\nloop invariant i87: v2 % 6 == 5;\nloop invariant i88: v3 % 6 == 0;\nloop invariant i89: v4 % 6 == 3;\nloop invariant i90: v5 % 6 == 0;\nloop invariant i91: i % 7 == 0;\nloop invariant i92: j % 7 == 1;\nloop invariant i93: k % 7 == 2;\nloop invariant i94: v1 % 7 == 2;\nloop invariant i95: v2 % 7 == 3;\nloop invariant i96: v3 % 7 == 4;\nloop invariant i97: v4 % 7 == 5;\nloop invariant i98: v5 % 7 == 0;\nloop invariant i99: i % 8 == 0;\nloop invariant i100: j % 8 == 1;\nloop invariant i101: k % 8 == 2;\nloop invariant i102: v1 % 8 == 3;\nloop invariant i103: v2 % 8 == 4;\nloop invariant i104: v3 % 8 == 5;\nloop invariant i105: v4 % 8 == 6;\nloop invariant i106: v5 % 8 == 0;\nloop invariant i107: l % 8 == 0;\nloop invariant i108: l % 7 == 1;\nloop invariant i109: l % 6 == 2;\nloop invariant i110: l % 5 == 0;\nloop invariant i111: l % 4 == 0;\nloop invariant i112: l % 3 == 0;\nloop invariant i113: l % 2 == 0;\nloop invariant i114: ((k + j) % 2 == 0) ==> (i <= l);\nloop invariant i115: ((k + j) % 2 == 1) ==> (i == l);\nloop invariant i116: ((k + j) % 3 == 0) ==> (v1 <= l);\nloop invariant i117: ((k + j) % 3 == 1) ==> (v2 <= l);\nloop invariant i118: ((k + j) % 3 == 2) ==> (v3 <= l);\nloop invariant i119: ((k + j) % 4 == 0) ==> (v4 <= l);\nloop invariant i120: ((k + j) % 4 == 1) ==> (v5 <= l);\nloop invariant i121: ((k + j) % 4 == 2) ==> (v2 <= l);\nloop invariant i122: ((k + j) % 4 == 3) ==> (v3 <= l);\nloop invariant i123: ((k + j) % 5 == 0) ==> (v4 <= l);\nloop invariant i124: l == 0 ==> v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0 && v5 == 0 && i == 0 && j == 0 && k == 0;\nloop invariant i125: l == n ==> i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8);\nloop invariant i126: l == n ==> (i+j+k+v1+v2+v3+v4+v5) == n;\nloop invariant i127: l == n ==> (n <= SIZE);\nloop invariant i128: l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant i129: 0 <= i <= SIZE; loop invariant 0 <= j <= SIZE/2; loop invariant 0 <= v1 <= SIZE/7; loop invariant 0 <= v2 <= SIZE/6; loop invariant 0 <= v3 <= SIZE/5; loop invariant 0 <= v4 <= SIZE/4; loop invariant 0 <= v5 <= SIZE/8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i130: v1 + v2 + v3 + v4 + v5 + i + j + k == l;\nloop invariant i131: v1 <= v5;\nloop invariant i132: v2 <= v5;\nloop invariant i133: v3 <= v5;\nloop invariant i134: v4 <= v5;\nloop invariant i135: i <= v5;\nloop invariant i136: j <= v5;\nloop invariant i137: k <= v5;\nloop invariant i138: v1 <= n;\nloop invariant i139: v2 <= n;\nloop invariant i140: v3 <= n;\nloop invariant i141: v4 <= n;\nloop invariant i142: v5 <= n;\nloop invariant i143: i <= n;\nloop invariant i144: j <= n;\nloop invariant i145: k <= n;\nloop invariant i146: i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\nloop invariant i147: j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i148: j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i149: j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i150: i+j+k+v1+v2+v3+v4+v5 == l;\nloop invariant i151: 0 <= l;\nloop invariant i152: l%8 <= n%8;\nloop invariant i153: l%7 <= n%7;\nloop invariant i154: l%6 <= n%6;\nloop invariant i155: l%5 <= n%5;\nloop invariant i156: l%4 <= n%4;\nloop invariant i157: l%3 <= n%3;\nloop invariant i158: l%2 <= n%2;\nloop invariant i159: l%1 <= n%1;\nloop invariant i160: l%0 <= n%0;\nloop invariant i161: (i+j+k+v1+v2+v3+v4+v5) >= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 40,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= l <= n;\nloop invariant i5: 0 <= v1 <= n;\nloop invariant i6: 0 <= v2 <= n;\nloop invariant i7: 0 <= v3 <= n;\nloop invariant i8: 0 <= v4 <= n;\nloop invariant i9: 0 <= v5 <= n;\nloop invariant i10: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i11: (i%2 == 0) ==> (i <= k);\nloop invariant i12: (i%3 == 0) ==> (i <= j);\nloop invariant i13: (i%4 == 0) ==> (i <= v4);\nloop invariant i14: (i%5 == 0) ==> (i <= v3);\nloop invariant i15: (i%6 == 0) ==> (i <= v2);\nloop invariant i16: (i%7 == 0) ==> (i <= v1);\nloop invariant i17: (i%8 == 0) ==> (i <= v5);\n\n\nloop invariant i20: v1 >= 0;\nloop invariant i21: v2 >= 0;\nloop invariant i22: v3 >= 0;\nloop invariant i23: v4 >= 0;\nloop invariant i24: v5 >= 0;\nloop invariant i25: i >= 0;\nloop invariant i26: j >= 0;\nloop invariant i27: k >= 0;\nloop invariant i28: n <= 20000001;\nloop invariant i29: l <= n;\nloop invariant i30: i <= l;\nloop invariant i31: j <= l;\nloop invariant i32: k <= l;\nloop invariant i33: v1 <= l;\nloop invariant i34: v2 <= l;\nloop invariant i35: v3 <= l;\nloop invariant i36: v4 <= l;\nloop invariant i37: v5 <= l;\nloop invariant i38: 0 <= i <= n/2;\nloop invariant i39: 0 <= j <= n/2;\nloop invariant i40: 0 <= k <= n/2;\nloop invariant i41: 0 <= v1 <= n/7;\nloop invariant i42: 0 <= v2 <= n/6;\nloop invariant i43: 0 <= v3 <= n/5;\nloop invariant i44: 0 <= v4 <= n/4;\n\nloop invariant i46: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i47: 0 <= i <= l/2;\nloop invariant i48: 0 <= j <= l/2;\nloop invariant i49: 0 <= k <= l/2;\nloop invariant i50: 0 <= v1 <= l/7;\nloop invariant i51: 0 <= v2 <= l/6;\nloop invariant i52: 0 <= v3 <= l/5;\nloop invariant i53: 0 <= v4 <= l/4;\n\nloop invariant i55: 0 <= l <= n; loop invariant 0 <= i <= l / 2; loop invariant 0 <= j <= l / 2; loop invariant 0 <= k <= l / 2; loop invariant 0 <= v1 <= l / 7; loop invariant 0 <= v2 <= l / 6; loop invariant 0 <= v3 <= l / 5; loop invariant 0 <= v4 <= l / 4; loop invariant 0 <= v5 <= l / 8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\n\nloop invariant i57: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i58: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i59: i % 2 == 0;\n\nloop invariant i61: k % 2 == 0;\n\n\nloop invariant i64: v3 % 3 == 0;\n\nloop invariant i66: v5 % 3 == 0;\nloop invariant i67: i % 4 == 0;\n\n\n\n\n\nloop invariant i73: v4 % 4 == 0;\n\nloop invariant i75: i % 5 == 0;\n\n\n\n\nloop invariant i80: v3 % 5 == 0;\n\nloop invariant i82: v5 % 5 == 0;\nloop invariant i83: i % 6 == 0;\n\n\n\n\nloop invariant i88: v3 % 6 == 0;\n\nloop invariant i90: v5 % 6 == 0;\nloop invariant i91: i % 7 == 0;\n\n\n\n\n\n\nloop invariant i98: v5 % 7 == 0;\nloop invariant i99: i % 8 == 0;\n\n\n\n\n\n\nloop invariant i106: v5 % 8 == 0;\nloop invariant i107: l % 8 == 0;\n\n\nloop invariant i110: l % 5 == 0;\nloop invariant i111: l % 4 == 0;\nloop invariant i112: l % 3 == 0;\nloop invariant i113: l % 2 == 0;\nloop invariant i114: ((k + j) % 2 == 0) ==> (i <= l);\nloop invariant i115: ((k + j) % 2 == 1) ==> (i == l);\nloop invariant i116: ((k + j) % 3 == 0) ==> (v1 <= l);\nloop invariant i117: ((k + j) % 3 == 1) ==> (v2 <= l);\nloop invariant i118: ((k + j) % 3 == 2) ==> (v3 <= l);\nloop invariant i119: ((k + j) % 4 == 0) ==> (v4 <= l);\nloop invariant i120: ((k + j) % 4 == 1) ==> (v5 <= l);\nloop invariant i121: ((k + j) % 4 == 2) ==> (v2 <= l);\nloop invariant i122: ((k + j) % 4 == 3) ==> (v3 <= l);\nloop invariant i123: ((k + j) % 5 == 0) ==> (v4 <= l);\nloop invariant i124: l == 0 ==> v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0 && v5 == 0 && i == 0 && j == 0 && k == 0;\nloop invariant i125: l == n ==> i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8);\nloop invariant i126: l == n ==> (i+j+k+v1+v2+v3+v4+v5) == n;\nloop invariant i127: l == n ==> (n <= SIZE);\nloop invariant i128: l == n ==> (n <= SIZE) ==> (i == (n/2) && j == (n/2) && k == (n/2) && v1 == (n/7) && v2 == (n/6) && v3 == (n/5) && v4 == (n/4) && v5 == (n/8) && (i+j+k+v1+v2+v3+v4+v5) == n);\nloop invariant i129: 0 <= i <= SIZE; loop invariant 0 <= j <= SIZE/2; loop invariant 0 <= v1 <= SIZE/7; loop invariant 0 <= v2 <= SIZE/6; loop invariant 0 <= v3 <= SIZE/5; loop invariant 0 <= v4 <= SIZE/4; loop invariant 0 <= v5 <= SIZE/8; loop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i130: v1 + v2 + v3 + v4 + v5 + i + j + k == l;\nloop invariant i131: v1 <= v5;\nloop invariant i132: v2 <= v5;\nloop invariant i133: v3 <= v5;\nloop invariant i134: v4 <= v5;\nloop invariant i135: i <= v5;\nloop invariant i136: j <= v5;\nloop invariant i137: k <= v5;\nloop invariant i138: v1 <= n;\nloop invariant i139: v2 <= n;\nloop invariant i140: v3 <= n;\nloop invariant i141: v4 <= n;\nloop invariant i142: v5 <= n;\nloop invariant i143: i <= n;\nloop invariant i144: j <= n;\nloop invariant i145: k <= n;\n\nloop invariant i147: j + i + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i148: j + i + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i149: j + i + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i150: i+j+k+v1+v2+v3+v4+v5 == l;\nloop invariant i151: 0 <= l;\nloop invariant i152: l%8 <= n%8;\nloop invariant i153: l%7 <= n%7;\nloop invariant i154: l%6 <= n%6;\nloop invariant i155: l%5 <= n%5;\nloop invariant i156: l%4 <= n%4;\nloop invariant i157: l%3 <= n%3;\nloop invariant i158: l%2 <= n%2;\nloop invariant i159: l%1 <= n%1;\n\nloop invariant i161: (i+j+k+v1+v2+v3+v4+v5) >= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c"
        ],
        "skipped": [],
        "total": 188,
        "success_count": 166,
        "failure_count": 22,
        "success_rate": 0.8829787234042553
    }
}