{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/4.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    while(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= z;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z >= y;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant z >= y ==> y >= 0;\nloop invariant y >= 0 ==> z >= y;\n*/\n```",
            "```\n/*@\nloop invariant x <= 500;\nloop invariant x >= 0;\nloop invariant y <= z;\nloop invariant z >= 0;\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant x <= 500 ==> y <= 500;\nloop invariant x <= 500 ==> z <= 500;\nloop invariant x <= 500 ==> y >= 0;\nloop invariant x <= 500 ==> z >= 0;\nloop invariant x <= 500 ==> y <= x;\nloop invariant x <= 500 ==> z <= x;\nloop invariant z <= y ==> y <= z;\nloop invariant z <= y ==> x <= 500;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= z;\nloop invariant y <= z;\nloop invariant z <= x;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant y <= x;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant z <= 500;\nloop invariant x <= z;\nloop invariant x <= y;\nloop invariant y <= x;\nloop invariant z <= y;\nloop invariant y <= z;\nloop invariant x <= 500;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant z >= y;\nloop invariant (x == 0) ==> (y == z);\nloop invariant (x > 0) ==> (y == z) ==> (y == z);\nloop invariant (x > 0) ==> (y != z) ==> (y <= z);\nloop invariant (x == 0) ==> (y != z) ==> (y <= z);\nloop invariant (x > 0) ==> (y != z) ==> (y == z) ==> (y == z);\nloop invariant (x > 0) ==> (y != z) ==> (y != z) ==> (y <= z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant 0 <= z <= 500;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant y >= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= y ==> y >= z;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant z >= y;\nloop invariant x + y >= z;\nloop invariant x >= (y + z);\nloop invariant 2 * x >= y + z;\nloop invariant 2 * x >= y + z;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 500;\nloop invariant z <= y;\nloop invariant z <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant y <= garbage value;\nloop invariant z <= garbage value;\nloop invariant x < 500 ==> 0 <= x < 500;\nloop invariant x >= 500 ==> x = 500;\nloop invariant z <= y ==> y = z;\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant y <= garbage value;\nloop invariant z <= garbage value;\nloop invariant x < 500 ==> 0 <= x < 500;\nloop invariant x >= 500 ==> x = 500;\nloop invariant z <= y ==> y = z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y <= z;\nloop invariant y <= 0;\nloop invariant y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant x >= 0;\nloop invariant x <= y;\nloop invariant x <= z;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant z <= 500;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y <= z;\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i1 ==> x >= 0;\nloop invariant i2 ==> x <= 500;\nloop invariant i3 ==> y >= 0;\nloop invariant i4 ==> z >= 0;\nloop invariant i5 ==> (x + 1) >= x;\nloop invariant i6 ==> (x + 1) <= (x + 1);\nloop invariant i7 ==> ((x + 1) - x) == 1;\nloop invariant i8 ==> (y + 1) >= y;\nloop invariant i9 ==> (y + 1) <= (y + 1);\nloop invariant i10 ==> ((y + 1) - y) == 1;\nloop invariant i11 ==> x >= 0;\nloop invariant i12 ==> x <= 500;\nloop invariant i13 ==> y >= 0;\nloop invariant i14 ==> z >= 0;\nloop invariant i15 ==> x >= 0;\nloop invariant i16 ==> x <= 500;\nloop invariant i17 ==> y >= 0;\nloop invariant i18 ==> z >= 0;\nloop invariant i19 ==> x >= 0;\nloop invariant i20 ==> x <= 500;\nloop invariant i21 ==> y >= 0;\nloop invariant i22 ==> z >= 0;\nloop invariant i23 ==> x >= 0;\nloop invariant i24 ==> x <= 500;\nloop invariant i25 ==> y >= 0;\nloop invariant i26 ==> z >= 0;\nloop invariant i27 ==> x >= 0;\nloop invariant i28 ==> x <= 500;\nloop invariant i29 ==> y >= 0;\nloop invariant i30 ==> z >= 0;\nloop invariant i31 ==> x >= 0;\nloop invariant i32 ==> x <= 500;\nloop invariant i33 ==> y >= 0;\nloop invariant i34 ==> z >= 0;\nloop invariant i35 ==> x >= 0;\nloop invariant i36 ==> x <= 500;\nloop invariant i37 ==> y >= 0;\nloop invariant i38 ==> z >= 0;\nloop invariant i39 ==> x >= 0;\nloop invariant i40 ==> x <= 500;\nloop invariant i41 ==> y >= 0;\nloop invariant i42 ==> z >= 0;\nloop invariant i43 ==> x >= 0;\nloop invariant i44 ==> x <= 500;\nloop invariant i45 ==> y >= 0;\nloop invariant i46 ==> z >= 0;\nloop invariant i47 ==> x >= 0;\nloop invariant i48 ==> x <= 500;\nloop invariant i49 ==> y >= 0;\nloop invariant i50 ==> z >= 0;\nloop invariant i51 ==> x >= 0;\nloop invariant i52 ==> x <= 500;\nloop invariant i53 ==> y >= 0;\nloop invariant i54 ==> z >= 0;\nloop invariant i55 ==> x >= 0;\nloop invariant i56 ==> x <= 500;\nloop invariant i57 ==> y >= 0;\nloop invariant i58 ==> z >= 0;\nloop invariant i59 ==> x >= 0;\nloop invariant i60 ==> x <= 500;\nloop invariant i61 ==> y >= 0;\nloop invariant i62 ==> z >= 0;\nloop invariant i63 ==> x >= 0;\nloop invariant i64 ==> x <= 500;\nloop invariant i65 ==> y >= 0;\nloop invariant i66 ==> z >= 0;\nloop invariant i67 ==> x >= 0;\nloop invariant i68 ==> x <= 500;\nloop invariant i69 ==> y >= 0;\nloop invariant i70 ==> z >= 0;\nloop invariant i71 ==> x >= 0;\nloop invariant i72 ==> x <= 500;\nloop invariant i73 ==> y >= 0;\nloop invariant i74 ==> z >= 0;\nloop invariant i75 ==> x >= 0;\nloop invariant i76 ==> x <= 500;\nloop invariant i77 ==> y >= 0;\nloop invariant i78 ==> z >= 0;\nloop invariant i79 ==> x >= 0;\nloop invariant i80 ==> x <= 500;\nloop invariant i81 ==> y >= 0;\nloop invariant i82 ==> z >= 0;\nloop invariant i83 ==> x >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= z;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z >= y;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant z >= y ==> y >= 0;\nloop invariant y >= 0 ==> z >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x <= 500;\nloop invariant x >= 0;\nloop invariant y <= z;\nloop invariant z >= 0;\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant x <= 500 ==> y <= 500;\nloop invariant x <= 500 ==> z <= 500;\nloop invariant x <= 500 ==> y >= 0;\nloop invariant x <= 500 ==> z >= 0;\nloop invariant x <= 500 ==> y <= x;\nloop invariant x <= 500 ==> z <= x;\nloop invariant z <= y ==> y <= z;\nloop invariant z <= y ==> x <= 500;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: x <= 500;\nloop invariant i2: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i15: z <= y ==> x <= 500;\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= z;\nloop invariant y <= z;\nloop invariant z <= x;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant y <= x;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant z <= 500;\nloop invariant x <= z;\nloop invariant x <= y;\nloop invariant y <= x;\nloop invariant z <= y;\nloop invariant y <= z;\nloop invariant x <= 500;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n\nloop invariant i8: x <= 500;\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant z >= y;\nloop invariant (x == 0) ==> (y == z);\nloop invariant (x > 0) ==> (y == z) ==> (y == z);\nloop invariant (x > 0) ==> (y != z) ==> (y <= z);\nloop invariant (x == 0) ==> (y != z) ==> (y <= z);\nloop invariant (x > 0) ==> (y != z) ==> (y == z) ==> (y == z);\nloop invariant (x > 0) ==> (y != z) ==> (y != z) ==> (y <= z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\nloop invariant i4: (x > 0) ==> (y == z) ==> (y == z);\nloop invariant i5: (x > 0) ==> (y != z) ==> (y <= z);\n\nloop invariant i7: (x > 0) ==> (y != z) ==> (y == z) ==> (y == z);\nloop invariant i8: (x > 0) ==> (y != z) ==> (y != z) ==> (y <= z);\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant 0 <= z <= 500;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant y >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= y ==> y >= z;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\nloop invariant i4: z <= y ==> y >= z;\nloop invariant i5: x >= 0;\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant z >= y;\nloop invariant x + y >= z;\nloop invariant x >= (y + z);\nloop invariant 2 * x >= y + z;\nloop invariant 2 * x >= y + z;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\nloop invariant x >= (y + z) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 500;\nloop invariant z <= y;\nloop invariant z <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant y <= garbage value;\nloop invariant z <= garbage value;\nloop invariant x < 500 ==> 0 <= x < 500;\nloop invariant x >= 500 ==> x = 500;\nloop invariant z <= y ==> y = z;\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant y <= garbage value;\nloop invariant z <= garbage value;\nloop invariant x < 500 ==> 0 <= x < 500;\nloop invariant x >= 500 ==> x = 500;\nloop invariant z <= y ==> y = z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\n\nloop invariant i5: x < 500 ==> 0 <= x < 500;\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y <= z;\nloop invariant y <= 0;\nloop invariant y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant x >= 0;\nloop invariant x <= y;\nloop invariant x <= z;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant z <= 500;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\nloop invariant i2: x >= 0;\n\n\nloop invariant i5: x <= 500;\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y <= z;\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 85,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i1 ==> x >= 0;\nloop invariant i2 ==> x <= 500;\nloop invariant i3 ==> y >= 0;\nloop invariant i4 ==> z >= 0;\nloop invariant i5 ==> (x + 1) >= x;\nloop invariant i6 ==> (x + 1) <= (x + 1);\nloop invariant i7 ==> ((x + 1) - x) == 1;\nloop invariant i8 ==> (y + 1) >= y;\nloop invariant i9 ==> (y + 1) <= (y + 1);\nloop invariant i10 ==> ((y + 1) - y) == 1;\nloop invariant i11 ==> x >= 0;\nloop invariant i12 ==> x <= 500;\nloop invariant i13 ==> y >= 0;\nloop invariant i14 ==> z >= 0;\nloop invariant i15 ==> x >= 0;\nloop invariant i16 ==> x <= 500;\nloop invariant i17 ==> y >= 0;\nloop invariant i18 ==> z >= 0;\nloop invariant i19 ==> x >= 0;\nloop invariant i20 ==> x <= 500;\nloop invariant i21 ==> y >= 0;\nloop invariant i22 ==> z >= 0;\nloop invariant i23 ==> x >= 0;\nloop invariant i24 ==> x <= 500;\nloop invariant i25 ==> y >= 0;\nloop invariant i26 ==> z >= 0;\nloop invariant i27 ==> x >= 0;\nloop invariant i28 ==> x <= 500;\nloop invariant i29 ==> y >= 0;\nloop invariant i30 ==> z >= 0;\nloop invariant i31 ==> x >= 0;\nloop invariant i32 ==> x <= 500;\nloop invariant i33 ==> y >= 0;\nloop invariant i34 ==> z >= 0;\nloop invariant i35 ==> x >= 0;\nloop invariant i36 ==> x <= 500;\nloop invariant i37 ==> y >= 0;\nloop invariant i38 ==> z >= 0;\nloop invariant i39 ==> x >= 0;\nloop invariant i40 ==> x <= 500;\nloop invariant i41 ==> y >= 0;\nloop invariant i42 ==> z >= 0;\nloop invariant i43 ==> x >= 0;\nloop invariant i44 ==> x <= 500;\nloop invariant i45 ==> y >= 0;\nloop invariant i46 ==> z >= 0;\nloop invariant i47 ==> x >= 0;\nloop invariant i48 ==> x <= 500;\nloop invariant i49 ==> y >= 0;\nloop invariant i50 ==> z >= 0;\nloop invariant i51 ==> x >= 0;\nloop invariant i52 ==> x <= 500;\nloop invariant i53 ==> y >= 0;\nloop invariant i54 ==> z >= 0;\nloop invariant i55 ==> x >= 0;\nloop invariant i56 ==> x <= 500;\nloop invariant i57 ==> y >= 0;\nloop invariant i58 ==> z >= 0;\nloop invariant i59 ==> x >= 0;\nloop invariant i60 ==> x <= 500;\nloop invariant i61 ==> y >= 0;\nloop invariant i62 ==> z >= 0;\nloop invariant i63 ==> x >= 0;\nloop invariant i64 ==> x <= 500;\nloop invariant i65 ==> y >= 0;\nloop invariant i66 ==> z >= 0;\nloop invariant i67 ==> x >= 0;\nloop invariant i68 ==> x <= 500;\nloop invariant i69 ==> y >= 0;\nloop invariant i70 ==> z >= 0;\nloop invariant i71 ==> x >= 0;\nloop invariant i72 ==> x <= 500;\nloop invariant i73 ==> y >= 0;\nloop invariant i74 ==> z >= 0;\nloop invariant i75 ==> x >= 0;\nloop invariant i76 ==> x <= 500;\nloop invariant i77 ==> y >= 0;\nloop invariant i78 ==> z >= 0;\nloop invariant i79 ==> x >= 0;\nloop invariant i80 ==> x <= 500;\nloop invariant i81 ==> y >= 0;\nloop invariant i82 ==> z >= 0;\nloop invariant i83 ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 58: unexpected token 'value'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\nloop invariant i2: y >= z;\nloop invariant i3: y >= 0;\nloop invariant i4: z >= 0;\nloop invariant i5: z >= y;\nloop invariant i6: z >= 0 ==> y >= 0;\nloop invariant i7: y >= 0 ==> z >= 0;\nloop invariant i8: z >= y ==> y >= 0;\nloop invariant i9: y >= 0 ==> z >= y;\nloop invariant i10: x <= 500;\nloop invariant i11: x >= 0;\nloop invariant i12: y <= z;\nloop invariant i13: y <= x;\nloop invariant i14: z <= x;\nloop invariant i15: x <= 500 ==> y <= 500;\nloop invariant i16: x <= 500 ==> z <= 500;\nloop invariant i17: x <= 500 ==> y >= 0;\nloop invariant i18: x <= 500 ==> z >= 0;\nloop invariant i19: x <= 500 ==> y <= x;\nloop invariant i20: x <= 500 ==> z <= x;\nloop invariant i21: z <= y ==> y <= z;\nloop invariant i22: z <= y ==> x <= 500;\nloop invariant i23: 0 <= z;\nloop invariant i24: y <= 500;\nloop invariant i25: z <= 500;\nloop invariant i26: x <= z;\nloop invariant i27: x <= y;\nloop invariant i28: z <= y;\nloop invariant i29: (x == 0) ==> (y == z);\nloop invariant i30: (x > 0) ==> (y == z) ==> (y == z);\nloop invariant i31: (x > 0) ==> (y != z) ==> (y <= z);\nloop invariant i32: (x == 0) ==> (y != z) ==> (y <= z);\nloop invariant i33: (x > 0) ==> (y != z) ==> (y == z) ==> (y == z);\nloop invariant i34: (x > 0) ==> (y != z) ==> (y != z) ==> (y <= z);\nloop invariant i35: 0 <= y <= z;\nloop invariant i36: 0 <= z <= 500;\nloop invariant i37: x >= y;\nloop invariant i38: z <= y ==> y >= z;\nloop invariant i39: x >= 1;\nloop invariant i40: x + y >= z;\nloop invariant i41: x >= (y + z);\nloop invariant i42: 2 * x >= y + z;\nloop invariant i43: x >= (y + z) / 2;\nloop invariant i44: 1 <= x <= 500;\nloop invariant i45: 0 <= x < 500;\nloop invariant i46: y <= garbage value;\nloop invariant i47: z <= garbage value;\nloop invariant i48: x < 500 ==> 0 <= x < 500;\nloop invariant i49: x >= 500 ==> x = 500;\nloop invariant i50: z <= y ==> y = z;\nloop invariant i51: y <= 0;\nloop invariant i52: i1;\nloop invariant i53: i2;\nloop invariant i54: i1 ==> x >= 0;\nloop invariant i55: i2 ==> x <= 500;\nloop invariant i56: i3 ==> y >= 0;\nloop invariant i57: i4 ==> z >= 0;\nloop invariant i58: i5 ==> (x + 1) >= x;\nloop invariant i59: i6 ==> (x + 1) <= (x + 1);\nloop invariant i60: i7 ==> ((x + 1) - x) == 1;\nloop invariant i61: i8 ==> (y + 1) >= y;\nloop invariant i62: i9 ==> (y + 1) <= (y + 1);\nloop invariant i63: i10 ==> ((y + 1) - y) == 1;\nloop invariant i64: i11 ==> x >= 0;\nloop invariant i65: i12 ==> x <= 500;\nloop invariant i66: i13 ==> y >= 0;\nloop invariant i67: i14 ==> z >= 0;\nloop invariant i68: i15 ==> x >= 0;\nloop invariant i69: i16 ==> x <= 500;\nloop invariant i70: i17 ==> y >= 0;\nloop invariant i71: i18 ==> z >= 0;\nloop invariant i72: i19 ==> x >= 0;\nloop invariant i73: i20 ==> x <= 500;\nloop invariant i74: i21 ==> y >= 0;\nloop invariant i75: i22 ==> z >= 0;\nloop invariant i76: i23 ==> x >= 0;\nloop invariant i77: i24 ==> x <= 500;\nloop invariant i78: i25 ==> y >= 0;\nloop invariant i79: i26 ==> z >= 0;\nloop invariant i80: i27 ==> x >= 0;\nloop invariant i81: i28 ==> x <= 500;\nloop invariant i82: i29 ==> y >= 0;\nloop invariant i83: i30 ==> z >= 0;\nloop invariant i84: i31 ==> x >= 0;\nloop invariant i85: i32 ==> x <= 500;\nloop invariant i86: i33 ==> y >= 0;\nloop invariant i87: i34 ==> z >= 0;\nloop invariant i88: i35 ==> x >= 0;\nloop invariant i89: i36 ==> x <= 500;\nloop invariant i90: i37 ==> y >= 0;\nloop invariant i91: i38 ==> z >= 0;\nloop invariant i92: i39 ==> x >= 0;\nloop invariant i93: i40 ==> x <= 500;\nloop invariant i94: i41 ==> y >= 0;\nloop invariant i95: i42 ==> z >= 0;\nloop invariant i96: i43 ==> x >= 0;\nloop invariant i97: i44 ==> x <= 500;\nloop invariant i98: i45 ==> y >= 0;\nloop invariant i99: i46 ==> z >= 0;\nloop invariant i100: i47 ==> x >= 0;\nloop invariant i101: i48 ==> x <= 500;\nloop invariant i102: i49 ==> y >= 0;\nloop invariant i103: i50 ==> z >= 0;\nloop invariant i104: i51 ==> x >= 0;\nloop invariant i105: i52 ==> x <= 500;\nloop invariant i106: i53 ==> y >= 0;\nloop invariant i107: i54 ==> z >= 0;\nloop invariant i108: i55 ==> x >= 0;\nloop invariant i109: i56 ==> x <= 500;\nloop invariant i110: i57 ==> y >= 0;\nloop invariant i111: i58 ==> z >= 0;\nloop invariant i112: i59 ==> x >= 0;\nloop invariant i113: i60 ==> x <= 500;\nloop invariant i114: i61 ==> y >= 0;\nloop invariant i115: i62 ==> z >= 0;\nloop invariant i116: i63 ==> x >= 0;\nloop invariant i117: i64 ==> x <= 500;\nloop invariant i118: i65 ==> y >= 0;\nloop invariant i119: i66 ==> z >= 0;\nloop invariant i120: i67 ==> x >= 0;\nloop invariant i121: i68 ==> x <= 500;\nloop invariant i122: i69 ==> y >= 0;\nloop invariant i123: i70 ==> z >= 0;\nloop invariant i124: i71 ==> x >= 0;\nloop invariant i125: i72 ==> x <= 500;\nloop invariant i126: i73 ==> y >= 0;\nloop invariant i127: i74 ==> z >= 0;\nloop invariant i128: i75 ==> x >= 0;\nloop invariant i129: i76 ==> x <= 500;\nloop invariant i130: i77 ==> y >= 0;\nloop invariant i131: i78 ==> z >= 0;\nloop invariant i132: i79 ==> x >= 0;\nloop invariant i133: i80 ==> x <= 500;\nloop invariant i134: i81 ==> y >= 0;\nloop invariant i135: i82 ==> z >= 0;\nloop invariant i136: i83 ==> x >= 0;\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "combined_annotation_num_solver_calls": 97,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n\n\n\nloop invariant i10: x <= 500;\nloop invariant i11: x >= 0;\n\n\n\n\n\n\n\n\n\n\nloop invariant i22: z <= y ==> x <= 500;\n\n\n\n\n\n\n\nloop invariant i30: (x > 0) ==> (y == z) ==> (y == z);\nloop invariant i31: (x > 0) ==> (y != z) ==> (y <= z);\n\nloop invariant i33: (x > 0) ==> (y != z) ==> (y == z) ==> (y == z);\nloop invariant i34: (x > 0) ==> (y != z) ==> (y != z) ==> (y <= z);\n\n\n\nloop invariant i38: z <= y ==> y >= z;\n\n\n\n\n\n\n\n\n\nloop invariant i48: x < 500 ==> 0 <= x < 500;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 31,
        "success_count": 24,
        "failure_count": 7,
        "success_rate": 0.7741935483870968
    }
}