{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/74.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant c == 36;\nloop invariant z >= 36 * y;\nloop invariant z >= 36 * y + 36;\nloop invariant z >= 36 * y + 36 * c;\nloop invariant z >= (36 * y) + (36 * c);\nloop invariant z >= (36 * y) + (36 * (c + 1));\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z;\nloop invariant z <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant z + c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * (y + 1);\nloop invariant z > 36 * y;\nloop invariant c >= 0;\nloop invariant c < 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 36;\nloop invariant 0 <= x2 <= 36;\nloop invariant 0 <= x3 <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4161;\nloop invariant z == (36 * y);\nloop invariant (x1 + x2 + x3) == c;\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4320;\nloop invariant 36*c + 36*y >= z;\nloop invariant z >= 0;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 16777215;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y + (35 * 36) / 2);\nloop invariant c == 36 ==> (z >= 0);\nloop invariant c == 36 ==> (z <= 16777215);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant c <= z <= (36 * y);\nloop invariant c == (c - 1) + 1;\nloop invariant c == (c + 1) - 1;\nloop invariant z == (z - 1) + 1;\nloop invariant z == (z + 1) - 1;\nloop invariant c <= 36 ==> (z >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant c < 36 ==> z >= 0;\nloop invariant y >= 127 ==> z >= 0;\nloop invariant c < 36 ==> z <= y;\nloop invariant c < 36 ==> c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant y >= 127;\nloop invariant y >= 0;\nloop invariant z >= (36 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4680;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant c * (36 - c) / 2 <= z <= c * (36 - c + 1) / 2;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z + 36 * c <= z + 36 * 36;\nloop invariant z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant z >= 36 * y ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c >= 36 ==> (z >= 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant c == 36;\nloop invariant z >= 36 * y;\nloop invariant z >= 36 * y + 36;\nloop invariant z >= 36 * y + 36 * c;\nloop invariant z >= (36 * y) + (36 * c);\nloop invariant z >= (36 * y) + (36 * (c + 1));\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\nloop invariant z >= (36 * y) + (36 * c) + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y;\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= z;\nloop invariant z <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant z + c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant c <= 36 * y + 36;\nloop invariant z + c <= 36 * y + 36;\nloop invariant c <= 36;\nloop invariant z + c >= 0;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant z + c <= 36 * y + 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= z;\n\nloop invariant i3: c <= 36;\n\nloop invariant i5: z + c >= 0;\nloop invariant i6: c <= 36 * y + 36;\nloop invariant i7: z >= 0;\nloop invariant i8: c >= 0;\nloop invariant i9: y >= 0;\nloop invariant i10: y >= 127;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * (y + 1);\nloop invariant z > 36 * y;\nloop invariant c >= 0;\nloop invariant c < 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y;\n\n\nloop invariant i5: c >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 36;\nloop invariant 0 <= x2 <= 36;\nloop invariant 0 <= x3 <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4161;\nloop invariant z == (36 * y);\nloop invariant (x1 + x2 + x3) == c;\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i14: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i15: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i16: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant i17: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant i18: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant i19: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant i20: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i21: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4320;\nloop invariant 36*c + 36*y >= z;\nloop invariant z >= 0;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: 36*c + 36*y >= z;\nloop invariant i4: z >= 0;\nloop invariant i5: c >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 16777215;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y + (35 * 36) / 2);\nloop invariant c == 36 ==> (z >= 0);\nloop invariant c == 36 ==> (z <= 16777215);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c >= 0;\nloop invariant i3: c <= 36;\nloop invariant i4: z >= (36 * y);\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant c <= z <= (36 * y);\nloop invariant c == (c - 1) + 1;\nloop invariant c == (c + 1) - 1;\nloop invariant z == (z - 1) + 1;\nloop invariant z == (z + 1) - 1;\nloop invariant c <= 36 ==> (z >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c == (c - 1) + 1;\nloop invariant i4: c == (c + 1) - 1;\nloop invariant i5: z == (z - 1) + 1;\nloop invariant i6: z == (z + 1) - 1;\nloop invariant i7: c <= 36 ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * y);\nloop invariant z >= (36 * y) - c;\nloop invariant z <= (36 * y) + c;\nloop invariant c <= z - (36 * y);\nloop invariant c >= z - (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: z >= (36 * y) - c;\nloop invariant i4: z <= (36 * y) + c;\nloop invariant i5: c <= z - (36 * y);\nloop invariant i6: c >= z - (36 * y);\nloop invariant i7: c >= 0;\nloop invariant i8: c <= 36;\nloop invariant i9: y >= 0;\nloop invariant i10: y >= 127;\nloop invariant i11: z >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c < 36 ==> z >= 0;\nloop invariant y >= 127 ==> z >= 0;\nloop invariant c < 36 ==> z <= y;\nloop invariant c < 36 ==> c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c < 36 ==> z >= 0;\nloop invariant i2: y >= 127 ==> z >= 0;\n\nloop invariant i4: c < 36 ==> c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c <= 36;\nloop invariant i2: c >= 0;\nloop invariant i3: z >= 36 * y;\nloop invariant i4: z <= (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z >= 0;\nloop invariant c >= 0;\nloop invariant y >= 127;\nloop invariant y >= 0;\nloop invariant z >= (36 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= 36 * y;\nloop invariant i3: z >= 0;\nloop invariant i4: c >= 0;\nloop invariant i5: y >= 127;\nloop invariant i6: y >= 0;\nloop invariant i7: z >= (36 * y);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4680;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant c * (36 - c) / 2 <= z <= c * (36 - c + 1) / 2;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z <= 36 * y + c * (36 - c) / 2;\nloop invariant c <= y;\nloop invariant z <= 36 * y;\nloop invariant z <= 36 * y + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= 0;\n\n\n\n\nloop invariant i7: z <= 36 * y + c;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z + 36 * c <= z + 36 * 36;\nloop invariant z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant z >= 36 * y ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c <= 36;\nloop invariant i3: z >= 36 * y;\nloop invariant i4: z + 36 * c <= z + 36 * 36;\nloop invariant i5: z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i6: z >= 36 * y ==> c <= 36;\nloop invariant i7: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i8: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36;\nloop invariant i9: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i10: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i11: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i12: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i13: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i14: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i15: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i16: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i17: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i18: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i19: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c >= 36 ==> (z >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant c == 36 is preserved but not established.\nloop invariant z >= 36 * y is partially proven to be inductive.\nloop invariant z >= 36 * y + 36 is partially proven to be inductive.\nloop invariant z >= 36 * y + 36 * c is partially proven to be inductive.\nloop invariant z >= (36 * y) + (36 * c) is partially proven to be inductive.\nloop invariant z >= (36 * y) + (36 * (c + 1)) is partially proven to be inductive.\nloop invariant z >= (36 * y) + (36 * c) + 1 is partially proven to be inductive.\nloop invariant 0 <= z is partially proven to be inductive.\nloop invariant z <= 36 * y + 36 is partially proven to be inductive.\nloop invariant c <= 36 is partially proven to be inductive.\nloop invariant z + c <= 36 * y + 36 is partially proven to be inductive.\nloop invariant z + c >= 0 is partially proven to be inductive.\nloop invariant c <= 36 * y + 36 is partially proven to be inductive.\nloop invariant z >= 0 is partially proven to be inductive.\nloop invariant c >= 0 is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant y >= 127 is partially proven to be inductive.\nloop invariant 0 <= c <= 35 is partially proven to be inductive.\nloop invariant z <= 36 * (y + 1) is partially proven to be inductive.\nloop invariant z > 36 * y is partially proven to be inductive.\nloop invariant c < 36 is partially proven to be inductive.\nloop invariant 0 <= x1 <= 36 is partially proven to be inductive.\nloop invariant 0 <= x2 <= 36 is partially proven to be inductive.\nloop invariant 0 <= x3 <= 36 is partially proven to be inductive.\nloop invariant 0 <= y <= 127 is partially proven to be inductive.\nloop invariant 0 <= z <= 4161 is partially proven to be inductive.\nloop invariant z == (36 * y) is partially proven to be inductive.\nloop invariant (x1 + x2 + x3) == c is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (c == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (z == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) is partially proven to be inductive.\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) is partially proven to be inductive.\nloop invariant 0 <= c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z <= 4320 is partially proven to be inductive.\nloop invariant 36*c + 36*y >= z is partially proven to be inductive.\nloop invariant 0 <= z <= 16777215 is partially proven to be inductive.\nloop invariant z >= (36 * y) is partially proven to be inductive.\nloop invariant z <= (36 * y + (35 * 36) / 2) is partially proven to be inductive.\nloop invariant c == 36 ==> (z >= 0) is partially proven to be inductive.\nloop invariant c == 36 ==> (z <= 16777215) is partially proven to be inductive.\nloop invariant c <= z <= (36 * y) is partially proven to be inductive.\nloop invariant c == (c - 1) + 1 is partially proven to be inductive.\nloop invariant c == (c + 1) - 1 is partially proven to be inductive.\nloop invariant z == (z - 1) + 1 is partially proven to be inductive.\nloop invariant z == (z + 1) - 1 is partially proven to be inductive.\nloop invariant c <= 36 ==> (z >= 0) is partially proven to be inductive.\nloop invariant 1 <= c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z <= (36 * y) is partially proven to be inductive.\nloop invariant z >= (36 * y) - c is partially proven to be inductive.\nloop invariant z <= (36 * y) + c is partially proven to be inductive.\nloop invariant c <= z - (36 * y) is partially proven to be inductive.\nloop invariant c >= z - (36 * y) is partially proven to be inductive.\nloop invariant z <= (36 * y) is partially proven to be inductive.\nloop invariant c < 36 ==> z >= 0 is partially proven to be inductive.\nloop invariant y >= 127 ==> z >= 0 is partially proven to be inductive.\nloop invariant c < 36 ==> z <= y is partially proven to be inductive.\nloop invariant c < 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant z <= 4680 is partially proven to be inductive.\nloop invariant c <= y is partially proven to be inductive.\nloop invariant z <= 36 * y is partially proven to be inductive.\nloop invariant c * (36 - c) / 2 <= z <= c * (36 - c + 1) / 2 is partially proven to be inductive.\nloop invariant z <= 36 * y + c is partially proven to be inductive.\nloop invariant z <= 36 * y + c * (36 - c) / 2 is partially proven to be inductive.\nloop invariant z + 36 * c <= z + 36 * 36 is partially proven to be inductive.\nloop invariant z + 36 * c <= z + 36 * 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant z >= 36 * y ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 is partially proven to be inductive.\nloop invariant c >= 36 ==> (z >= 0) is partially proven to be inductive.\nAssertion z >= 0: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c == 36;\nloop invariant i2: z >= 36 * y;\nloop invariant i3: z >= 36 * y + 36;\nloop invariant i4: z >= 36 * y + 36 * c;\nloop invariant i5: z >= (36 * y) + (36 * c);\nloop invariant i6: z >= (36 * y) + (36 * (c + 1));\nloop invariant i7: z >= (36 * y) + (36 * c) + 1;\nloop invariant i8: 0 <= z;\nloop invariant i9: z <= 36 * y + 36;\nloop invariant i10: c <= 36;\nloop invariant i11: z + c <= 36 * y + 36;\nloop invariant i12: z + c >= 0;\nloop invariant i13: c <= 36 * y + 36;\nloop invariant i14: z >= 0;\nloop invariant i15: c >= 0;\nloop invariant i16: y >= 0;\nloop invariant i17: y >= 127;\nloop invariant i18: 0 <= c <= 35;\nloop invariant i19: z <= 36 * (y + 1);\nloop invariant i20: z > 36 * y;\nloop invariant i21: c < 36;\nloop invariant i22: 0 <= x1 <= 36;\nloop invariant i23: 0 <= x2 <= 36;\nloop invariant i24: 0 <= x3 <= 36;\nloop invariant i25: 0 <= y <= 127;\nloop invariant i26: 0 <= z <= 4161;\nloop invariant i27: z == (36 * y);\nloop invariant i28: (x1 + x2 + x3) == c;\nloop invariant i29: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant i30: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant i31: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (c == 0);\nloop invariant i32: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (z == 0);\nloop invariant i33: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant i34: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant i35: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i36: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i37: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant i38: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant i39: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant i40: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant i41: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i42: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i43: 0 <= c <= 36;\nloop invariant i44: 0 <= z <= 4320;\nloop invariant i45: 36*c + 36*y >= z;\nloop invariant i46: 0 <= z <= 16777215;\nloop invariant i47: z >= (36 * y);\nloop invariant i48: z <= (36 * y + (35 * 36) / 2);\nloop invariant i49: c == 36 ==> (z >= 0);\nloop invariant i50: c == 36 ==> (z <= 16777215);\nloop invariant i51: c <= z <= (36 * y);\nloop invariant i52: c == (c - 1) + 1;\nloop invariant i53: c == (c + 1) - 1;\nloop invariant i54: z == (z - 1) + 1;\nloop invariant i55: z == (z + 1) - 1;\nloop invariant i56: c <= 36 ==> (z >= 0);\nloop invariant i57: 1 <= c <= 36;\nloop invariant i58: 0 <= z <= (36 * y);\nloop invariant i59: z >= (36 * y) - c;\nloop invariant i60: z <= (36 * y) + c;\nloop invariant i61: c <= z - (36 * y);\nloop invariant i62: c >= z - (36 * y);\nloop invariant i63: z <= (36 * y);\nloop invariant i64: c < 36 ==> z >= 0;\nloop invariant i65: y >= 127 ==> z >= 0;\nloop invariant i66: c < 36 ==> z <= y;\nloop invariant i67: c < 36 ==> c <= 36;\nloop invariant i68: z <= 4680;\nloop invariant i69: c <= y;\nloop invariant i70: z <= 36 * y;\nloop invariant i71: c * (36 - c) / 2 <= z <= c * (36 - c + 1) / 2;\nloop invariant i72: z <= 36 * y + c;\nloop invariant i73: z <= 36 * y + c * (36 - c) / 2;\nloop invariant i74: z + 36 * c <= z + 36 * 36;\nloop invariant i75: z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i76: z >= 36 * y ==> c <= 36;\nloop invariant i77: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i78: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36;\nloop invariant i79: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i80: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i81: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i82: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i83: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i84: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i85: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i86: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i87: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i88: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i89: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i90: c >= 36 ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 23,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y;\n\n\n\n\n\nloop invariant i8: 0 <= z;\nloop invariant i9: z <= 36 * y + 36;\nloop invariant i10: c <= 36;\n\nloop invariant i12: z + c >= 0;\nloop invariant i13: c <= 36 * y + 36;\nloop invariant i14: z >= 0;\nloop invariant i15: c >= 0;\nloop invariant i16: y >= 0;\nloop invariant i17: y >= 127;\n\nloop invariant i19: z <= 36 * (y + 1);\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i33: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant i34: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant i35: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i36: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i37: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant i38: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0);\nloop invariant i39: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0);\nloop invariant i40: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0);\nloop invariant i41: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0);\nloop invariant i42: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0) ==> (x3 == 0) ==> (y == 0) ==> (c == 0) ==> (z == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i43: 0 <= c <= 36;\n\nloop invariant i45: 36*c + 36*y >= z;\n\nloop invariant i47: z >= (36 * y);\nloop invariant i48: z <= (36 * y + (35 * 36) / 2);\nloop invariant i49: c == 36 ==> (z >= 0);\n\n\nloop invariant i52: c == (c - 1) + 1;\nloop invariant i53: c == (c + 1) - 1;\nloop invariant i54: z == (z - 1) + 1;\nloop invariant i55: z == (z + 1) - 1;\nloop invariant i56: c <= 36 ==> (z >= 0);\n\n\nloop invariant i59: z >= (36 * y) - c;\nloop invariant i60: z <= (36 * y) + c;\nloop invariant i61: c <= z - (36 * y);\nloop invariant i62: c >= z - (36 * y);\n\nloop invariant i64: c < 36 ==> z >= 0;\nloop invariant i65: y >= 127 ==> z >= 0;\n\nloop invariant i67: c < 36 ==> c <= 36;\n\nloop invariant i69: c <= y;\n\n\nloop invariant i72: z <= 36 * y + c;\n\nloop invariant i74: z + 36 * c <= z + 36 * 36;\nloop invariant i75: z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i76: z >= 36 * y ==> c <= 36;\nloop invariant i77: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36;\nloop invariant i78: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36;\nloop invariant i79: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i80: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i81: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i82: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i83: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i84: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i85: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i86: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i87: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i88: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i89: 0 <= z + 36 * c <= z + 36 * 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36 ==> c <= 36;\nloop invariant i90: c >= 36 ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 62,
        "success_count": 51,
        "failure_count": 11,
        "success_rate": 0.8225806451612904
    }
}