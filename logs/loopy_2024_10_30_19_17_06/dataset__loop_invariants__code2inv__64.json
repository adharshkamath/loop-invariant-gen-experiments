{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/64.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y == 10 - x;\nloop invariant 0 <= y <= 9;\nloop invariant x + y == 10;\nloop invariant x <= 10;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant y = 10 - x;\nloop invariant x <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant 0 <= y <= 9;\nloop invariant x + y = 10;\nloop invariant x <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 0 <= y <= 10;\nloop invariant y == (10 - x);\nloop invariant (x == 11) ==> (y == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x + y = 10;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant x + y < 10 * 10;\nloop invariant y < 10;\nloop invariant x + y = 10;\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 11;\nloop invariant y >= 1;\nloop invariant y <= 9;\nloop invariant x <= y ==> x >= 11;\nloop invariant x <= y ==> y <= 9;\nloop invariant x > y ==> x >= 1;\nloop invariant x > y ==> y >= 1;\nloop invariant x > y ==> x <= 10;\nloop invariant x > y ==> y <= 10;\nloop invariant x > y ==> x <= y;\nloop invariant x > y ==> y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 11;\nloop invariant 9 <= y <= 10;\nloop invariant y = 10 - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x < 11;\nloop invariant x - y = 10;\nloop invariant x <= y + 10;\nloop invariant x >= y + 1;\nloop invariant y <= x + 9;\nloop invariant y >= x - 1;\nloop invariant x * y = 45;\nloop invariant x * x + y * y = 100;\nloop invariant x * y + x + y = 29;\nloop invariant x * y + x - y = 19;\nloop invariant x * y - x + y = 19;\nloop invariant x * y - x - y = -19;\nloop invariant x * y + x * x + y * y = 100;\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x < 11;\nloop invariant x - y = 10;\nloop invariant x <= y + 10;\nloop invariant x >= y + 1;\nloop invariant y <= x + 9;\nloop invariant y >= x - 1;\nloop invariant x * y = 45;\nloop invariant x * x + y * y = 100;\nloop invariant x * y + x + y = 29;\nloop invariant x * y + x - y = 19;\nloop invariant x * y - x + y = 19;\nloop invariant x * y - x - y = -19;\nloop invariant x * y + x * x + y * y = 100;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y <= 1;\nloop invariant x + y == 10;\nloop invariant x + y == 10 ==> x <= y;\nloop invariant 1 <= x <= 10;\nloop invariant x + y == 10;\nloop invariant x + y == 10 ==> x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 10 - x;\nloop invariant y + x - 1 <= 10;\nloop invariant y >= 1;\nloop invariant y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 10;\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 10 - x;\nloop invariant y + x - 1 <= 10;\nloop invariant y >= 1;\nloop invariant y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 11;\nloop invariant y = 10 - x;\nloop invariant 0 <= y < 10;\nloop invariant x <= 10;\nloop invariant x <= y;\nloop invariant y < 10;\nloop invariant 0 <= x <= 11;\nloop invariant y = 10 - x;\nloop invariant 0 <= y < 10;\nloop invariant x <= 10;\nloop invariant x <= y;\nloop invariant y < 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 9;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 9;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y == 10 - x;\nloop invariant 0 <= y <= 9;\nloop invariant x + y == 10;\nloop invariant x <= 10;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant y = 10 - x;\nloop invariant x <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: x > 0;\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant 0 <= y <= 9;\nloop invariant x + y = 10;\nloop invariant x <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 0 <= y <= 10;\nloop invariant y == (10 - x);\nloop invariant (x == 11) ==> (y == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\nloop invariant i4: (x == 11) ==> (y == 0);\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x + y = 10;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant x + y < 10 * 10;\nloop invariant y < 10;\nloop invariant x + y = 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\nloop invariant i4: x > 0;\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 11;\nloop invariant y >= 1;\nloop invariant y <= 9;\nloop invariant x <= y ==> x >= 11;\nloop invariant x <= y ==> y <= 9;\nloop invariant x > y ==> x >= 1;\nloop invariant x > y ==> y >= 1;\nloop invariant x > y ==> x <= 10;\nloop invariant x > y ==> y <= 10;\nloop invariant x > y ==> x <= y;\nloop invariant x > y ==> y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: x >= 1;\nloop invariant i2: x <= 11;\n\n\n\n\nloop invariant i7: x > y ==> x >= 1;\n\n\nloop invariant i10: x > y ==> y <= 10;\n\nloop invariant i12: x > y ==> y <= x;\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 11;\nloop invariant 9 <= y <= 10;\nloop invariant y = 10 - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 1 <= x <= 11;\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x < 11;\nloop invariant x - y = 10;\nloop invariant x <= y + 10;\nloop invariant x >= y + 1;\nloop invariant y <= x + 9;\nloop invariant y >= x - 1;\nloop invariant x * y = 45;\nloop invariant x * x + y * y = 100;\nloop invariant x * y + x + y = 29;\nloop invariant x * y + x - y = 19;\nloop invariant x * y - x + y = 19;\nloop invariant x * y - x - y = -19;\nloop invariant x * y + x * x + y * y = 100;\nloop invariant 0 <= x <= 10;\nloop invariant y = 10 - x;\nloop invariant x < 11;\nloop invariant x - y = 10;\nloop invariant x <= y + 10;\nloop invariant x >= y + 1;\nloop invariant y <= x + 9;\nloop invariant y >= x - 1;\nloop invariant x * y = 45;\nloop invariant x * x + y * y = 100;\nloop invariant x * y + x + y = 29;\nloop invariant x * y + x - y = 19;\nloop invariant x * y - x + y = 19;\nloop invariant x * y - x - y = -19;\nloop invariant x * y + x * x + y * y = 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y <= 1;\nloop invariant x + y == 10;\nloop invariant x + y == 10 ==> x <= y;\nloop invariant 1 <= x <= 10;\nloop invariant x + y == 10;\nloop invariant x + y == 10 ==> x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\nloop invariant i4: x + y == 10 ==> x <= y;\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 10 - x;\nloop invariant y + x - 1 <= 10;\nloop invariant y >= 1;\nloop invariant y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 10;\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 10 - x;\nloop invariant y + x - 1 <= 10;\nloop invariant y >= 1;\nloop invariant y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\nloop invariant i6: x >= 1;\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 11;\nloop invariant y = 10 - x;\nloop invariant 0 <= y < 10;\nloop invariant x <= 10;\nloop invariant x <= y;\nloop invariant y < 10;\nloop invariant 0 <= x <= 11;\nloop invariant y = 10 - x;\nloop invariant 0 <= y < 10;\nloop invariant x <= 10;\nloop invariant x <= y;\nloop invariant y < 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 0 <= x <= 11;\n\n\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 9;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 10;\nloop invariant 1 <= y <= 9;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 20: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 0 <= x <= 10;\nloop invariant i2: y == 10 - x;\nloop invariant i3: 0 <= y <= 9;\nloop invariant i4: x + y == 10;\nloop invariant i5: x <= 10;\nloop invariant i6: y >= 0;\nloop invariant i7: x > 0;\nloop invariant i8: y > 0;\nloop invariant i9: y = 10 - x;\nloop invariant i10: 1 <= x <= 10;\nloop invariant i11: x + y = 10;\nloop invariant i12: 0 <= y <= 10;\nloop invariant i13: y == (10 - x);\nloop invariant i14: (x == 11) ==> (y == 0);\nloop invariant i15: x + y < 10 * 10;\nloop invariant i16: y < 10;\nloop invariant i17: x >= 1;\nloop invariant i18: x <= 11;\nloop invariant i19: y >= 1;\nloop invariant i20: y <= 9;\nloop invariant i21: x <= y ==> x >= 11;\nloop invariant i22: x <= y ==> y <= 9;\nloop invariant i23: x > y ==> x >= 1;\nloop invariant i24: x > y ==> y >= 1;\nloop invariant i25: x > y ==> x <= 10;\nloop invariant i26: x > y ==> y <= 10;\nloop invariant i27: x > y ==> x <= y;\nloop invariant i28: x > y ==> y <= x;\nloop invariant i29: 1 <= x <= 11;\nloop invariant i30: 9 <= y <= 10;\nloop invariant i31: x < 11;\nloop invariant i32: x - y = 10;\nloop invariant i33: x <= y + 10;\nloop invariant i34: x >= y + 1;\nloop invariant i35: y <= x + 9;\nloop invariant i36: y >= x - 1;\nloop invariant i37: x * y = 45;\nloop invariant i38: x * x + y * y = 100;\nloop invariant i39: x * y + x + y = 29;\nloop invariant i40: x * y + x - y = 19;\nloop invariant i41: x * y - x + y = 19;\nloop invariant i42: x * y - x - y = -19;\nloop invariant i43: x * y + x * x + y * y = 100;\nloop invariant i44: i1;\nloop invariant i45: i2;\nloop invariant i46: i3;\nloop invariant i47: i4;\nloop invariant i48: i5;\nloop invariant i49: i6;\nloop invariant i50: i7;\nloop invariant i51: i8;\nloop invariant i52: i9;\nloop invariant i53: i10;\nloop invariant i54: i11;\nloop invariant i55: i12;\nloop invariant i56: i13;\nloop invariant i57: i14;\nloop invariant i58: i15;\nloop invariant i59: i16;\nloop invariant i60: i17;\nloop invariant i61: i18;\nloop invariant i62: i19;\nloop invariant i63: i20;\nloop invariant i64: i21;\nloop invariant i65: i22;\nloop invariant i66: i23;\nloop invariant i67: i24;\nloop invariant i68: i25;\nloop invariant i69: i26;\nloop invariant i70: i27;\nloop invariant i71: i28;\nloop invariant i72: i29;\nloop invariant i73: i30;\nloop invariant i74: i31;\nloop invariant i75: i32;\nloop invariant i76: i33;\nloop invariant i77: i34;\nloop invariant i78: i35;\nloop invariant i79: i36;\nloop invariant i80: i37;\nloop invariant i81: i38;\nloop invariant i82: i39;\nloop invariant i83: i40;\nloop invariant i84: i41;\nloop invariant i85: i42;\nloop invariant i86: i43;\nloop invariant i87: i44;\nloop invariant i88: i45;\nloop invariant i89: i46;\nloop invariant i90: i47;\nloop invariant i91: i48;\nloop invariant i92: i49;\nloop invariant i93: i50;\nloop invariant i94: i51;\nloop invariant i95: i52;\nloop invariant i96: i53;\nloop invariant i97: i54;\nloop invariant i98: i55;\nloop invariant i99: i56;\nloop invariant i100: i57;\nloop invariant i101: i58;\nloop invariant i102: i59;\nloop invariant i103: i60;\nloop invariant i104: i61;\nloop invariant i105: i62;\nloop invariant i106: i63;\nloop invariant i107: i64;\nloop invariant i108: i65;\nloop invariant i109: i66;\nloop invariant i110: i67;\nloop invariant i111: i68;\nloop invariant i112: i69;\nloop invariant i113: i70;\nloop invariant i114: i71;\nloop invariant i115: i72;\nloop invariant i116: i73;\nloop invariant i117: i74;\nloop invariant i118: i75;\nloop invariant i119: i76;\nloop invariant i120: i77;\nloop invariant i121: i78;\nloop invariant i122: i79;\nloop invariant i123: i80;\nloop invariant i124: i81;\nloop invariant i125: i82;\nloop invariant i126: i83;\nloop invariant i127: i84;\nloop invariant i128: i85;\nloop invariant i129: i86;\nloop invariant i130: i87;\nloop invariant i131: i88;\nloop invariant i132: i89;\nloop invariant i133: i90;\nloop invariant i134: i91;\nloop invariant i135: i92;\nloop invariant i136: i93;\nloop invariant i137: i94;\nloop invariant i138: i95;\nloop invariant i139: i96;\nloop invariant i140: i97;\nloop invariant i141: i98;\nloop invariant i142: i99;\nloop invariant i143: i100;\nloop invariant i144: i101;\nloop invariant i145: i102;\nloop invariant i146: i103;\nloop invariant i147: i104;\nloop invariant i148: i105;\nloop invariant i149: i106;\nloop invariant i150: i107;\nloop invariant i151: i108;\nloop invariant i152: i109;\nloop invariant i153: i110;\nloop invariant i154: i111;\nloop invariant i155: i112;\nloop invariant i156: i113;\nloop invariant i157: i114;\nloop invariant i158: i115;\nloop invariant i159: i116;\nloop invariant i160: i117;\nloop invariant i161: i118;\nloop invariant i162: i119;\nloop invariant i163: i120;\nloop invariant i164: i121;\nloop invariant i165: i122;\nloop invariant i166: i123;\nloop invariant i167: i124;\nloop invariant i168: i125;\nloop invariant i169: i126;\nloop invariant i170: i127;\nloop invariant i171: i128;\nloop invariant i172: i129;\nloop invariant i173: i130;\nloop invariant i174: i131;\nloop invariant i175: i132;\nloop invariant i176: i133;\nloop invariant i177: i134;\nloop invariant i178: i135;\nloop invariant i179: i136;\nloop invariant i180: i137;\nloop invariant i181: i138;\nloop invariant i182: i139;\nloop invariant i183: i140;\nloop invariant i184: i141;\nloop invariant i185: i142;\nloop invariant i186: i143;\nloop invariant i187: i144;\nloop invariant i188: i145;\nloop invariant i189: i146;\nloop invariant i190: i147;\nloop invariant i191: i148;\nloop invariant i192: i149;\nloop invariant i193: i150;\nloop invariant i194: i151;\nloop invariant i195: i152;\nloop invariant i196: i153;\nloop invariant i197: i154;\nloop invariant i198: i155;\nloop invariant i199: i156;\nloop invariant i200: i157;\nloop invariant i201: i158;\nloop invariant i202: y <= 1;\nloop invariant i203: x + y == 10 ==> x <= y;\nloop invariant i204: 1 <= y <= 10 - x;\nloop invariant i205: y + x - 1 <= 10;\nloop invariant i206: y <= 10;\nloop invariant i207: 0 <= x <= 11;\nloop invariant i208: 0 <= y < 10;\nloop invariant i209: x <= y;\nloop invariant i210: 1 <= y <= 9;\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
        "combined_annotation_num_solver_calls": 180,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\nloop invariant i7: x > 0;\n\n\n\n\n\n\nloop invariant i14: (x == 11) ==> (y == 0);\n\n\nloop invariant i17: x >= 1;\nloop invariant i18: x <= 11;\n\n\n\n\nloop invariant i23: x > y ==> x >= 1;\n\n\nloop invariant i26: x > y ==> y <= 10;\n\nloop invariant i28: x > y ==> y <= x;\nloop invariant i29: 1 <= x <= 11;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i203: x + y == 10 ==> x <= y;\n\n\n\nloop invariant i207: 0 <= x <= 11;\n\n\n\n*/\nwhile (x <= 10) {\n        y = 10 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y < 10);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c"
        ],
        "skipped": [],
        "total": 56,
        "success_count": 47,
        "failure_count": 9,
        "success_rate": 0.8392857142857143
    }
}