{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/128.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  while ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 2;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= 2^31 - 1;\nloop invariant x >= 1;\nloop invariant x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\nloop invariant y == x;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;loop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < y;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant x < y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x; loop invariant x <= y; loop invariant y <= x + x; loop invariant x < y ==> x <= x + x; loop invariant x >= 1 ==> x >= 1; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant 0 <= y <= x;\nloop invariant x == 2^y;\nloop invariant x == y * y;\n*/\n```",
            "```\n/*@\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y <= 2 * x;\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 2^(y-1) * (x - 1);\nloop invariant y >= 0;\nloop invariant y <= x - 1;\nloop invariant y < x - 1 ==> x = 2 * x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x + 1 <= y;\nloop invariant x >= 1;\nloop invariant y <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant x <= y;\nloop invariant y >= 2;\nloop invariant x <= y;\nloop invariant y >= 2;\nloop invariant x <= y;\nloop invariant y >= 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x >= y / 2;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 2;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\nloop invariant x < y;\nloop invariant x < 2^31 - 1;\nloop invariant y < 2^31 - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 1 <= x;\n\n\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= 2^31 - 1;\nloop invariant x >= 1;\nloop invariant x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\nloop invariant y == x;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\nloop invariant y <= 2^31 - 1;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x <= 2^31 - 1;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: x >= 1;\nloop invariant i4: x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\n\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;loop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x < y;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant x < y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\nloop invariant x >= 1;\nloop invariant x < 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\nloop invariant i2: x > 0;\n\n\nloop invariant i5: x >= 1;\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x; loop invariant x <= y; loop invariant y <= x + x; loop invariant x < y ==> x <= x + x; loop invariant x >= 1 ==> x >= 1; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x; loop invariant x <= y; loop invariant y <= x + x; loop invariant x < y ==> x <= x + x; loop invariant x >= 1 ==> x >= 1; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant 0 <= y <= x;\nloop invariant x == 2^y;\nloop invariant x == y * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: x >= 1;\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y <= 2 * x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\nloop invariant i2: x >= 1;\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 2^(y-1) * (x - 1);\nloop invariant y >= 0;\nloop invariant y <= x - 1;\nloop invariant y < x - 1 ==> x = 2 * x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: x >= 1;\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x + 1 <= y;\nloop invariant x >= 1;\nloop invariant y <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 1 <= x;\n\n\nloop invariant i4: x >= 1;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant x <= y;\nloop invariant y >= 2;\nloop invariant x <= y;\nloop invariant y >= 2;\nloop invariant x <= y;\nloop invariant y >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\nloop invariant i2: x >= 1;\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x >= y / 2;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\nloop invariant i3: x >= 1;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 47: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 1 <= x;\nloop invariant i2: x <= 2^31 - 1;\nloop invariant i3: y >= 1;\nloop invariant i4: y <= 2^31 - 2;\nloop invariant i5: x < y;\nloop invariant i6: x < 2^31 - 1;\nloop invariant i7: y < 2^31 - 1;\nloop invariant i8: 0 <= x;\nloop invariant i9: x >= 1;\nloop invariant i10: x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\nloop invariant i11: y == x;\nloop invariant i12: y <= 2^31 - 1;\nloop invariant i13: y <= x;\nloop invariant i14: x >= y;\nloop invariant i15: 0 <= y <= 100000;loop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant i16: 0 <= x < y;\nloop invariant i17: x > 0;\nloop invariant i18: y > 0;\nloop invariant i19: y <= 100000;\nloop invariant i20: x >= (1 + (y - 1) * y / 2);\nloop invariant i21: x < 100000;\nloop invariant i22: 0 <= x; loop invariant x <= y; loop invariant y <= x + x; loop invariant x < y ==> x <= x + x; loop invariant x >= 1 ==> x >= 1; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x;\nloop invariant i23: 0 <= x <= y;\nloop invariant i24: 0 <= y <= x;\nloop invariant i25: x == 2^y;\nloop invariant i26: x == y * y;\nloop invariant i27: y >= x;\nloop invariant i28: x <= y;\nloop invariant i29: y <= 2 * x;\nloop invariant i30: x <= 2^(y-1) * (x - 1);\nloop invariant i31: y >= 0;\nloop invariant i32: y <= x - 1;\nloop invariant i33: y < x - 1 ==> x = 2 * x;\nloop invariant i34: 1 <= y;\nloop invariant i35: x + 1 <= y;\nloop invariant i36: y >= 2;\nloop invariant i37: 1 <= x <= y;\nloop invariant i38: x >= y / 2;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 17,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 1 <= x;\n\n\n\n\n\n\nloop invariant i8: 0 <= x;\nloop invariant i9: x >= 1;\nloop invariant i10: x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824;\n\n\n\n\n\n\nloop invariant i17: x > 0;\n\n\n\n\nloop invariant i22: 0 <= x; loop invariant x <= y; loop invariant y <= x + x; loop invariant x < y ==> x <= x + x; loop invariant x >= 1 ==> x >= 1; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x; loop invariant x < y ==> x < x + x;\nloop invariant i23: 0 <= x <= y;\n\n\n\nloop invariant i27: y >= x;\nloop invariant i28: x <= y;\nloop invariant i29: y <= 2 * x;\n\nloop invariant i31: y >= 0;\n\n\nloop invariant i34: 1 <= y;\n\n\nloop invariant i37: 1 <= x <= y;\nloop invariant i38: x >= y / 2;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c"
        ],
        "skipped": [],
        "total": 5,
        "success_count": 2,
        "failure_count": 3,
        "success_rate": 0.4
    }
}