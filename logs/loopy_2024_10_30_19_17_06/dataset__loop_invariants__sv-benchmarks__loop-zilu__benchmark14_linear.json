{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  while (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i <= 200 ==> i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 ==> i >= 0 && i <= 200;\nloop invariant i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 ==> i >= 0 && i <= 200 && i >= 0;\nloop invariant i <= 200 ==> i >= 0 && i <= 200 && i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200 && i >= 0 && i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i' == (i - 1) ==> i' >= 0;\nloop invariant i' == (i - 1) ==> i' <= 200;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 200;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0; loop invariant i <= 200; loop invariant i <= 0; loop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i <= 0 ==> 0 <= i ==> i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0 && i <= 200;\nloop invariant i >= 0 && i <= 200 && i > 0;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i == 0 ==> i >= 0;\nloop invariant i == 0 ==> i <= 200;\nloop invariant i == 0 ==> i == 0;\nloop invariant i > 0 ==> i >= 0;\nloop invariant i > 0 ==> i <= 200;\nloop invariant i > 0 ==> i != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i <= i;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
            "```\n/*@\nloop invariant i > 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 1;\nloop invariant i == 1;\nloop invariant i >= 2;\nloop invariant i == 2;\nloop invariant i >= 3;\nloop invariant i == 3;\nloop invariant i >= 4;\nloop invariant i == 4;\nloop invariant i >= 5;\nloop invariant i == 5;\nloop invariant i >= 6;\nloop invariant i == 6;\nloop invariant i >= 7;\nloop invariant i == 7;\nloop invariant i >= 8;\nloop invariant i == 8;\nloop invariant i >= 9;\nloop invariant i == 9;\nloop invariant i >= 10;\nloop invariant i == 10;\nloop invariant i >= 11;\nloop invariant i == 11;\nloop invariant i >= 12;\nloop invariant i == 12;\nloop invariant i >= 13;\nloop invariant i == 13;\nloop invariant i >= 14;\nloop invariant i == 14;\nloop invariant i >= 15;\nloop invariant i == 15;\nloop invariant i >= 16;\nloop invariant i == 16;\nloop invariant i >= 17;\nloop invariant i == 17;\nloop invariant i >= 18;\nloop invariant i == 18;\nloop invariant i >= 19;\nloop invariant i == 19;\nloop invariant i >= 20;\nloop invariant i == 20;\nloop invariant i >= 21;\nloop invariant i == 21;\nloop invariant i >= 22;\nloop invariant i == 22;\nloop invariant i >= 23;\nloop invariant i == 23;\nloop invariant i >= 24;\nloop invariant i == 24;\nloop invariant i >= 25;\nloop invariant i == 25;\nloop invariant i >= 26;\nloop invariant i == 26;\nloop invariant i >= 27;\nloop invariant i == 27;\nloop invariant i >= 28;\nloop invariant i == 28;\nloop invariant i >= 29;\nloop invariant i == 29;\nloop invariant i >= 30;\nloop invariant i == 30;\nloop invariant i >= 31;\nloop invariant i == 31;\nloop invariant i >= 32;\nloop invariant i == 32;\nloop invariant i >= 33;\nloop invariant i == 33;\nloop invariant i >= 34;\nloop invariant i == 34;\nloop invariant i >= 35;\nloop invariant i == 35;\nloop invariant i >= 36;\nloop invariant i == 36;\nloop invariant i >= 37;\nloop invariant i == 37;\nloop invariant i >= 38;\nloop invariant i == 38;\nloop invariant i >= 39;\nloop invariant i == 39;\nloop invariant i >= 40;\nloop invariant i == 40;\nloop invariant i >= 41;\nloop invariant i == 41;\nloop invariant i >= 42;\nloop invariant i == 42;\nloop invariant i >= 43;\nloop invariant i == 43;\nloop invariant i >= 44;\nloop invariant i == 44;\nloop invariant i >= 45;\nloop invariant i == 45;\nloop invariant i >= 46;\nloop invariant i == 46;\nloop invariant i >= 47;\nloop invariant i == 47;\nloop invariant i >= 48;\nloop invariant i == 48;\nloop invariant i >= 49;\nloop invariant i == 49;\nloop invariant i >= 50;\nloop invariant i == 50;\nloop invariant i >= 51;\nloop invariant i == 51;\nloop invariant i >= 52;\nloop invariant i == 52;\nloop invariant i >= 53;\nloop invariant i == 53;\nloop invariant i >= 54;\nloop invariant i == 54;\nloop invariant i >= 55;\nloop invariant i == 55;\nloop invariant i >= 56;\nloop invariant i == 56;\nloop invariant i >= 57;\nloop invariant i == 57;\nloop invariant i >= 58;\nloop invariant i == 58;\nloop invariant i >= 59;\nloop invariant i == 59;\nloop invariant i >= 60;\nloop invariant i == 60;\nloop invariant i >= 61;\nloop invariant i == 61;\nloop invariant i >= 62;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\n\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i <= 200 ==> i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 ==> i >= 0 && i <= 200;\nloop invariant i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i >= 0 ==> i >= 0 && i <= 200 && i >= 0;\nloop invariant i <= 200 ==> i >= 0 && i <= 200 && i <= 200;\nloop invariant i >= 0 && i <= 200 ==> i >= 0 && i <= 200 && i >= 0 && i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 200;\nloop invariant i4: i >= 0 ==> i >= 0;\nloop invariant i5: i <= 200 ==> i <= 200;\nloop invariant i6: i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i7: i >= 0 ==> i >= 0 && i <= 200;\nloop invariant i8: i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i9: i >= 0 ==> i >= 0 && i <= 200 && i >= 0;\nloop invariant i10: i <= 200 ==> i >= 0 && i <= 200 && i <= 200;\nloop invariant i11: i >= 0 && i <= 200 ==> i >= 0 && i <= 200 && i >= 0 && i <= 200;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i' == (i - 1) ==> i' >= 0;\nloop invariant i' == (i - 1) ==> i' <= 200;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 200;\nloop invariant i4: i' == (i - 1) ==> i' >= 0;\nloop invariant i5: i' == (i - 1) ==> i' <= 200;\nloop invariant i6: i' == (i - 1) ==> (i' > 0) ==> i > 0;\nloop invariant i7: i' == (i - 1) ==> (i' <= 0) ==> i <= 0;\nloop invariant i8: i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i9: i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\n\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 200;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 200;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\n\nloop invariant i2: i >= 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i >= 0; loop invariant i <= 200; loop invariant i <= 0; loop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: i >= 0; loop invariant i <= 200; loop invariant i <= 0; loop invariant i >= 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i <= 0 ==> 0 <= i ==> i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i <= 0 ==> 0 <= i ==> i <= 200;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i >= 0 && i <= 200;\nloop invariant i >= 0 && i <= 200 && i > 0;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: i >= 0 && i <= 200;\n\nloop invariant i3: i >= 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i == 0 ==> i >= 0;\nloop invariant i == 0 ==> i <= 200;\nloop invariant i == 0 ==> i == 0;\nloop invariant i > 0 ==> i >= 0;\nloop invariant i > 0 ==> i <= 200;\nloop invariant i > 0 ==> i != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 200;\nloop invariant i4: i == 0 ==> i >= 0;\nloop invariant i5: i == 0 ==> i <= 200;\nloop invariant i6: i == 0 ==> i == 0;\nloop invariant i7: i > 0 ==> i >= 0;\nloop invariant i8: i > 0 ==> i <= 200;\nloop invariant i9: i > 0 ==> i != 0;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i <= i;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 200;\nloop invariant i4: i <= i;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: i >= 0;\nloop invariant i2: i <= 200;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 62,
                "annotations": "```\n/*@\nloop invariant i > 0;\nloop invariant i <= 200;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 1;\nloop invariant i == 1;\nloop invariant i >= 2;\nloop invariant i == 2;\nloop invariant i >= 3;\nloop invariant i == 3;\nloop invariant i >= 4;\nloop invariant i == 4;\nloop invariant i >= 5;\nloop invariant i == 5;\nloop invariant i >= 6;\nloop invariant i == 6;\nloop invariant i >= 7;\nloop invariant i == 7;\nloop invariant i >= 8;\nloop invariant i == 8;\nloop invariant i >= 9;\nloop invariant i == 9;\nloop invariant i >= 10;\nloop invariant i == 10;\nloop invariant i >= 11;\nloop invariant i == 11;\nloop invariant i >= 12;\nloop invariant i == 12;\nloop invariant i >= 13;\nloop invariant i == 13;\nloop invariant i >= 14;\nloop invariant i == 14;\nloop invariant i >= 15;\nloop invariant i == 15;\nloop invariant i >= 16;\nloop invariant i == 16;\nloop invariant i >= 17;\nloop invariant i == 17;\nloop invariant i >= 18;\nloop invariant i == 18;\nloop invariant i >= 19;\nloop invariant i == 19;\nloop invariant i >= 20;\nloop invariant i == 20;\nloop invariant i >= 21;\nloop invariant i == 21;\nloop invariant i >= 22;\nloop invariant i == 22;\nloop invariant i >= 23;\nloop invariant i == 23;\nloop invariant i >= 24;\nloop invariant i == 24;\nloop invariant i >= 25;\nloop invariant i == 25;\nloop invariant i >= 26;\nloop invariant i == 26;\nloop invariant i >= 27;\nloop invariant i == 27;\nloop invariant i >= 28;\nloop invariant i == 28;\nloop invariant i >= 29;\nloop invariant i == 29;\nloop invariant i >= 30;\nloop invariant i == 30;\nloop invariant i >= 31;\nloop invariant i == 31;\nloop invariant i >= 32;\nloop invariant i == 32;\nloop invariant i >= 33;\nloop invariant i == 33;\nloop invariant i >= 34;\nloop invariant i == 34;\nloop invariant i >= 35;\nloop invariant i == 35;\nloop invariant i >= 36;\nloop invariant i == 36;\nloop invariant i >= 37;\nloop invariant i == 37;\nloop invariant i >= 38;\nloop invariant i == 38;\nloop invariant i >= 39;\nloop invariant i == 39;\nloop invariant i >= 40;\nloop invariant i == 40;\nloop invariant i >= 41;\nloop invariant i == 41;\nloop invariant i >= 42;\nloop invariant i == 42;\nloop invariant i >= 43;\nloop invariant i == 43;\nloop invariant i >= 44;\nloop invariant i == 44;\nloop invariant i >= 45;\nloop invariant i == 45;\nloop invariant i >= 46;\nloop invariant i == 46;\nloop invariant i >= 47;\nloop invariant i == 47;\nloop invariant i >= 48;\nloop invariant i == 48;\nloop invariant i >= 49;\nloop invariant i == 49;\nloop invariant i >= 50;\nloop invariant i == 50;\nloop invariant i >= 51;\nloop invariant i == 51;\nloop invariant i >= 52;\nloop invariant i == 52;\nloop invariant i >= 53;\nloop invariant i == 53;\nloop invariant i >= 54;\nloop invariant i == 54;\nloop invariant i >= 55;\nloop invariant i == 55;\nloop invariant i >= 56;\nloop invariant i == 56;\nloop invariant i >= 57;\nloop invariant i == 57;\nloop invariant i >= 58;\nloop invariant i == 58;\nloop invariant i >= 59;\nloop invariant i == 59;\nloop invariant i >= 60;\nloop invariant i == 60;\nloop invariant i >= 61;\nloop invariant i == 61;\nloop invariant i >= 62;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\n\nloop invariant i2: i <= 200;\nloop invariant i3: i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 28: unexpected token '' == (i - 1) ==> i''",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: 1 <= i <= 200;\nloop invariant i4: i <= 200;\nloop invariant i5: i >= 0 ==> i >= 0;\nloop invariant i6: i <= 200 ==> i <= 200;\nloop invariant i7: i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i8: i >= 0 ==> i >= 0 && i <= 200;\nloop invariant i9: i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i10: i >= 0 ==> i >= 0 && i <= 200 && i >= 0;\nloop invariant i11: i <= 200 ==> i >= 0 && i <= 200 && i <= 200;\nloop invariant i12: i >= 0 && i <= 200 ==> i >= 0 && i <= 200 && i >= 0 && i <= 200;\nloop invariant i13: i' == (i - 1) ==> i' >= 0;\nloop invariant i14: i' == (i - 1) ==> i' <= 200;\nloop invariant i15: i' == (i - 1) ==> (i' > 0) ==> i > 0;\nloop invariant i16: i' == (i - 1) ==> (i' <= 0) ==> i <= 0;\nloop invariant i17: i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i18: i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i19: i >= 0; loop invariant i <= 200; loop invariant i <= 0; loop invariant i >= 0;\nloop invariant i20: i <= 0 ==> 0 <= i ==> i <= 200;\nloop invariant i21: i >= 0 && i <= 200;\nloop invariant i22: i >= 0 && i <= 200 && i > 0;\nloop invariant i23: i == 0 ==> i >= 0;\nloop invariant i24: i == 0 ==> i <= 200;\nloop invariant i25: i == 0 ==> i == 0;\nloop invariant i26: i > 0 ==> i >= 0;\nloop invariant i27: i > 0 ==> i <= 200;\nloop invariant i28: i > 0 ==> i != 0;\nloop invariant i29: i <= i;\nloop invariant i30: i > 0;\nloop invariant i31: i == 0;\nloop invariant i32: i >= 1;\nloop invariant i33: i == 1;\nloop invariant i34: i >= 2;\nloop invariant i35: i == 2;\nloop invariant i36: i >= 3;\nloop invariant i37: i == 3;\nloop invariant i38: i >= 4;\nloop invariant i39: i == 4;\nloop invariant i40: i >= 5;\nloop invariant i41: i == 5;\nloop invariant i42: i >= 6;\nloop invariant i43: i == 6;\nloop invariant i44: i >= 7;\nloop invariant i45: i == 7;\nloop invariant i46: i >= 8;\nloop invariant i47: i == 8;\nloop invariant i48: i >= 9;\nloop invariant i49: i == 9;\nloop invariant i50: i >= 10;\nloop invariant i51: i == 10;\nloop invariant i52: i >= 11;\nloop invariant i53: i == 11;\nloop invariant i54: i >= 12;\nloop invariant i55: i == 12;\nloop invariant i56: i >= 13;\nloop invariant i57: i == 13;\nloop invariant i58: i >= 14;\nloop invariant i59: i == 14;\nloop invariant i60: i >= 15;\nloop invariant i61: i == 15;\nloop invariant i62: i >= 16;\nloop invariant i63: i == 16;\nloop invariant i64: i >= 17;\nloop invariant i65: i == 17;\nloop invariant i66: i >= 18;\nloop invariant i67: i == 18;\nloop invariant i68: i >= 19;\nloop invariant i69: i == 19;\nloop invariant i70: i >= 20;\nloop invariant i71: i == 20;\nloop invariant i72: i >= 21;\nloop invariant i73: i == 21;\nloop invariant i74: i >= 22;\nloop invariant i75: i == 22;\nloop invariant i76: i >= 23;\nloop invariant i77: i == 23;\nloop invariant i78: i >= 24;\nloop invariant i79: i == 24;\nloop invariant i80: i >= 25;\nloop invariant i81: i == 25;\nloop invariant i82: i >= 26;\nloop invariant i83: i == 26;\nloop invariant i84: i >= 27;\nloop invariant i85: i == 27;\nloop invariant i86: i >= 28;\nloop invariant i87: i == 28;\nloop invariant i88: i >= 29;\nloop invariant i89: i == 29;\nloop invariant i90: i >= 30;\nloop invariant i91: i == 30;\nloop invariant i92: i >= 31;\nloop invariant i93: i == 31;\nloop invariant i94: i >= 32;\nloop invariant i95: i == 32;\nloop invariant i96: i >= 33;\nloop invariant i97: i == 33;\nloop invariant i98: i >= 34;\nloop invariant i99: i == 34;\nloop invariant i100: i >= 35;\nloop invariant i101: i == 35;\nloop invariant i102: i >= 36;\nloop invariant i103: i == 36;\nloop invariant i104: i >= 37;\nloop invariant i105: i == 37;\nloop invariant i106: i >= 38;\nloop invariant i107: i == 38;\nloop invariant i108: i >= 39;\nloop invariant i109: i == 39;\nloop invariant i110: i >= 40;\nloop invariant i111: i == 40;\nloop invariant i112: i >= 41;\nloop invariant i113: i == 41;\nloop invariant i114: i >= 42;\nloop invariant i115: i == 42;\nloop invariant i116: i >= 43;\nloop invariant i117: i == 43;\nloop invariant i118: i >= 44;\nloop invariant i119: i == 44;\nloop invariant i120: i >= 45;\nloop invariant i121: i == 45;\nloop invariant i122: i >= 46;\nloop invariant i123: i == 46;\nloop invariant i124: i >= 47;\nloop invariant i125: i == 47;\nloop invariant i126: i >= 48;\nloop invariant i127: i == 48;\nloop invariant i128: i >= 49;\nloop invariant i129: i == 49;\nloop invariant i130: i >= 50;\nloop invariant i131: i == 50;\nloop invariant i132: i >= 51;\nloop invariant i133: i == 51;\nloop invariant i134: i >= 52;\nloop invariant i135: i == 52;\nloop invariant i136: i >= 53;\nloop invariant i137: i == 53;\nloop invariant i138: i >= 54;\nloop invariant i139: i == 54;\nloop invariant i140: i >= 55;\nloop invariant i141: i == 55;\nloop invariant i142: i >= 56;\nloop invariant i143: i == 56;\nloop invariant i144: i >= 57;\nloop invariant i145: i == 57;\nloop invariant i146: i >= 58;\nloop invariant i147: i == 58;\nloop invariant i148: i >= 59;\nloop invariant i149: i == 59;\nloop invariant i150: i >= 60;\nloop invariant i151: i == 60;\nloop invariant i152: i >= 61;\nloop invariant i153: i == 61;\nloop invariant i154: i >= 62;\nloop invariant i155: i1;\nloop invariant i156: i2;\nloop invariant i157: i3;\nloop invariant i158: i4;\nloop invariant i159: i5;\nloop invariant i160: i6;\nloop invariant i161: i7;\nloop invariant i162: i8;\nloop invariant i163: i9;\nloop invariant i164: i10;\nloop invariant i165: i11;\nloop invariant i166: i12;\nloop invariant i167: i13;\nloop invariant i168: i14;\nloop invariant i169: i15;\nloop invariant i170: i16;\nloop invariant i171: i17;\nloop invariant i172: i18;\nloop invariant i173: i19;\nloop invariant i174: i20;\nloop invariant i175: i21;\nloop invariant i176: i22;\nloop invariant i177: i23;\nloop invariant i178: i24;\nloop invariant i179: i25;\nloop invariant i180: i26;\nloop invariant i181: i27;\nloop invariant i182: i28;\nloop invariant i183: i29;\nloop invariant i184: i30;\nloop invariant i185: i31;\nloop invariant i186: i32;\nloop invariant i187: i33;\nloop invariant i188: i34;\nloop invariant i189: i35;\nloop invariant i190: i36;\nloop invariant i191: i37;\nloop invariant i192: i38;\nloop invariant i193: i39;\nloop invariant i194: i40;\nloop invariant i195: i41;\nloop invariant i196: i42;\nloop invariant i197: i43;\nloop invariant i198: i44;\nloop invariant i199: i45;\nloop invariant i200: i46;\nloop invariant i201: i47;\nloop invariant i202: i48;\nloop invariant i203: i49;\nloop invariant i204: i50;\nloop invariant i205: i51;\nloop invariant i206: i52;\nloop invariant i207: i53;\nloop invariant i208: i54;\nloop invariant i209: i55;\nloop invariant i210: i56;\nloop invariant i211: i57;\nloop invariant i212: i58;\nloop invariant i213: i59;\nloop invariant i214: i60;\nloop invariant i215: i61;\nloop invariant i216: i62;\nloop invariant i217: i63;\nloop invariant i218: i64;\nloop invariant i219: i65;\nloop invariant i220: i66;\nloop invariant i221: i67;\nloop invariant i222: i68;\nloop invariant i223: i69;\nloop invariant i224: i70;\nloop invariant i225: i71;\nloop invariant i226: i72;\nloop invariant i227: i73;\nloop invariant i228: i74;\nloop invariant i229: i75;\nloop invariant i230: i76;\nloop invariant i231: i77;\nloop invariant i232: i78;\nloop invariant i233: i79;\nloop invariant i234: i80;\nloop invariant i235: i81;\nloop invariant i236: i82;\nloop invariant i237: i83;\nloop invariant i238: i84;\nloop invariant i239: i85;\nloop invariant i240: i86;\nloop invariant i241: i87;\nloop invariant i242: i88;\nloop invariant i243: i89;\nloop invariant i244: i90;\nloop invariant i245: i91;\nloop invariant i246: i92;\nloop invariant i247: i93;\nloop invariant i248: i94;\nloop invariant i249: i95;\nloop invariant i250: i96;\nloop invariant i251: i97;\nloop invariant i252: i98;\nloop invariant i253: i99;\nloop invariant i254: i100;\nloop invariant i255: i101;\nloop invariant i256: i102;\nloop invariant i257: i103;\nloop invariant i258: i104;\nloop invariant i259: i105;\nloop invariant i260: i106;\nloop invariant i261: i107;\nloop invariant i262: i108;\nloop invariant i263: i109;\nloop invariant i264: i110;\nloop invariant i265: i111;\nloop invariant i266: i112;\nloop invariant i267: i113;\nloop invariant i268: i114;\nloop invariant i269: i115;\nloop invariant i270: i116;\nloop invariant i271: i117;\nloop invariant i272: i118;\nloop invariant i273: i119;\nloop invariant i274: i120;\nloop invariant i275: i121;\nloop invariant i276: i122;\nloop invariant i277: i123;\nloop invariant i278: i124;\nloop invariant i279: i125;\nloop invariant i280: i126;\nloop invariant i281: i127;\nloop invariant i282: i128;\nloop invariant i283: i129;\nloop invariant i284: i130;\nloop invariant i285: i131;\nloop invariant i286: i132;\nloop invariant i287: i133;\nloop invariant i288: i134;\nloop invariant i289: i135;\nloop invariant i290: i136;\nloop invariant i291: i137;\nloop invariant i292: i138;\nloop invariant i293: i139;\nloop invariant i294: i140;\nloop invariant i295: i141;\nloop invariant i296: i142;\nloop invariant i297: i143;\nloop invariant i298: i144;\nloop invariant i299: i145;\nloop invariant i300: i146;\nloop invariant i301: i147;\nloop invariant i302: i148;\nloop invariant i303: i149;\nloop invariant i304: i150;\nloop invariant i305: i151;\nloop invariant i306: i152;\nloop invariant i307: i153;\nloop invariant i308: i154;\nloop invariant i309: i155;\nloop invariant i310: i156;\nloop invariant i311: i157;\nloop invariant i312: i158;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 1,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  \n  if (!(i>=0 && i<=200)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 200;\nloop invariant i2: i >= 0;\nloop invariant i3: 1 <= i <= 200;\nloop invariant i4: i <= 200;\nloop invariant i5: i >= 0 ==> i >= 0;\nloop invariant i6: i <= 200 ==> i <= 200;\nloop invariant i7: i >= 0 && i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i8: i >= 0 ==> i >= 0 && i <= 200;\nloop invariant i9: i <= 200 ==> i >= 0 && i <= 200;\nloop invariant i10: i >= 0 ==> i >= 0 && i <= 200 && i >= 0;\nloop invariant i11: i <= 200 ==> i >= 0 && i <= 200 && i <= 200;\nloop invariant i12: i >= 0 && i <= 200 ==> i >= 0 && i <= 200 && i >= 0 && i <= 200;\nloop invariant i13: i' == (i - 1) ==> i' >= 0;\nloop invariant i14: i' == (i - 1) ==> i' <= 200;\nloop invariant i15: i' == (i - 1) ==> (i' > 0) ==> i > 0;\nloop invariant i16: i' == (i - 1) ==> (i' <= 0) ==> i <= 0;\nloop invariant i17: i' == (i - 1) ==> (i' > 0) ==> i' > 0;\nloop invariant i18: i' == (i - 1) ==> (i' <= 0) ==> i' <= 0;\nloop invariant i19: i >= 0; loop invariant i <= 200; loop invariant i <= 0; loop invariant i >= 0;\nloop invariant i20: i <= 0 ==> 0 <= i ==> i <= 200;\nloop invariant i21: i >= 0 && i <= 200;\nloop invariant i22: i >= 0 && i <= 200 && i > 0;\nloop invariant i23: i == 0 ==> i >= 0;\nloop invariant i24: i == 0 ==> i <= 200;\nloop invariant i25: i == 0 ==> i == 0;\nloop invariant i26: i > 0 ==> i >= 0;\nloop invariant i27: i > 0 ==> i <= 200;\nloop invariant i28: i > 0 ==> i != 0;\nloop invariant i29: i <= i;\nloop invariant i30: i > 0;\nloop invariant i31: i == 0;\nloop invariant i32: i >= 1;\nloop invariant i33: i == 1;\nloop invariant i34: i >= 2;\nloop invariant i35: i == 2;\nloop invariant i36: i >= 3;\nloop invariant i37: i == 3;\nloop invariant i38: i >= 4;\nloop invariant i39: i == 4;\nloop invariant i40: i >= 5;\nloop invariant i41: i == 5;\nloop invariant i42: i >= 6;\nloop invariant i43: i == 6;\nloop invariant i44: i >= 7;\nloop invariant i45: i == 7;\nloop invariant i46: i >= 8;\nloop invariant i47: i == 8;\nloop invariant i48: i >= 9;\nloop invariant i49: i == 9;\nloop invariant i50: i >= 10;\nloop invariant i51: i == 10;\nloop invariant i52: i >= 11;\nloop invariant i53: i == 11;\nloop invariant i54: i >= 12;\nloop invariant i55: i == 12;\nloop invariant i56: i >= 13;\nloop invariant i57: i == 13;\nloop invariant i58: i >= 14;\nloop invariant i59: i == 14;\nloop invariant i60: i >= 15;\nloop invariant i61: i == 15;\nloop invariant i62: i >= 16;\nloop invariant i63: i == 16;\nloop invariant i64: i >= 17;\nloop invariant i65: i == 17;\nloop invariant i66: i >= 18;\nloop invariant i67: i == 18;\nloop invariant i68: i >= 19;\nloop invariant i69: i == 19;\nloop invariant i70: i >= 20;\nloop invariant i71: i == 20;\nloop invariant i72: i >= 21;\nloop invariant i73: i == 21;\nloop invariant i74: i >= 22;\nloop invariant i75: i == 22;\nloop invariant i76: i >= 23;\nloop invariant i77: i == 23;\nloop invariant i78: i >= 24;\nloop invariant i79: i == 24;\nloop invariant i80: i >= 25;\nloop invariant i81: i == 25;\nloop invariant i82: i >= 26;\nloop invariant i83: i == 26;\nloop invariant i84: i >= 27;\nloop invariant i85: i == 27;\nloop invariant i86: i >= 28;\nloop invariant i87: i == 28;\nloop invariant i88: i >= 29;\nloop invariant i89: i == 29;\nloop invariant i90: i >= 30;\nloop invariant i91: i == 30;\nloop invariant i92: i >= 31;\nloop invariant i93: i == 31;\nloop invariant i94: i >= 32;\nloop invariant i95: i == 32;\nloop invariant i96: i >= 33;\nloop invariant i97: i == 33;\nloop invariant i98: i >= 34;\nloop invariant i99: i == 34;\nloop invariant i100: i >= 35;\nloop invariant i101: i == 35;\nloop invariant i102: i >= 36;\nloop invariant i103: i == 36;\nloop invariant i104: i >= 37;\nloop invariant i105: i == 37;\nloop invariant i106: i >= 38;\nloop invariant i107: i == 38;\nloop invariant i108: i >= 39;\nloop invariant i109: i == 39;\nloop invariant i110: i >= 40;\nloop invariant i111: i == 40;\nloop invariant i112: i >= 41;\nloop invariant i113: i == 41;\nloop invariant i114: i >= 42;\nloop invariant i115: i == 42;\nloop invariant i116: i >= 43;\nloop invariant i117: i == 43;\nloop invariant i118: i >= 44;\nloop invariant i119: i == 44;\nloop invariant i120: i >= 45;\nloop invariant i121: i == 45;\nloop invariant i122: i >= 46;\nloop invariant i123: i == 46;\nloop invariant i124: i >= 47;\nloop invariant i125: i == 47;\nloop invariant i126: i >= 48;\nloop invariant i127: i == 48;\nloop invariant i128: i >= 49;\nloop invariant i129: i == 49;\nloop invariant i130: i >= 50;\nloop invariant i131: i == 50;\nloop invariant i132: i >= 51;\nloop invariant i133: i == 51;\nloop invariant i134: i >= 52;\nloop invariant i135: i == 52;\nloop invariant i136: i >= 53;\nloop invariant i137: i == 53;\nloop invariant i138: i >= 54;\nloop invariant i139: i == 54;\nloop invariant i140: i >= 55;\nloop invariant i141: i == 55;\nloop invariant i142: i >= 56;\nloop invariant i143: i == 56;\nloop invariant i144: i >= 57;\nloop invariant i145: i == 57;\nloop invariant i146: i >= 58;\nloop invariant i147: i == 58;\nloop invariant i148: i >= 59;\nloop invariant i149: i == 59;\nloop invariant i150: i >= 60;\nloop invariant i151: i == 60;\nloop invariant i152: i >= 61;\nloop invariant i153: i == 61;\nloop invariant i154: i >= 62;\nloop invariant i155: i1;\nloop invariant i156: i2;\nloop invariant i157: i3;\nloop invariant i158: i4;\nloop invariant i159: i5;\nloop invariant i160: i6;\nloop invariant i161: i7;\nloop invariant i162: i8;\nloop invariant i163: i9;\nloop invariant i164: i10;\nloop invariant i165: i11;\nloop invariant i166: i12;\nloop invariant i167: i13;\nloop invariant i168: i14;\nloop invariant i169: i15;\nloop invariant i170: i16;\nloop invariant i171: i17;\nloop invariant i172: i18;\nloop invariant i173: i19;\nloop invariant i174: i20;\nloop invariant i175: i21;\nloop invariant i176: i22;\nloop invariant i177: i23;\nloop invariant i178: i24;\nloop invariant i179: i25;\nloop invariant i180: i26;\nloop invariant i181: i27;\nloop invariant i182: i28;\nloop invariant i183: i29;\nloop invariant i184: i30;\nloop invariant i185: i31;\nloop invariant i186: i32;\nloop invariant i187: i33;\nloop invariant i188: i34;\nloop invariant i189: i35;\nloop invariant i190: i36;\nloop invariant i191: i37;\nloop invariant i192: i38;\nloop invariant i193: i39;\nloop invariant i194: i40;\nloop invariant i195: i41;\nloop invariant i196: i42;\nloop invariant i197: i43;\nloop invariant i198: i44;\nloop invariant i199: i45;\nloop invariant i200: i46;\nloop invariant i201: i47;\nloop invariant i202: i48;\nloop invariant i203: i49;\nloop invariant i204: i50;\nloop invariant i205: i51;\nloop invariant i206: i52;\nloop invariant i207: i53;\nloop invariant i208: i54;\nloop invariant i209: i55;\nloop invariant i210: i56;\nloop invariant i211: i57;\nloop invariant i212: i58;\nloop invariant i213: i59;\nloop invariant i214: i60;\nloop invariant i215: i61;\nloop invariant i216: i62;\nloop invariant i217: i63;\nloop invariant i218: i64;\nloop invariant i219: i65;\nloop invariant i220: i66;\nloop invariant i221: i67;\nloop invariant i222: i68;\nloop invariant i223: i69;\nloop invariant i224: i70;\nloop invariant i225: i71;\nloop invariant i226: i72;\nloop invariant i227: i73;\nloop invariant i228: i74;\nloop invariant i229: i75;\nloop invariant i230: i76;\nloop invariant i231: i77;\nloop invariant i232: i78;\nloop invariant i233: i79;\nloop invariant i234: i80;\nloop invariant i235: i81;\nloop invariant i236: i82;\nloop invariant i237: i83;\nloop invariant i238: i84;\nloop invariant i239: i85;\nloop invariant i240: i86;\nloop invariant i241: i87;\nloop invariant i242: i88;\nloop invariant i243: i89;\nloop invariant i244: i90;\nloop invariant i245: i91;\nloop invariant i246: i92;\nloop invariant i247: i93;\nloop invariant i248: i94;\nloop invariant i249: i95;\nloop invariant i250: i96;\nloop invariant i251: i97;\nloop invariant i252: i98;\nloop invariant i253: i99;\nloop invariant i254: i100;\nloop invariant i255: i101;\nloop invariant i256: i102;\nloop invariant i257: i103;\nloop invariant i258: i104;\nloop invariant i259: i105;\nloop invariant i260: i106;\nloop invariant i261: i107;\nloop invariant i262: i108;\nloop invariant i263: i109;\nloop invariant i264: i110;\nloop invariant i265: i111;\nloop invariant i266: i112;\nloop invariant i267: i113;\nloop invariant i268: i114;\nloop invariant i269: i115;\nloop invariant i270: i116;\nloop invariant i271: i117;\nloop invariant i272: i118;\nloop invariant i273: i119;\nloop invariant i274: i120;\nloop invariant i275: i121;\nloop invariant i276: i122;\nloop invariant i277: i123;\nloop invariant i278: i124;\nloop invariant i279: i125;\nloop invariant i280: i126;\nloop invariant i281: i127;\nloop invariant i282: i128;\nloop invariant i283: i129;\nloop invariant i284: i130;\nloop invariant i285: i131;\nloop invariant i286: i132;\nloop invariant i287: i133;\nloop invariant i288: i134;\nloop invariant i289: i135;\nloop invariant i290: i136;\nloop invariant i291: i137;\nloop invariant i292: i138;\nloop invariant i293: i139;\nloop invariant i294: i140;\nloop invariant i295: i141;\nloop invariant i296: i142;\nloop invariant i297: i143;\nloop invariant i298: i144;\nloop invariant i299: i145;\nloop invariant i300: i146;\nloop invariant i301: i147;\nloop invariant i302: i148;\nloop invariant i303: i149;\nloop invariant i304: i150;\nloop invariant i305: i151;\nloop invariant i306: i152;\nloop invariant i307: i153;\nloop invariant i308: i154;\nloop invariant i309: i155;\nloop invariant i310: i156;\nloop invariant i311: i157;\nloop invariant i312: i158;\n*/\nwhile (i>0) {\n    i--;\n  }\n  {;\n//@ assert(i>=0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c"
        ],
        "skipped": [],
        "total": 135,
        "success_count": 117,
        "failure_count": 18,
        "success_rate": 0.8666666666666667
    }
}