{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  while(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x % 3 == y % 3; loop invariant if (y == 0) then (x % 3 == 0); loop invariant if (y == 1) then (x % 3 == 1 || x % 3 == 2); loop invariant if (y == 2) then (x % 3 == 2);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= 0;\nloop invariant (x % 3 == 1) ==> (x + 2 >= 0);\nloop invariant (x % 3 == 2) ==> (x + 1 >= 0);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 4 >= 0);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 5 >= 0);\nloop invariant (x % 3 == 1) ==> (x + 2 <= 2147483647);\nloop invariant (x % 3 == 2) ==> (x + 1 <= 2147483647);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 4 <= 2147483647);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 5 <= 2147483647);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant x % 3 != 1 && x % 3 != 2 ==> (x % 3 != 1 && x % 3 != 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= UINT_MAX;\nloop invariant 0 <= y <= 2;\nloop invariant y = 1 ==> (x % 3 != 1);\nloop invariant y = 1 ==> (x % 3 != 2);\nloop invariant (x % 3 == 1 && x <= UINT_MAX - 2) ==> (x + 2 <= UINT_MAX);\nloop invariant (x % 3 == 1 && x <= UINT_MAX - 2) ==> (y <= 1);\nloop invariant (x % 3 == 2 && x <= UINT_MAX - 1) ==> (x + 1 <= UINT_MAX);\nloop invariant (x % 3 == 2 && x <= UINT_MAX - 1) ==> (y <= 1);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 4) ==> (x + 4 <= UINT_MAX);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 4) ==> (y <= 2);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 5) ==> (x + 5 <= UINT_MAX);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 5) ==> (y <= 2);\nloop invariant y = 0 ==> (x % 3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5 * (unknown_int() + 1);\nloop invariant 0 <= y <= 1;\nloop invariant (x == 0 ==> y == 0);\nloop invariant (x == 1 ==> y == 0);\nloop invariant (x == 2 ==> y == 0);\nloop invariant (x == 3 ==> y == 0);\nloop invariant (x == 4 ==> y == 1);\nloop invariant (x == 5 ==> y == 1);\nloop invariant (x == 6 ==> y == 1);\nloop invariant (x == 7 ==> y == 1);\nloop invariant (x == 8 ==> y == 1);\nloop invariant (x == 9 ==> y == 1);\nloop invariant (x == 10 ==> y == 1);\nloop invariant (x == 11 ==> y == 1);\nloop invariant (x == 12 ==> y == 1);\nloop invariant (x == 13 ==> y == 1);\nloop invariant (x == 14 ==> y == 1);\nloop invariant (x == 15 ==> y == 1);\nloop invariant (x == 16 ==> y == 1);\nloop invariant (x == 17 ==> y == 1);\nloop invariant (x == 18 ==> y == 1);\nloop invariant (x == 19 ==> y == 1);\nloop invariant (x == 20 ==> y == 1);\nloop invariant (x == 21 ==> y == 1);\nloop invariant (x == 22 ==> y == 1);\nloop invariant (x == 23 ==> y == 1);\nloop invariant (x == 24 ==> y == 1);\nloop invariant (x == 25 ==> y == 1);\nloop invariant (x == 26 ==> y == 1);\nloop invariant (x == 27 ==> y == 1);\nloop invariant (x == 28 ==> y == 1);\nloop invariant (x == 29 ==> y == 1);\nloop invariant (x == 30 ==> y == 1);\nloop invariant (x == 31 ==> y == 1);\nloop invariant (x == 32 ==> y == 1);\nloop invariant (x == 33 ==> y == 1);\nloop invariant (x == 34 ==> y == 1);\nloop invariant (x == 35 ==> y == 1);\nloop invariant (x == 36 ==> y == 1);\nloop invariant (x == 37 ==> y == 1);\nloop invariant (x == 38 ==> y == 1);\nloop invariant (x == 39 ==> y == 1);\nloop invariant (x == 40 ==> y == 1);\nloop invariant (x == 41 ==> y == 1);\nloop invariant (x == 42 ==> y == 1);\nloop invariant (x == 43 ==> y == 1);\nloop invariant (x == 44 ==> y == 1);\nloop invariant (x == 45 ==> y == 1);\nloop invariant (x == 46 ==> y == 1);\nloop invariant (x == 47 ==> y == 1);\nloop invariant (x == 48 ==> y == 1);\nloop invariant (x == 49 ==> y == 1);\nloop invariant (x == 50 ==> y == 1);\nloop invariant (x == 51 ==> y == 1);\nloop invariant (x == 52 ==> y == 1);\nloop invariant (x == 53 ==> y == 1);\nloop invariant (x == 54 ==> y == 1);\nloop invariant (x == 55 ==> y == 1);\nloop invariant (x == 56 ==> y == 1);\nloop invariant (x == 57 ==> y == 1);\nloop invariant (x == 58 ==> y == 1);\nloop invariant (x == 59 ==> y == 1);\nloop invariant (x == 60 ==> y == 1);\nloop invariant (x == 61 ==> y == 1);\nloop invariant (x == 62 ==> y == 1);\nloop invariant (x == 63 ==> y == 1);\nloop invariant (x == 64 ==> y == 1);\nloop invariant (x == 65 ==> y == 1);\nloop invariant (x == 66 ==> y == 1);\nloop invariant (x == 67 ==> y == 1);\nloop invariant (x == 68 ==> y == 1);\nloop invariant (x == 69 ==> y == 1);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2;\nloop invariant y <= 2;\nloop invariant x <= 4;\nloop invariant y <= 4;\nloop invariant x <= 5;\nloop invariant y <= 5;\nloop invariant x <= 10;\nloop invariant y <= 10;\nloop invariant x <= 20;\nloop invariant y <= 20;\nloop invariant x <= 30;\nloop invariant y <= 30;\nloop invariant x <= 40;\nloop invariant y <= 40;\nloop invariant x <= 50;\nloop invariant y <= 50;\nloop invariant x <= 60;\nloop invariant y <= 60;\nloop invariant x <= 70;\nloop invariant y <= 70;\nloop invariant x <= 80;\nloop invariant y <= 80;\nloop invariant x <= 90;\nloop invariant y <= 90;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x <= 110;\nloop invariant y <= 110;\nloop invariant x <= 120;\nloop invariant y <= 120;\nloop invariant x <= 130;\nloop invariant y <= 130;\nloop invariant x <= 140;\nloop invariant y <= 140;\nloop invariant x <= 150;\nloop invariant y <= 150;\nloop invariant x <= 160;\nloop invariant y <= 160;\nloop invariant x <= 170;\nloop invariant y <= 170;\nloop invariant x <= 180;\nloop invariant y <= 180;\nloop invariant x <= 190;\nloop invariant y <= 190;\nloop invariant x <= 200;\nloop invariant y <= 200;\nloop invariant x <= 210;\nloop invariant y <= 210;\nloop invariant x <= 220;\nloop invariant y <= 220;\nloop invariant x <= 230;\nloop invariant y <= 230;\nloop invariant x <= 240;\nloop invariant y <= 240;\nloop invariant x <= 250;\nloop invariant y <= 250;\nloop invariant x <= 260;\nloop invariant y <= 260;\nloop invariant x <= 270;\nloop invariant y <= 270;\nloop invariant x <= 280;\nloop invariant y <= 280;\nloop invariant x <= 290;\nloop invariant y <= 290;\nloop invariant x <= 300;\nloop invariant y <= 300;\nloop invariant x <= 310;\nloop invariant y <= 310;\nloop invariant x <= 320;\nloop invariant y <= 320;\nloop invariant x <= 330;\nloop invariant y <= 330;\nloop invariant x <= 340;\nloop invariant y <= 340;\nloop invariant x <= 350;\nloop invariant y <= 350;\nloop invariant x <= 360;\nloop invariant y <= 360;\nloop invariant x <= 370;\nloop invariant y <= 370;\nloop invariant x <= 380;\nloop invariant y <= 380;\nloop invariant x <= 390;\nloop invariant y <= 390;\nloop invariant x <= 400;\nloop invariant y <= 400;\nloop invariant x <= 410;\nloop invariant y <= 410;\nloop invariant x <= 420;\nloop invariant y <= 420;\nloop invariant x <= 430;\nloop invariant y <= 430;\nloop invariant x <= 440;\nloop invariant y <= 440;\nloop invariant x <= 450;\nloop invariant y <= 450;\nloop invariant x <= 460;\nloop invariant y <= 460;\nloop invariant x <= 470;\nloop invariant y <= 470;\nloop invariant x <= 480;\nloop invariant y <= 480;\nloop invariant x <= 490;\nloop invariant y <= 490;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant x <= 510;\nloop invariant y <= 510;\nloop invariant x <= 520;\nloop invariant y <= 520;\nloop invariant x <= 530;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 1;\nloop invariant x % 3 != 1 ==> x % 3 == 0;\nloop invariant x % 3 != 2 ==> x % 3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3 ==> y == 0;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant 0 <= y <= 1;\nloop invariant x % 3 == 0 ==> y == 1;\nloop invariant x % 3 != 0 ==> y == 0;\nloop invariant x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 0 ==> x >= 3;\nloop invariant x % 3 != 0 ==> x >= 1;\nloop invariant x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x >= 3;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x >= 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x >= 1;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x is non-negative;\nloop invariant 0 <= y <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 8192;\nloop invariant y == 0 || y == 1;\nloop invariant y == 0 ==> x % 3 == 0;\nloop invariant y == 1 ==> x % 3 != 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x % 3 == y % 3; loop invariant if (y == 0) then (x % 3 == 0); loop invariant if (y == 1) then (x % 3 == 1 || x % 3 == 2); loop invariant if (y == 2) then (x % 3 == 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= y <= 100000;\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= y <= 100000;\n\n\n\n\nloop invariant i6: x % 3 == 0 ==> x % 3 == 0;\nloop invariant i7: x % 3 == 1 ==> x % 3 == 1;\nloop invariant i8: x % 3 == 2 ==> x % 3 == 2;\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= 0;\nloop invariant (x % 3 == 1) ==> (x + 2 >= 0);\nloop invariant (x % 3 == 2) ==> (x + 1 >= 0);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 4 >= 0);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 5 >= 0);\nloop invariant (x % 3 == 1) ==> (x + 2 <= 2147483647);\nloop invariant (x % 3 == 2) ==> (x + 1 <= 2147483647);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 4 <= 2147483647);\nloop invariant (x % 3 != 1 && x % 3 != 2) ==> (x + 5 <= 2147483647);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant x % 3 != 1 && x % 3 != 2 ==> (x % 3 != 1 && x % 3 != 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\nloop invariant y == 0 ==> (y == 0);\nloop invariant y == 1 ==> (y == 1);\nloop invariant x % 3 == 0 ==> (x % 3 == 0);\nloop invariant x % 3 == 1 ==> (x % 3 == 1);\nloop invariant x % 3 == 2 ==> (x % 3 == 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= y <= 1;\nloop invariant i2: x >= 0;\nloop invariant i3: (x % 3 == 1) ==> (x + 2 >= 0);\nloop invariant i4: (x % 3 == 2) ==> (x + 1 >= 0);\nloop invariant i5: (x % 3 != 1 && x % 3 != 2) ==> (x + 4 >= 0);\nloop invariant i6: (x % 3 != 1 && x % 3 != 2) ==> (x + 5 >= 0);\n\n\n\n\nloop invariant i11: x % 3 == 0 ==> (x % 3 == 0);\nloop invariant i12: x % 3 == 1 ==> (x % 3 == 1);\nloop invariant i13: x % 3 == 2 ==> (x % 3 == 2);\nloop invariant i14: y == 0 ==> (y == 0);\nloop invariant i15: y == 1 ==> (y == 1);\nloop invariant i16: x % 3 != 1 && x % 3 != 2 ==> (x % 3 != 1 && x % 3 != 2);\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= UINT_MAX;\nloop invariant 0 <= y <= 2;\nloop invariant y = 1 ==> (x % 3 != 1);\nloop invariant y = 1 ==> (x % 3 != 2);\nloop invariant (x % 3 == 1 && x <= UINT_MAX - 2) ==> (x + 2 <= UINT_MAX);\nloop invariant (x % 3 == 1 && x <= UINT_MAX - 2) ==> (y <= 1);\nloop invariant (x % 3 == 2 && x <= UINT_MAX - 1) ==> (x + 1 <= UINT_MAX);\nloop invariant (x % 3 == 2 && x <= UINT_MAX - 1) ==> (y <= 1);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 4) ==> (x + 4 <= UINT_MAX);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 4) ==> (y <= 2);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 5) ==> (x + 5 <= UINT_MAX);\nloop invariant (x % 3 == 0 && x <= UINT_MAX - 5) ==> (y <= 2);\nloop invariant y = 0 ==> (x % 3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= x <= UINT_MAX;\nloop invariant i2: 0 <= y <= 2;\n\n\nloop invariant i5: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (x + 2 <= UINT_MAX);\nloop invariant i6: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (y <= 1);\nloop invariant i7: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (x + 1 <= UINT_MAX);\nloop invariant i8: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (y <= 1);\nloop invariant i9: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (x + 4 <= UINT_MAX);\nloop invariant i10: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (y <= 2);\nloop invariant i11: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (x + 5 <= UINT_MAX);\nloop invariant i12: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (y <= 2);\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5 * (unknown_int() + 1);\nloop invariant 0 <= y <= 1;\nloop invariant (x == 0 ==> y == 0);\nloop invariant (x == 1 ==> y == 0);\nloop invariant (x == 2 ==> y == 0);\nloop invariant (x == 3 ==> y == 0);\nloop invariant (x == 4 ==> y == 1);\nloop invariant (x == 5 ==> y == 1);\nloop invariant (x == 6 ==> y == 1);\nloop invariant (x == 7 ==> y == 1);\nloop invariant (x == 8 ==> y == 1);\nloop invariant (x == 9 ==> y == 1);\nloop invariant (x == 10 ==> y == 1);\nloop invariant (x == 11 ==> y == 1);\nloop invariant (x == 12 ==> y == 1);\nloop invariant (x == 13 ==> y == 1);\nloop invariant (x == 14 ==> y == 1);\nloop invariant (x == 15 ==> y == 1);\nloop invariant (x == 16 ==> y == 1);\nloop invariant (x == 17 ==> y == 1);\nloop invariant (x == 18 ==> y == 1);\nloop invariant (x == 19 ==> y == 1);\nloop invariant (x == 20 ==> y == 1);\nloop invariant (x == 21 ==> y == 1);\nloop invariant (x == 22 ==> y == 1);\nloop invariant (x == 23 ==> y == 1);\nloop invariant (x == 24 ==> y == 1);\nloop invariant (x == 25 ==> y == 1);\nloop invariant (x == 26 ==> y == 1);\nloop invariant (x == 27 ==> y == 1);\nloop invariant (x == 28 ==> y == 1);\nloop invariant (x == 29 ==> y == 1);\nloop invariant (x == 30 ==> y == 1);\nloop invariant (x == 31 ==> y == 1);\nloop invariant (x == 32 ==> y == 1);\nloop invariant (x == 33 ==> y == 1);\nloop invariant (x == 34 ==> y == 1);\nloop invariant (x == 35 ==> y == 1);\nloop invariant (x == 36 ==> y == 1);\nloop invariant (x == 37 ==> y == 1);\nloop invariant (x == 38 ==> y == 1);\nloop invariant (x == 39 ==> y == 1);\nloop invariant (x == 40 ==> y == 1);\nloop invariant (x == 41 ==> y == 1);\nloop invariant (x == 42 ==> y == 1);\nloop invariant (x == 43 ==> y == 1);\nloop invariant (x == 44 ==> y == 1);\nloop invariant (x == 45 ==> y == 1);\nloop invariant (x == 46 ==> y == 1);\nloop invariant (x == 47 ==> y == 1);\nloop invariant (x == 48 ==> y == 1);\nloop invariant (x == 49 ==> y == 1);\nloop invariant (x == 50 ==> y == 1);\nloop invariant (x == 51 ==> y == 1);\nloop invariant (x == 52 ==> y == 1);\nloop invariant (x == 53 ==> y == 1);\nloop invariant (x == 54 ==> y == 1);\nloop invariant (x == 55 ==> y == 1);\nloop invariant (x == 56 ==> y == 1);\nloop invariant (x == 57 ==> y == 1);\nloop invariant (x == 58 ==> y == 1);\nloop invariant (x == 59 ==> y == 1);\nloop invariant (x == 60 ==> y == 1);\nloop invariant (x == 61 ==> y == 1);\nloop invariant (x == 62 ==> y == 1);\nloop invariant (x == 63 ==> y == 1);\nloop invariant (x == 64 ==> y == 1);\nloop invariant (x == 65 ==> y == 1);\nloop invariant (x == 66 ==> y == 1);\nloop invariant (x == 67 ==> y == 1);\nloop invariant (x == 68 ==> y == 1);\nloop invariant (x == 69 ==> y == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: 0 <= y <= 1;\n\n\n\n\nloop invariant i7: (x == 4 ==> y == 1);\nloop invariant i8: (x == 5 ==> y == 1);\n\nloop invariant i10: (x == 7 ==> y == 1);\nloop invariant i11: (x == 8 ==> y == 1);\n\nloop invariant i13: (x == 10 ==> y == 1);\nloop invariant i14: (x == 11 ==> y == 1);\n\nloop invariant i16: (x == 13 ==> y == 1);\nloop invariant i17: (x == 14 ==> y == 1);\n\nloop invariant i19: (x == 16 ==> y == 1);\nloop invariant i20: (x == 17 ==> y == 1);\n\nloop invariant i22: (x == 19 ==> y == 1);\nloop invariant i23: (x == 20 ==> y == 1);\n\nloop invariant i25: (x == 22 ==> y == 1);\nloop invariant i26: (x == 23 ==> y == 1);\n\nloop invariant i28: (x == 25 ==> y == 1);\nloop invariant i29: (x == 26 ==> y == 1);\n\nloop invariant i31: (x == 28 ==> y == 1);\nloop invariant i32: (x == 29 ==> y == 1);\n\nloop invariant i34: (x == 31 ==> y == 1);\nloop invariant i35: (x == 32 ==> y == 1);\n\nloop invariant i37: (x == 34 ==> y == 1);\nloop invariant i38: (x == 35 ==> y == 1);\n\nloop invariant i40: (x == 37 ==> y == 1);\nloop invariant i41: (x == 38 ==> y == 1);\n\nloop invariant i43: (x == 40 ==> y == 1);\nloop invariant i44: (x == 41 ==> y == 1);\n\nloop invariant i46: (x == 43 ==> y == 1);\nloop invariant i47: (x == 44 ==> y == 1);\n\nloop invariant i49: (x == 46 ==> y == 1);\nloop invariant i50: (x == 47 ==> y == 1);\n\nloop invariant i52: (x == 49 ==> y == 1);\nloop invariant i53: (x == 50 ==> y == 1);\n\nloop invariant i55: (x == 52 ==> y == 1);\nloop invariant i56: (x == 53 ==> y == 1);\n\nloop invariant i58: (x == 55 ==> y == 1);\nloop invariant i59: (x == 56 ==> y == 1);\n\nloop invariant i61: (x == 58 ==> y == 1);\nloop invariant i62: (x == 59 ==> y == 1);\n\nloop invariant i64: (x == 61 ==> y == 1);\nloop invariant i65: (x == 62 ==> y == 1);\n\nloop invariant i67: (x == 64 ==> y == 1);\nloop invariant i68: (x == 65 ==> y == 1);\n\nloop invariant i70: (x == 67 ==> y == 1);\nloop invariant i71: (x == 68 ==> y == 1);\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 57,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2;\nloop invariant y <= 2;\nloop invariant x <= 4;\nloop invariant y <= 4;\nloop invariant x <= 5;\nloop invariant y <= 5;\nloop invariant x <= 10;\nloop invariant y <= 10;\nloop invariant x <= 20;\nloop invariant y <= 20;\nloop invariant x <= 30;\nloop invariant y <= 30;\nloop invariant x <= 40;\nloop invariant y <= 40;\nloop invariant x <= 50;\nloop invariant y <= 50;\nloop invariant x <= 60;\nloop invariant y <= 60;\nloop invariant x <= 70;\nloop invariant y <= 70;\nloop invariant x <= 80;\nloop invariant y <= 80;\nloop invariant x <= 90;\nloop invariant y <= 90;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x <= 110;\nloop invariant y <= 110;\nloop invariant x <= 120;\nloop invariant y <= 120;\nloop invariant x <= 130;\nloop invariant y <= 130;\nloop invariant x <= 140;\nloop invariant y <= 140;\nloop invariant x <= 150;\nloop invariant y <= 150;\nloop invariant x <= 160;\nloop invariant y <= 160;\nloop invariant x <= 170;\nloop invariant y <= 170;\nloop invariant x <= 180;\nloop invariant y <= 180;\nloop invariant x <= 190;\nloop invariant y <= 190;\nloop invariant x <= 200;\nloop invariant y <= 200;\nloop invariant x <= 210;\nloop invariant y <= 210;\nloop invariant x <= 220;\nloop invariant y <= 220;\nloop invariant x <= 230;\nloop invariant y <= 230;\nloop invariant x <= 240;\nloop invariant y <= 240;\nloop invariant x <= 250;\nloop invariant y <= 250;\nloop invariant x <= 260;\nloop invariant y <= 260;\nloop invariant x <= 270;\nloop invariant y <= 270;\nloop invariant x <= 280;\nloop invariant y <= 280;\nloop invariant x <= 290;\nloop invariant y <= 290;\nloop invariant x <= 300;\nloop invariant y <= 300;\nloop invariant x <= 310;\nloop invariant y <= 310;\nloop invariant x <= 320;\nloop invariant y <= 320;\nloop invariant x <= 330;\nloop invariant y <= 330;\nloop invariant x <= 340;\nloop invariant y <= 340;\nloop invariant x <= 350;\nloop invariant y <= 350;\nloop invariant x <= 360;\nloop invariant y <= 360;\nloop invariant x <= 370;\nloop invariant y <= 370;\nloop invariant x <= 380;\nloop invariant y <= 380;\nloop invariant x <= 390;\nloop invariant y <= 390;\nloop invariant x <= 400;\nloop invariant y <= 400;\nloop invariant x <= 410;\nloop invariant y <= 410;\nloop invariant x <= 420;\nloop invariant y <= 420;\nloop invariant x <= 430;\nloop invariant y <= 430;\nloop invariant x <= 440;\nloop invariant y <= 440;\nloop invariant x <= 450;\nloop invariant y <= 450;\nloop invariant x <= 460;\nloop invariant y <= 460;\nloop invariant x <= 470;\nloop invariant y <= 470;\nloop invariant x <= 480;\nloop invariant y <= 480;\nloop invariant x <= 490;\nloop invariant y <= 490;\nloop invariant x <= 500;\nloop invariant y <= 500;\nloop invariant x <= 510;\nloop invariant y <= 510;\nloop invariant x <= 520;\nloop invariant y <= 520;\nloop invariant x <= 530;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\n\nloop invariant i6: y <= 2;\n\nloop invariant i8: y <= 4;\n\nloop invariant i10: y <= 5;\n\nloop invariant i12: y <= 10;\n\nloop invariant i14: y <= 20;\n\nloop invariant i16: y <= 30;\n\nloop invariant i18: y <= 40;\n\nloop invariant i20: y <= 50;\n\nloop invariant i22: y <= 60;\n\nloop invariant i24: y <= 70;\n\nloop invariant i26: y <= 80;\n\nloop invariant i28: y <= 90;\n\nloop invariant i30: y <= 100;\n\nloop invariant i32: y <= 110;\n\nloop invariant i34: y <= 120;\n\nloop invariant i36: y <= 130;\n\nloop invariant i38: y <= 140;\n\nloop invariant i40: y <= 150;\n\nloop invariant i42: y <= 160;\n\nloop invariant i44: y <= 170;\n\nloop invariant i46: y <= 180;\n\nloop invariant i48: y <= 190;\n\nloop invariant i50: y <= 200;\n\nloop invariant i52: y <= 210;\n\nloop invariant i54: y <= 220;\n\nloop invariant i56: y <= 230;\n\nloop invariant i58: y <= 240;\n\nloop invariant i60: y <= 250;\n\nloop invariant i62: y <= 260;\n\nloop invariant i64: y <= 270;\n\nloop invariant i66: y <= 280;\n\nloop invariant i68: y <= 290;\n\nloop invariant i70: y <= 300;\n\nloop invariant i72: y <= 310;\n\nloop invariant i74: y <= 320;\n\nloop invariant i76: y <= 330;\n\nloop invariant i78: y <= 340;\n\nloop invariant i80: y <= 350;\n\nloop invariant i82: y <= 360;\n\nloop invariant i84: y <= 370;\n\nloop invariant i86: y <= 380;\n\nloop invariant i88: y <= 390;\n\nloop invariant i90: y <= 400;\n\nloop invariant i92: y <= 410;\n\nloop invariant i94: y <= 420;\n\nloop invariant i96: y <= 430;\n\nloop invariant i98: y <= 440;\n\nloop invariant i100: y <= 450;\n\nloop invariant i102: y <= 460;\n\nloop invariant i104: y <= 470;\n\nloop invariant i106: y <= 480;\n\nloop invariant i108: y <= 490;\n\nloop invariant i110: y <= 500;\n\nloop invariant i112: y <= 510;\n\nloop invariant i114: y <= 520;\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 1;\nloop invariant x % 3 != 1 ==> x % 3 == 0;\nloop invariant x % 3 != 2 ==> x % 3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: 0 <= y <= 1;\n\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3 ==> y == 0;\nloop invariant 1 <= x;\nloop invariant y == 0;\nloop invariant x % 3 == 0 ==> y == 0;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant x % 3 == 0 ==> x >= 3 * (x % 3) + 3 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\n\n\nloop invariant i4: x % 3 == 0 ==> x >= 3 * (x % 3);\n\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant 0 <= y <= 1;\nloop invariant x % 3 == 0 ==> y == 1;\nloop invariant x % 3 != 0 ==> y == 0;\nloop invariant x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 0 ==> x >= 3;\nloop invariant x % 3 != 0 ==> x >= 1;\nloop invariant x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x >= 2;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x >= 2;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x >= 3;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x >= 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x >= 1;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant x % 3 == 1 ==> x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: 0 <= y <= 1;\n\n\n\nloop invariant i6: x % 3 == 2 ==> x >= 2;\n\nloop invariant i8: x % 3 != 0 ==> x >= 1;\nloop invariant i9: x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i10: x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i11: x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant i12: x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i13: x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\n\n\n\nloop invariant i17: x % 3 == 0 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i18: x % 3 == 2 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i19: x % 3 == 1 ==> x % 3 == 2 ==> x >= 2;\nloop invariant i20: x % 3 == 2 ==> x % 3 == 2 ==> x >= 2;\n\nloop invariant i22: x % 3 == 1 ==> x % 3 == 1 ==> x >= 1;\nloop invariant i23: x % 3 == 2 ==> x % 3 == 2 ==> x >= 1;\nloop invariant i24: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i25: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i26: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i27: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i28: x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\n\nloop invariant i30: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i31: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i32: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i33: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\n\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= y <= 100000;\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x is non-negative;\nloop invariant 0 <= y <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: 0 <= y <= 1;\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 8192;\nloop invariant y == 0 || y == 1;\nloop invariant y == 0 ==> x % 3 == 0;\nloop invariant y == 1 ==> x % 3 != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: y == 0 || y == 1;\nloop invariant i3: y == 0 ==> x % 3 == 0;\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 14: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\nloop invariant i1: 0 <= x <= y; loop invariant x % 3 == y % 3; loop invariant if (y == 0) then (x % 3 == 0); loop invariant if (y == 1) then (x % 3 == 1 || x % 3 == 2); loop invariant if (y == 2) then (x % 3 == 2);\nloop invariant i2: 0 <= y <= 100000;\nloop invariant i3: x >= (1 + (y - 1) * y / 2);\nloop invariant i4: x % 3 == 0 ==> y == 0;\nloop invariant i5: x % 3 == 1 ==> y == 0;\nloop invariant i6: x % 3 == 2 ==> y == 0;\nloop invariant i7: x % 3 == 0 ==> x % 3 == 0;\nloop invariant i8: x % 3 == 1 ==> x % 3 == 1;\nloop invariant i9: x % 3 == 2 ==> x % 3 == 2;\nloop invariant i10: 0 <= y <= 1;\nloop invariant i11: x >= 0;\nloop invariant i12: (x % 3 == 1) ==> (x + 2 >= 0);\nloop invariant i13: (x % 3 == 2) ==> (x + 1 >= 0);\nloop invariant i14: (x % 3 != 1 && x % 3 != 2) ==> (x + 4 >= 0);\nloop invariant i15: (x % 3 != 1 && x % 3 != 2) ==> (x + 5 >= 0);\nloop invariant i16: (x % 3 == 1) ==> (x + 2 <= 2147483647);\nloop invariant i17: (x % 3 == 2) ==> (x + 1 <= 2147483647);\nloop invariant i18: (x % 3 != 1 && x % 3 != 2) ==> (x + 4 <= 2147483647);\nloop invariant i19: (x % 3 != 1 && x % 3 != 2) ==> (x + 5 <= 2147483647);\nloop invariant i20: x % 3 == 0 ==> (x % 3 == 0);\nloop invariant i21: x % 3 == 1 ==> (x % 3 == 1);\nloop invariant i22: x % 3 == 2 ==> (x % 3 == 2);\nloop invariant i23: y == 0 ==> (y == 0);\nloop invariant i24: y == 1 ==> (y == 1);\nloop invariant i25: x % 3 != 1 && x % 3 != 2 ==> (x % 3 != 1 && x % 3 != 2);\nloop invariant i26: 0 <= x <= UINT_MAX;\nloop invariant i27: 0 <= y <= 2;\nloop invariant i28: y = 1 ==> (x % 3 != 1);\nloop invariant i29: y = 1 ==> (x % 3 != 2);\nloop invariant i30: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (x + 2 <= UINT_MAX);\nloop invariant i31: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (y <= 1);\nloop invariant i32: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (x + 1 <= UINT_MAX);\nloop invariant i33: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (y <= 1);\nloop invariant i34: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (x + 4 <= UINT_MAX);\nloop invariant i35: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (y <= 2);\nloop invariant i36: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (x + 5 <= UINT_MAX);\nloop invariant i37: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (y <= 2);\nloop invariant i38: y = 0 ==> (x % 3 == 0);\nloop invariant i39: 0 <= x <= 5 * (unknown_int() + 1);\nloop invariant i40: (x == 0 ==> y == 0);\nloop invariant i41: (x == 1 ==> y == 0);\nloop invariant i42: (x == 2 ==> y == 0);\nloop invariant i43: (x == 3 ==> y == 0);\nloop invariant i44: (x == 4 ==> y == 1);\nloop invariant i45: (x == 5 ==> y == 1);\nloop invariant i46: (x == 6 ==> y == 1);\nloop invariant i47: (x == 7 ==> y == 1);\nloop invariant i48: (x == 8 ==> y == 1);\nloop invariant i49: (x == 9 ==> y == 1);\nloop invariant i50: (x == 10 ==> y == 1);\nloop invariant i51: (x == 11 ==> y == 1);\nloop invariant i52: (x == 12 ==> y == 1);\nloop invariant i53: (x == 13 ==> y == 1);\nloop invariant i54: (x == 14 ==> y == 1);\nloop invariant i55: (x == 15 ==> y == 1);\nloop invariant i56: (x == 16 ==> y == 1);\nloop invariant i57: (x == 17 ==> y == 1);\nloop invariant i58: (x == 18 ==> y == 1);\nloop invariant i59: (x == 19 ==> y == 1);\nloop invariant i60: (x == 20 ==> y == 1);\nloop invariant i61: (x == 21 ==> y == 1);\nloop invariant i62: (x == 22 ==> y == 1);\nloop invariant i63: (x == 23 ==> y == 1);\nloop invariant i64: (x == 24 ==> y == 1);\nloop invariant i65: (x == 25 ==> y == 1);\nloop invariant i66: (x == 26 ==> y == 1);\nloop invariant i67: (x == 27 ==> y == 1);\nloop invariant i68: (x == 28 ==> y == 1);\nloop invariant i69: (x == 29 ==> y == 1);\nloop invariant i70: (x == 30 ==> y == 1);\nloop invariant i71: (x == 31 ==> y == 1);\nloop invariant i72: (x == 32 ==> y == 1);\nloop invariant i73: (x == 33 ==> y == 1);\nloop invariant i74: (x == 34 ==> y == 1);\nloop invariant i75: (x == 35 ==> y == 1);\nloop invariant i76: (x == 36 ==> y == 1);\nloop invariant i77: (x == 37 ==> y == 1);\nloop invariant i78: (x == 38 ==> y == 1);\nloop invariant i79: (x == 39 ==> y == 1);\nloop invariant i80: (x == 40 ==> y == 1);\nloop invariant i81: (x == 41 ==> y == 1);\nloop invariant i82: (x == 42 ==> y == 1);\nloop invariant i83: (x == 43 ==> y == 1);\nloop invariant i84: (x == 44 ==> y == 1);\nloop invariant i85: (x == 45 ==> y == 1);\nloop invariant i86: (x == 46 ==> y == 1);\nloop invariant i87: (x == 47 ==> y == 1);\nloop invariant i88: (x == 48 ==> y == 1);\nloop invariant i89: (x == 49 ==> y == 1);\nloop invariant i90: (x == 50 ==> y == 1);\nloop invariant i91: (x == 51 ==> y == 1);\nloop invariant i92: (x == 52 ==> y == 1);\nloop invariant i93: (x == 53 ==> y == 1);\nloop invariant i94: (x == 54 ==> y == 1);\nloop invariant i95: (x == 55 ==> y == 1);\nloop invariant i96: (x == 56 ==> y == 1);\nloop invariant i97: (x == 57 ==> y == 1);\nloop invariant i98: (x == 58 ==> y == 1);\nloop invariant i99: (x == 59 ==> y == 1);\nloop invariant i100: (x == 60 ==> y == 1);\nloop invariant i101: (x == 61 ==> y == 1);\nloop invariant i102: (x == 62 ==> y == 1);\nloop invariant i103: (x == 63 ==> y == 1);\nloop invariant i104: (x == 64 ==> y == 1);\nloop invariant i105: (x == 65 ==> y == 1);\nloop invariant i106: (x == 66 ==> y == 1);\nloop invariant i107: (x == 67 ==> y == 1);\nloop invariant i108: (x == 68 ==> y == 1);\nloop invariant i109: (x == 69 ==> y == 1);\nloop invariant i110: 0 <= x;\nloop invariant i111: 0 <= y;\nloop invariant i112: y >= 0;\nloop invariant i113: x <= 2;\nloop invariant i114: y <= 2;\nloop invariant i115: x <= 4;\nloop invariant i116: y <= 4;\nloop invariant i117: x <= 5;\nloop invariant i118: y <= 5;\nloop invariant i119: x <= 10;\nloop invariant i120: y <= 10;\nloop invariant i121: x <= 20;\nloop invariant i122: y <= 20;\nloop invariant i123: x <= 30;\nloop invariant i124: y <= 30;\nloop invariant i125: x <= 40;\nloop invariant i126: y <= 40;\nloop invariant i127: x <= 50;\nloop invariant i128: y <= 50;\nloop invariant i129: x <= 60;\nloop invariant i130: y <= 60;\nloop invariant i131: x <= 70;\nloop invariant i132: y <= 70;\nloop invariant i133: x <= 80;\nloop invariant i134: y <= 80;\nloop invariant i135: x <= 90;\nloop invariant i136: y <= 90;\nloop invariant i137: x <= 100;\nloop invariant i138: y <= 100;\nloop invariant i139: x <= 110;\nloop invariant i140: y <= 110;\nloop invariant i141: x <= 120;\nloop invariant i142: y <= 120;\nloop invariant i143: x <= 130;\nloop invariant i144: y <= 130;\nloop invariant i145: x <= 140;\nloop invariant i146: y <= 140;\nloop invariant i147: x <= 150;\nloop invariant i148: y <= 150;\nloop invariant i149: x <= 160;\nloop invariant i150: y <= 160;\nloop invariant i151: x <= 170;\nloop invariant i152: y <= 170;\nloop invariant i153: x <= 180;\nloop invariant i154: y <= 180;\nloop invariant i155: x <= 190;\nloop invariant i156: y <= 190;\nloop invariant i157: x <= 200;\nloop invariant i158: y <= 200;\nloop invariant i159: x <= 210;\nloop invariant i160: y <= 210;\nloop invariant i161: x <= 220;\nloop invariant i162: y <= 220;\nloop invariant i163: x <= 230;\nloop invariant i164: y <= 230;\nloop invariant i165: x <= 240;\nloop invariant i166: y <= 240;\nloop invariant i167: x <= 250;\nloop invariant i168: y <= 250;\nloop invariant i169: x <= 260;\nloop invariant i170: y <= 260;\nloop invariant i171: x <= 270;\nloop invariant i172: y <= 270;\nloop invariant i173: x <= 280;\nloop invariant i174: y <= 280;\nloop invariant i175: x <= 290;\nloop invariant i176: y <= 290;\nloop invariant i177: x <= 300;\nloop invariant i178: y <= 300;\nloop invariant i179: x <= 310;\nloop invariant i180: y <= 310;\nloop invariant i181: x <= 320;\nloop invariant i182: y <= 320;\nloop invariant i183: x <= 330;\nloop invariant i184: y <= 330;\nloop invariant i185: x <= 340;\nloop invariant i186: y <= 340;\nloop invariant i187: x <= 350;\nloop invariant i188: y <= 350;\nloop invariant i189: x <= 360;\nloop invariant i190: y <= 360;\nloop invariant i191: x <= 370;\nloop invariant i192: y <= 370;\nloop invariant i193: x <= 380;\nloop invariant i194: y <= 380;\nloop invariant i195: x <= 390;\nloop invariant i196: y <= 390;\nloop invariant i197: x <= 400;\nloop invariant i198: y <= 400;\nloop invariant i199: x <= 410;\nloop invariant i200: y <= 410;\nloop invariant i201: x <= 420;\nloop invariant i202: y <= 420;\nloop invariant i203: x <= 430;\nloop invariant i204: y <= 430;\nloop invariant i205: x <= 440;\nloop invariant i206: y <= 440;\nloop invariant i207: x <= 450;\nloop invariant i208: y <= 450;\nloop invariant i209: x <= 460;\nloop invariant i210: y <= 460;\nloop invariant i211: x <= 470;\nloop invariant i212: y <= 470;\nloop invariant i213: x <= 480;\nloop invariant i214: y <= 480;\nloop invariant i215: x <= 490;\nloop invariant i216: y <= 490;\nloop invariant i217: x <= 500;\nloop invariant i218: y <= 500;\nloop invariant i219: x <= 510;\nloop invariant i220: y <= 510;\nloop invariant i221: x <= 520;\nloop invariant i222: y <= 520;\nloop invariant i223: x <= 530;\nloop invariant i224: 0 <= x <= 2147483647;\nloop invariant i225: x % 3 != 1 ==> x % 3 == 0;\nloop invariant i226: x % 3 != 2 ==> x % 3 == 0;\nloop invariant i227: 1 <= x;\nloop invariant i228: y == 0;\nloop invariant i229: x % 3 == 0 ==> x >= 3 * (x % 3);\nloop invariant i230: x % 3 == 0 ==> x >= 3 * (x % 3) + 3;\nloop invariant i231: x % 3 == 0 ==> x >= 3 * (x % 3) + 3 ==> y == 0;\nloop invariant i232: x >= y;\nloop invariant i233: x % 3 == 0 ==> y == 1;\nloop invariant i234: x % 3 != 0 ==> y == 0;\nloop invariant i235: x % 3 == 1 ==> x >= 2;\nloop invariant i236: x % 3 == 2 ==> x >= 2;\nloop invariant i237: x % 3 == 0 ==> x >= 3;\nloop invariant i238: x % 3 != 0 ==> x >= 1;\nloop invariant i239: x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i240: x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i241: x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant i242: x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i243: x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i244: x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant i245: x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant i246: x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant i247: x % 3 == 0 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i248: x % 3 == 2 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i249: x % 3 == 1 ==> x % 3 == 2 ==> x >= 2;\nloop invariant i250: x % 3 == 2 ==> x % 3 == 2 ==> x >= 2;\nloop invariant i251: x % 3 == 0 ==> x % 3 == 0 ==> x >= 3;\nloop invariant i252: x % 3 == 1 ==> x % 3 == 1 ==> x >= 1;\nloop invariant i253: x % 3 == 2 ==> x % 3 == 2 ==> x >= 1;\nloop invariant i254: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i255: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i256: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i257: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i258: x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant i259: x % 3 == 1 ==> x % 3 == 1 ==> x % 3 == 1 ==> y == 0;\nloop invariant i260: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i261: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i262: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i263: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant i264: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\nloop invariant i265: x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 0 ==> y == 1;\nloop invariant i266: x is non-negative;\nloop invariant i267: 0 <= x <= 8192;\nloop invariant i268: y == 0 || y == 1;\nloop invariant i269: y == 0 ==> x % 3 == 0;\nloop invariant i270: y == 1 ==> x % 3 != 0;\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 65,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int x = unknown_int();\n  unsigned int y = 1;\n  \n  /*@\n\nloop invariant i2: 0 <= y <= 100000;\n\n\n\n\nloop invariant i7: x % 3 == 0 ==> x % 3 == 0;\nloop invariant i8: x % 3 == 1 ==> x % 3 == 1;\nloop invariant i9: x % 3 == 2 ==> x % 3 == 2;\nloop invariant i10: 0 <= y <= 1;\nloop invariant i11: x >= 0;\nloop invariant i12: (x % 3 == 1) ==> (x + 2 >= 0);\nloop invariant i13: (x % 3 == 2) ==> (x + 1 >= 0);\nloop invariant i14: (x % 3 != 1 && x % 3 != 2) ==> (x + 4 >= 0);\nloop invariant i15: (x % 3 != 1 && x % 3 != 2) ==> (x + 5 >= 0);\n\n\n\n\nloop invariant i20: x % 3 == 0 ==> (x % 3 == 0);\nloop invariant i21: x % 3 == 1 ==> (x % 3 == 1);\nloop invariant i22: x % 3 == 2 ==> (x % 3 == 2);\nloop invariant i23: y == 0 ==> (y == 0);\nloop invariant i24: y == 1 ==> (y == 1);\nloop invariant i25: x % 3 != 1 && x % 3 != 2 ==> (x % 3 != 1 && x % 3 != 2);\nloop invariant i26: 0 <= x <= UINT_MAX;\nloop invariant i27: 0 <= y <= 2;\n\n\nloop invariant i30: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (x + 2 <= UINT_MAX);\nloop invariant i31: (x % 3 == 1 && x <= UINT_MAX - 2) ==> (y <= 1);\nloop invariant i32: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (x + 1 <= UINT_MAX);\nloop invariant i33: (x % 3 == 2 && x <= UINT_MAX - 1) ==> (y <= 1);\nloop invariant i34: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (x + 4 <= UINT_MAX);\nloop invariant i35: (x % 3 == 0 && x <= UINT_MAX - 4) ==> (y <= 2);\nloop invariant i36: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (x + 5 <= UINT_MAX);\nloop invariant i37: (x % 3 == 0 && x <= UINT_MAX - 5) ==> (y <= 2);\n\n\n\n\n\n\nloop invariant i44: (x == 4 ==> y == 1);\nloop invariant i45: (x == 5 ==> y == 1);\n\nloop invariant i47: (x == 7 ==> y == 1);\nloop invariant i48: (x == 8 ==> y == 1);\n\nloop invariant i50: (x == 10 ==> y == 1);\nloop invariant i51: (x == 11 ==> y == 1);\n\nloop invariant i53: (x == 13 ==> y == 1);\nloop invariant i54: (x == 14 ==> y == 1);\n\nloop invariant i56: (x == 16 ==> y == 1);\nloop invariant i57: (x == 17 ==> y == 1);\n\nloop invariant i59: (x == 19 ==> y == 1);\nloop invariant i60: (x == 20 ==> y == 1);\n\nloop invariant i62: (x == 22 ==> y == 1);\nloop invariant i63: (x == 23 ==> y == 1);\n\nloop invariant i65: (x == 25 ==> y == 1);\nloop invariant i66: (x == 26 ==> y == 1);\n\nloop invariant i68: (x == 28 ==> y == 1);\nloop invariant i69: (x == 29 ==> y == 1);\n\nloop invariant i71: (x == 31 ==> y == 1);\nloop invariant i72: (x == 32 ==> y == 1);\n\nloop invariant i74: (x == 34 ==> y == 1);\nloop invariant i75: (x == 35 ==> y == 1);\n\nloop invariant i77: (x == 37 ==> y == 1);\nloop invariant i78: (x == 38 ==> y == 1);\n\nloop invariant i80: (x == 40 ==> y == 1);\nloop invariant i81: (x == 41 ==> y == 1);\n\nloop invariant i83: (x == 43 ==> y == 1);\nloop invariant i84: (x == 44 ==> y == 1);\n\nloop invariant i86: (x == 46 ==> y == 1);\nloop invariant i87: (x == 47 ==> y == 1);\n\nloop invariant i89: (x == 49 ==> y == 1);\nloop invariant i90: (x == 50 ==> y == 1);\n\nloop invariant i92: (x == 52 ==> y == 1);\nloop invariant i93: (x == 53 ==> y == 1);\n\nloop invariant i95: (x == 55 ==> y == 1);\nloop invariant i96: (x == 56 ==> y == 1);\n\nloop invariant i98: (x == 58 ==> y == 1);\nloop invariant i99: (x == 59 ==> y == 1);\n\nloop invariant i101: (x == 61 ==> y == 1);\nloop invariant i102: (x == 62 ==> y == 1);\n\nloop invariant i104: (x == 64 ==> y == 1);\nloop invariant i105: (x == 65 ==> y == 1);\n\nloop invariant i107: (x == 67 ==> y == 1);\nloop invariant i108: (x == 68 ==> y == 1);\n\nloop invariant i110: 0 <= x;\nloop invariant i111: 0 <= y;\nloop invariant i112: y >= 0;\n\nloop invariant i114: y <= 2;\n\nloop invariant i116: y <= 4;\n\nloop invariant i118: y <= 5;\n\nloop invariant i120: y <= 10;\n\nloop invariant i122: y <= 20;\n\nloop invariant i124: y <= 30;\n\nloop invariant i126: y <= 40;\n\nloop invariant i128: y <= 50;\n\nloop invariant i130: y <= 60;\n\nloop invariant i132: y <= 70;\n\nloop invariant i134: y <= 80;\n\nloop invariant i136: y <= 90;\n\nloop invariant i138: y <= 100;\n\nloop invariant i140: y <= 110;\n\nloop invariant i142: y <= 120;\n\nloop invariant i144: y <= 130;\n\nloop invariant i146: y <= 140;\n\nloop invariant i148: y <= 150;\n\nloop invariant i150: y <= 160;\n\nloop invariant i152: y <= 170;\n\nloop invariant i154: y <= 180;\n\nloop invariant i156: y <= 190;\n\nloop invariant i158: y <= 200;\n\nloop invariant i160: y <= 210;\n\nloop invariant i162: y <= 220;\n\nloop invariant i164: y <= 230;\n\nloop invariant i166: y <= 240;\n\nloop invariant i168: y <= 250;\n\nloop invariant i170: y <= 260;\n\nloop invariant i172: y <= 270;\n\nloop invariant i174: y <= 280;\n\nloop invariant i176: y <= 290;\n\nloop invariant i178: y <= 300;\n\nloop invariant i180: y <= 310;\n\nloop invariant i182: y <= 320;\n\nloop invariant i184: y <= 330;\n\nloop invariant i186: y <= 340;\n\nloop invariant i188: y <= 350;\n\nloop invariant i190: y <= 360;\n\nloop invariant i192: y <= 370;\n\nloop invariant i194: y <= 380;\n\nloop invariant i196: y <= 390;\n\nloop invariant i198: y <= 400;\n\nloop invariant i200: y <= 410;\n\nloop invariant i202: y <= 420;\n\nloop invariant i204: y <= 430;\n\nloop invariant i206: y <= 440;\n\nloop invariant i208: y <= 450;\n\nloop invariant i210: y <= 460;\n\nloop invariant i212: y <= 470;\n\nloop invariant i214: y <= 480;\n\nloop invariant i216: y <= 490;\n\nloop invariant i218: y <= 500;\n\nloop invariant i220: y <= 510;\n\nloop invariant i222: y <= 520;\n\n\n\n\n\n\nloop invariant i229: x % 3 == 0 ==> x >= 3 * (x % 3);\n\n\n\n\n\n\nloop invariant i236: x % 3 == 2 ==> x >= 2;\n\nloop invariant i238: x % 3 != 0 ==> x >= 1;\nloop invariant i239: x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i240: x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i241: x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\nloop invariant i242: x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i243: x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\n\n\n\nloop invariant i247: x % 3 == 0 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i248: x % 3 == 2 ==> x % 3 == 1 ==> x >= 2;\nloop invariant i249: x % 3 == 1 ==> x % 3 == 2 ==> x >= 2;\nloop invariant i250: x % 3 == 2 ==> x % 3 == 2 ==> x >= 2;\n\nloop invariant i252: x % 3 == 1 ==> x % 3 == 1 ==> x >= 1;\nloop invariant i253: x % 3 == 2 ==> x % 3 == 2 ==> x >= 1;\nloop invariant i254: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i255: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 0 ==> y == 1;\nloop invariant i256: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i257: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 0 ==> y == 1;\nloop invariant i258: x % 3 == 0 ==> x % 3 == 0 ==> x % 3 == 1 ==> y == 0;\n\nloop invariant i260: x % 3 == 2 ==> x % 3 == 2 ==> x % 3 == 1 ==> y == 0;\nloop invariant i261: x % 3 == 0 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i262: x % 3 == 2 ==> x % 3 == 1 ==> x % 3 == 2 ==> y == 0;\nloop invariant i263: x % 3 == 1 ==> x % 3 == 2 ==> x % 3 == 2 ==> y == 0;\n\n\n\n\nloop invariant i268: y == 0 || y == 1;\nloop invariant i269: y == 0 ==> x % 3 == 0;\n\n*/\nwhile(unknown_int()){\n    if(x % 3 == 1){\n      x += 2; y = 0;}\n    else{\n      if(x % 3 == 2){\n\tx += 1; y = 0;}\n      else{\n\tif(unknown_int()){\n\t  x += 4; y = 1;}\n\telse{\n\t  x += 5; y = 1;}\n      }\n    }\n  }\n  if(y == 0)\n    {;\n//@ assert(x % 3 == 0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 98,
        "success_count": 86,
        "failure_count": 12,
        "success_rate": 0.8775510204081632
    }
}