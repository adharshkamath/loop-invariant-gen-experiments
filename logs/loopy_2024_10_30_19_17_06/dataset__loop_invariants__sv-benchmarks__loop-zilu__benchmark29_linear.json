{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  while (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant 0 <= y <= 100;\nloop invariant x <= y + 99;\nloop invariant x >= y && x <= y + 99 ==> (x == y) || (x > y && x <= y + 99);\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y && x <= y + 99 ==> y >= 0 && y <= 100;\nloop invariant x >= y && x <= y + 99 ==> (y < x) || (y == x);\nloop invariant x >= y && x <= y + 99 ==> y >= x;\nloop invariant x >= y && x <= y + 99 ==> x >= y;\nloop invariant x >= y && x <= y + 99 ==> x <= y + 99;\nloop invariant x >= y && x <= y + 99 ==> y >= 0 && y <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x % 100 == y % 100;\nloop invariant y <= x + 99;\nloop invariant x >= y && x <= y + 99 ==> x % 100 == y % 100;\nloop invariant y <= x + 99 ==> x % 100 == y % 100;\nloop invariant 0 <= x <= y + 99;\nloop invariant x % 100 == y % 100;\nloop invariant y <= x + 99;\nloop invariant x >= y && x <= y + 99 ==> x % 100 == y % 100;\nloop invariant y <= x + 99 ==> x % 100 == y % 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x >= y;\nloop invariant x < y || x == y + 100;\nloop invariant x <= y + 99 || x == y + 100;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y + 99;\nloop invariant 1 <= y;\nloop invariant x >= y + 100 ==> x >= y + 99;\nloop invariant x + 100 <= y + 99 ==> x <= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\nloop invariant y < 99999;\n*/\n```",
            "```\n/*@\nloop invariant x <= y + 99;\nloop invariant x > y - 99;\nloop invariant x >= y;\nloop invariant x <= y + 99 ==> x >= y;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x < y ==> x >= y + 100;\nloop invariant 0 <= x <= y + 99;\nloop invariant x < y ==> x >= y + 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y + 100;\nloop invariant x >= y;\nloop invariant y = y + 1;\nloop invariant x < y implies x + 100 < y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 99;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y <= 99 + x;\nloop invariant x <= y + 99;\nloop invariant x > y - 100;\nloop invariant x <= y + 99 + 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant y <= x + 99;\nloop invariant x <= 2147483647;\nloop invariant y <= 2147483647;\nloop invariant x >= -2147483648;\nloop invariant y >= -2147483648;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y + 99;\nloop invariant x <= y + 100;\nloop invariant y <= y;\nloop invariant x == (y + 100);\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x >= x;\nloop invariant y <= y;\nloop invariant x >= y;\nloop invariant x >= x;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\n*/\n```",
            "```\n/*@\nloop invariant x >= y && x <= y + 99;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100 ==> ... ==> x + 100 + 100 + ... + 100 >= y && x + 100 + 100 + ... + 100 <= y + 100;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant 0 <= y <= 100;\nloop invariant x <= y + 99;\nloop invariant x >= y && x <= y + 99 ==> (x == y) || (x > y && x <= y + 99);\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y && x <= y + 99 ==> y >= 0 && y <= 100;\nloop invariant x >= y && x <= y + 99 ==> (y < x) || (y == x);\nloop invariant x >= y && x <= y + 99 ==> y >= x;\nloop invariant x >= y && x <= y + 99 ==> x >= y;\nloop invariant x >= y && x <= y + 99 ==> x <= y + 99;\nloop invariant x >= y && x <= y + 99 ==> y >= 0 && y <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x <= y + 99;\nloop invariant i4: x >= y && x <= y + 99 ==> (x == y) || (x > y && x <= y + 99);\n\n\n\nloop invariant i8: x >= y && x <= y + 99 ==> (y < x) || (y == x);\n\nloop invariant i10: x >= y && x <= y + 99 ==> x >= y;\nloop invariant i11: x >= y && x <= y + 99 ==> x <= y + 99;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x % 100 == y % 100;\nloop invariant y <= x + 99;\nloop invariant x >= y && x <= y + 99 ==> x % 100 == y % 100;\nloop invariant y <= x + 99 ==> x % 100 == y % 100;\nloop invariant 0 <= x <= y + 99;\nloop invariant x % 100 == y % 100;\nloop invariant y <= x + 99;\nloop invariant x >= y && x <= y + 99 ==> x % 100 == y % 100;\nloop invariant y <= x + 99 ==> x % 100 == y % 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x >= y;\nloop invariant x < y || x == y + 100;\nloop invariant x <= y + 99 || x == y + 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\nloop invariant i4: x <= y + 99 || x == y + 100;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y + 99;\nloop invariant 1 <= y;\nloop invariant x >= y + 100 ==> x >= y + 99;\nloop invariant x + 100 <= y + 99 ==> x <= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\nloop invariant x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant x + 100 <= y + 99 ==> x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x >= y + 100 ==> x >= y + 99;\nloop invariant i4: x + 100 <= y + 99 ==> x <= y;\n\nloop invariant i6: x + 100 <= y + 99 ==> x <= y + 99;\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\nloop invariant x == y ==> (x == y);\nloop invariant x != y ==> (x == y + 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\nloop invariant i4: x <= y + 99;\nloop invariant i5: x == y ==> (x == y);\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\nloop invariant y < 99999;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x <= y + 99;\nloop invariant x > y - 99;\nloop invariant x >= y;\nloop invariant x <= y + 99 ==> x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\nloop invariant i1: x <= y + 99;\n\n\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 99;\nloop invariant x < y ==> x >= y + 100;\nloop invariant 0 <= x <= y + 99;\nloop invariant x < y ==> x >= y + 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y + 100;\nloop invariant x >= y;\nloop invariant y = y + 1;\nloop invariant x < y implies x + 100 < y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 99;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: x <= y + 99;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y <= 99 + x;\nloop invariant x <= y + 99;\nloop invariant x > y - 100;\nloop invariant x <= y + 99 + 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x <= y + 99;\n\nloop invariant i5: x <= y + 99 + 100;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant y <= x + 99;\nloop invariant x <= 2147483647;\nloop invariant y <= 2147483647;\nloop invariant x >= -2147483648;\nloop invariant y >= -2147483648;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\nloop invariant i4: x <= 2147483647;\nloop invariant i5: y <= 2147483647;\nloop invariant i6: x >= -2147483648;\nloop invariant i7: y >= -2147483648;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y + 99;\nloop invariant x <= y + 100;\nloop invariant y <= y;\nloop invariant x == (y + 100);\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x >= x;\nloop invariant y <= y;\nloop invariant x >= y;\nloop invariant x >= x;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x <= y + 99;\nloop invariant x >= y;\nloop invariant x <= y + 99;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\nloop invariant i2: x <= y + 99;\nloop invariant i3: x <= y + 100;\nloop invariant i4: y <= y;\n\n\n\nloop invariant i8: x >= x;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= y && x <= y + 99;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100;\nloop invariant x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100 ==> ... ==> x + 100 + 100 + ... + 100 >= y && x + 100 + 100 + ... + 100 <= y + 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100;\nloop invariant i4: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100;\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 54: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y + 99;\nloop invariant i2: 0 <= y <= 100;\nloop invariant i3: x <= y + 99;\nloop invariant i4: x >= y && x <= y + 99 ==> (x == y) || (x > y && x <= y + 99);\nloop invariant i5: y >= 0;\nloop invariant i6: x >= 0;\nloop invariant i7: x >= y && x <= y + 99 ==> y >= 0 && y <= 100;\nloop invariant i8: x >= y && x <= y + 99 ==> (y < x) || (y == x);\nloop invariant i9: x >= y && x <= y + 99 ==> y >= x;\nloop invariant i10: x >= y && x <= y + 99 ==> x >= y;\nloop invariant i11: x >= y && x <= y + 99 ==> x <= y + 99;\nloop invariant i12: x % 100 == y % 100;\nloop invariant i13: y <= x + 99;\nloop invariant i14: x >= y && x <= y + 99 ==> x % 100 == y % 100;\nloop invariant i15: y <= x + 99 ==> x % 100 == y % 100;\nloop invariant i16: x >= y;\nloop invariant i17: x < y || x == y + 100;\nloop invariant i18: x <= y + 99 || x == y + 100;\nloop invariant i19: 1 <= x <= y + 99;\nloop invariant i20: 1 <= y;\nloop invariant i21: x >= y + 100 ==> x >= y + 99;\nloop invariant i22: x + 100 <= y + 99 ==> x <= y;\nloop invariant i23: x + 100 <= y + 99 ==> x >= y + 100;\nloop invariant i24: x + 100 <= y + 99 ==> x <= y + 99;\nloop invariant i25: x + 100 <= y + 99 ==> x >= y;\nloop invariant i26: 0 <= x <= 2147483647;\nloop invariant i27: 0 <= y <= 2147483647;\nloop invariant i28: x == y ==> (x == y);\nloop invariant i29: x != y ==> (x == y + 100);\nloop invariant i30: 0 <= x;\nloop invariant i31: x < y;\nloop invariant i32: y < 99999;\nloop invariant i33: x > y - 99;\nloop invariant i34: x <= y + 99 ==> x >= y;\nloop invariant i35: x < y ==> x >= y + 100;\nloop invariant i36: 0 <= x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100; loop invariant x <= y + 99; loop invariant x >= y; loop invariant y <= x + 100; loop invariant x <= y + 100;\nloop invariant i37: 0 <= y <= 100000;\nloop invariant i38: x >= y + 100;\nloop invariant i39: y = y + 1;\nloop invariant i40: x < y implies x + 100 < y + 1;\nloop invariant i41: 1 <= x <= y;\nloop invariant i42: y <= 99 + x;\nloop invariant i43: x > y - 100;\nloop invariant i44: x <= y + 99 + 100;\nloop invariant i45: x <= y;\nloop invariant i46: x <= 2147483647;\nloop invariant i47: y <= 2147483647;\nloop invariant i48: x >= -2147483648;\nloop invariant i49: y >= -2147483648;\nloop invariant i50: x <= y + 100;\nloop invariant i51: y <= y;\nloop invariant i52: x == (y + 100);\nloop invariant i53: x >= x;\nloop invariant i54: x >= y && x <= y + 99;\nloop invariant i55: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100;\nloop invariant i56: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100;\nloop invariant i57: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100;\nloop invariant i58: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100 ==> ... ==> x + 100 + 100 + ... + 100 >= y && x + 100 + 100 + ... + 100 <= y + 100;\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 19,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x <= y + 99;\nloop invariant i4: x >= y && x <= y + 99 ==> (x == y) || (x > y && x <= y + 99);\n\n\n\nloop invariant i8: x >= y && x <= y + 99 ==> (y < x) || (y == x);\n\nloop invariant i10: x >= y && x <= y + 99 ==> x >= y;\nloop invariant i11: x >= y && x <= y + 99 ==> x <= y + 99;\n\n\n\n\n\n\nloop invariant i18: x <= y + 99 || x == y + 100;\n\n\nloop invariant i21: x >= y + 100 ==> x >= y + 99;\nloop invariant i22: x + 100 <= y + 99 ==> x <= y;\n\nloop invariant i24: x + 100 <= y + 99 ==> x <= y + 99;\n\n\n\nloop invariant i28: x == y ==> (x == y);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i44: x <= y + 99 + 100;\n\nloop invariant i46: x <= 2147483647;\nloop invariant i47: y <= 2147483647;\nloop invariant i48: x >= -2147483648;\nloop invariant i49: y >= -2147483648;\nloop invariant i50: x <= y + 100;\nloop invariant i51: y <= y;\n\nloop invariant i53: x >= x;\n\n\nloop invariant i56: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100;\nloop invariant i57: x > y && x <= y + 100 ==> x + 100 >= y && x + 100 <= y + 100 ==> x + 100 + 100 >= y && x + 100 + 100 <= y + 100 ==> x + 100 + 100 + 100 >= y && x + 100 + 100 + 100 <= y + 100;\n\n*/\nwhile (x<y) {\n    x=x+100;\n  }\n  {;\n//@ assert(x >= y && x <= y + 99);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "skipped": [],
        "total": 148,
        "success_count": 128,
        "failure_count": 20,
        "success_rate": 0.8648648648648649
    }
}