{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\tfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6 ==> a == 6;\nloop invariant a < 6 ==> 0 <= a < 6;\nloop invariant a < 6 ==> a + 1 == a + 1;\nloop invariant a < 6 ==> a + 1 < 6;\nloop invariant a < 6 ==> a < 7;\nloop invariant a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6 ==> a == 6;\nloop invariant a >= 6 ==> a >= 0;\nloop invariant a >= 6 ==> a <= 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6;\nloop invariant a == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6 ==> a == 6;\nloop invariant a == 6 ==> a >= 0;\nloop invariant a == 6 ==> a <= 6;\nloop invariant a == 6 ==> a < 6 == false;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 100000 ==> x >= (1 + (99999 * 100000) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6 ==> (1);\nloop invariant a == 6 ==> (2);\nloop invariant a == 6 ==> (3);\nloop invariant a == 6 ==> (4);\nloop invariant a == 6 ==> (5);\nloop invariant a == 6 ==> (6);\nloop invariant a == 6 ==> (7);\nloop invariant a == 6 ==> (8);\nloop invariant a == 6 ==> (9);\nloop invariant a == 6 ==> (10);\nloop invariant a == 6 ==> (11);\nloop invariant a == 6 ==> (12);\nloop invariant a == 6 ==> (13);\nloop invariant a == 6 ==> (14);\nloop invariant a == 6 ==> (15);\nloop invariant a == 6 ==> (16);\nloop invariant a == 6 ==> (17);\nloop invariant a == 6 ==> (18);\nloop invariant a == 6 ==> (19);\nloop invariant a == 6 ==> (20);\nloop invariant a == 6 ==> (21);\nloop invariant a == 6 ==> (22);\nloop invariant a == 6 ==> (23);\nloop invariant a == 6 ==> (24);\nloop invariant a == 6 ==> (25);\nloop invariant a == 6 ==> (26);\nloop invariant a == 6 ==> (27);\nloop invariant a == 6 ==> (28);\nloop invariant a == 6 ==> (29);\nloop invariant a == 6 ==> (30);\nloop invariant a == 6 ==> (31);\nloop invariant a == 6 ==> (32);\nloop invariant a == 6 ==> (33);\nloop invariant a == 6 ==> (34);\nloop invariant a == 6 ==> (35);\nloop invariant a == 6 ==> (36);\nloop invariant a == 6 ==> (37);\nloop invariant a == 6 ==> (38);\nloop invariant a == 6 ==> (39);\nloop invariant a == 6 ==> (40);\nloop invariant a == 6 ==> (41);\nloop invariant a == 6 ==> (42);\nloop invariant a == 6 ==> (43);\nloop invariant a == 6 ==> (44);\nloop invariant a == 6 ==> (45);\nloop invariant a == 6 ==> (46);\nloop invariant a == 6 ==> (47);\nloop invariant a == 6 ==> (48);\nloop invariant a == 6 ==> (49);\nloop invariant a == 6 ==> (50);\nloop invariant a == 6 ==> (51);\nloop invariant a == 6 ==> (52);\nloop invariant a == 6 ==> (53);\nloop invariant a == 6 ==> (54);\nloop invariant a == 6 ==> (55);\nloop invariant a == 6 ==> (56);\nloop invariant a == 6 ==> (57);\nloop invariant a == 6 ==> (58);\nloop invariant a == 6 ==> (59);\nloop invariant a == 6 ==> (60);\nloop invariant a == 6 ==> (61);\nloop invariant a == 6 ==> (62);\nloop invariant a == 6 ==> (63);\nloop invariant a == 6 ==> (64);\nloop invariant a == 6 ==> (65);\nloop invariant a == 6 ==> (66);\nloop invariant a == 6 ==> (67);\nloop invariant a == 6 ==> (68);\nloop invariant a == 6 ==> (69);\nloop invariant a == 6 ==> (70);\nloop invariant a == 6 ==> (71);\nloop invariant a == 6 ==> (72);\nloop invariant a == 6 ==> (73);\nloop invariant a == 6 ==> (74);\nloop invariant a == 6 ==> (75);\nloop invariant a == 6 ==> (76);\nloop invariant a == 6 ==> (77);\nloop invariant a == 6 ==> (78);\nloop invariant a == 6 ==> (79);\nloop invariant a == 6 ==> (80);\nloop invariant a == 6 ==> (81);\nloop invariant a == 6 ==> (82);\nloop invariant a == 6 ==> (83);\nloop invariant a == 6 ==> (84);\nloop invariant a == 6 ==> (85);\nloop invariant a == 6 ==> (86);\nloop invariant a == 6 ==> (87);\nloop invariant a == 6 ==> (88);\nloop invariant a == 6 ==> (89);\nloop invariant a == 6 ==> (90);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant (a == 6) ==> a == 6;\nloop invariant (a < 6) ==> a >= 0 && a < 6 && a <= 5;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6 ==> a == 6;\nloop invariant a < 6 ==> 0 <= a < 6;\nloop invariant a < 6 ==> a + 1 == a + 1;\nloop invariant a < 6 ==> a + 1 < 6;\nloop invariant a < 6 ==> a < 7;\nloop invariant a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a >= 6 ==> a == 6;\nloop invariant i3: a < 6 ==> 0 <= a < 6;\nloop invariant i4: a < 6 ==> a + 1 == a + 1;\n\nloop invariant i6: a < 6 ==> a < 7;\nloop invariant i7: a < 6 ==> a < 6 ==> a < 6;\nloop invariant i8: a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i9: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i10: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i11: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i12: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i13: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i14: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i15: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i16: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i17: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i18: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6 ==> a == 6;\nloop invariant a >= 6 ==> a >= 0;\nloop invariant a >= 6 ==> a <= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a >= 6 ==> a == 6;\nloop invariant i3: a >= 6 ==> a >= 0;\nloop invariant i4: a >= 6 ==> a <= 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a <= 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a <= 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\nloop invariant a <= 6 ==> a == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a >= 6;\nloop invariant a == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6 ==> a == 6;\nloop invariant a == 6 ==> a >= 0;\nloop invariant a == 6 ==> a <= 6;\nloop invariant a == 6 ==> a < 6 == false;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a == 6 ==> a == 6;\nloop invariant i3: a == 6 ==> a >= 0;\nloop invariant i4: a == 6 ==> a <= 6;\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 100000 ==> x >= (1 + (99999 * 100000) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\n\n\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant a == 6 ==> (1);\nloop invariant a == 6 ==> (2);\nloop invariant a == 6 ==> (3);\nloop invariant a == 6 ==> (4);\nloop invariant a == 6 ==> (5);\nloop invariant a == 6 ==> (6);\nloop invariant a == 6 ==> (7);\nloop invariant a == 6 ==> (8);\nloop invariant a == 6 ==> (9);\nloop invariant a == 6 ==> (10);\nloop invariant a == 6 ==> (11);\nloop invariant a == 6 ==> (12);\nloop invariant a == 6 ==> (13);\nloop invariant a == 6 ==> (14);\nloop invariant a == 6 ==> (15);\nloop invariant a == 6 ==> (16);\nloop invariant a == 6 ==> (17);\nloop invariant a == 6 ==> (18);\nloop invariant a == 6 ==> (19);\nloop invariant a == 6 ==> (20);\nloop invariant a == 6 ==> (21);\nloop invariant a == 6 ==> (22);\nloop invariant a == 6 ==> (23);\nloop invariant a == 6 ==> (24);\nloop invariant a == 6 ==> (25);\nloop invariant a == 6 ==> (26);\nloop invariant a == 6 ==> (27);\nloop invariant a == 6 ==> (28);\nloop invariant a == 6 ==> (29);\nloop invariant a == 6 ==> (30);\nloop invariant a == 6 ==> (31);\nloop invariant a == 6 ==> (32);\nloop invariant a == 6 ==> (33);\nloop invariant a == 6 ==> (34);\nloop invariant a == 6 ==> (35);\nloop invariant a == 6 ==> (36);\nloop invariant a == 6 ==> (37);\nloop invariant a == 6 ==> (38);\nloop invariant a == 6 ==> (39);\nloop invariant a == 6 ==> (40);\nloop invariant a == 6 ==> (41);\nloop invariant a == 6 ==> (42);\nloop invariant a == 6 ==> (43);\nloop invariant a == 6 ==> (44);\nloop invariant a == 6 ==> (45);\nloop invariant a == 6 ==> (46);\nloop invariant a == 6 ==> (47);\nloop invariant a == 6 ==> (48);\nloop invariant a == 6 ==> (49);\nloop invariant a == 6 ==> (50);\nloop invariant a == 6 ==> (51);\nloop invariant a == 6 ==> (52);\nloop invariant a == 6 ==> (53);\nloop invariant a == 6 ==> (54);\nloop invariant a == 6 ==> (55);\nloop invariant a == 6 ==> (56);\nloop invariant a == 6 ==> (57);\nloop invariant a == 6 ==> (58);\nloop invariant a == 6 ==> (59);\nloop invariant a == 6 ==> (60);\nloop invariant a == 6 ==> (61);\nloop invariant a == 6 ==> (62);\nloop invariant a == 6 ==> (63);\nloop invariant a == 6 ==> (64);\nloop invariant a == 6 ==> (65);\nloop invariant a == 6 ==> (66);\nloop invariant a == 6 ==> (67);\nloop invariant a == 6 ==> (68);\nloop invariant a == 6 ==> (69);\nloop invariant a == 6 ==> (70);\nloop invariant a == 6 ==> (71);\nloop invariant a == 6 ==> (72);\nloop invariant a == 6 ==> (73);\nloop invariant a == 6 ==> (74);\nloop invariant a == 6 ==> (75);\nloop invariant a == 6 ==> (76);\nloop invariant a == 6 ==> (77);\nloop invariant a == 6 ==> (78);\nloop invariant a == 6 ==> (79);\nloop invariant a == 6 ==> (80);\nloop invariant a == 6 ==> (81);\nloop invariant a == 6 ==> (82);\nloop invariant a == 6 ==> (83);\nloop invariant a == 6 ==> (84);\nloop invariant a == 6 ==> (85);\nloop invariant a == 6 ==> (86);\nloop invariant a == 6 ==> (87);\nloop invariant a == 6 ==> (88);\nloop invariant a == 6 ==> (89);\nloop invariant a == 6 ==> (90);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a == 6 ==> (1);\nloop invariant i3: a == 6 ==> (2);\nloop invariant i4: a == 6 ==> (3);\nloop invariant i5: a == 6 ==> (4);\nloop invariant i6: a == 6 ==> (5);\nloop invariant i7: a == 6 ==> (6);\nloop invariant i8: a == 6 ==> (7);\nloop invariant i9: a == 6 ==> (8);\nloop invariant i10: a == 6 ==> (9);\nloop invariant i11: a == 6 ==> (10);\nloop invariant i12: a == 6 ==> (11);\nloop invariant i13: a == 6 ==> (12);\nloop invariant i14: a == 6 ==> (13);\nloop invariant i15: a == 6 ==> (14);\nloop invariant i16: a == 6 ==> (15);\nloop invariant i17: a == 6 ==> (16);\nloop invariant i18: a == 6 ==> (17);\nloop invariant i19: a == 6 ==> (18);\nloop invariant i20: a == 6 ==> (19);\nloop invariant i21: a == 6 ==> (20);\nloop invariant i22: a == 6 ==> (21);\nloop invariant i23: a == 6 ==> (22);\nloop invariant i24: a == 6 ==> (23);\nloop invariant i25: a == 6 ==> (24);\nloop invariant i26: a == 6 ==> (25);\nloop invariant i27: a == 6 ==> (26);\nloop invariant i28: a == 6 ==> (27);\nloop invariant i29: a == 6 ==> (28);\nloop invariant i30: a == 6 ==> (29);\nloop invariant i31: a == 6 ==> (30);\nloop invariant i32: a == 6 ==> (31);\nloop invariant i33: a == 6 ==> (32);\nloop invariant i34: a == 6 ==> (33);\nloop invariant i35: a == 6 ==> (34);\nloop invariant i36: a == 6 ==> (35);\nloop invariant i37: a == 6 ==> (36);\nloop invariant i38: a == 6 ==> (37);\nloop invariant i39: a == 6 ==> (38);\nloop invariant i40: a == 6 ==> (39);\nloop invariant i41: a == 6 ==> (40);\nloop invariant i42: a == 6 ==> (41);\nloop invariant i43: a == 6 ==> (42);\nloop invariant i44: a == 6 ==> (43);\nloop invariant i45: a == 6 ==> (44);\nloop invariant i46: a == 6 ==> (45);\nloop invariant i47: a == 6 ==> (46);\nloop invariant i48: a == 6 ==> (47);\nloop invariant i49: a == 6 ==> (48);\nloop invariant i50: a == 6 ==> (49);\nloop invariant i51: a == 6 ==> (50);\nloop invariant i52: a == 6 ==> (51);\nloop invariant i53: a == 6 ==> (52);\nloop invariant i54: a == 6 ==> (53);\nloop invariant i55: a == 6 ==> (54);\nloop invariant i56: a == 6 ==> (55);\nloop invariant i57: a == 6 ==> (56);\nloop invariant i58: a == 6 ==> (57);\nloop invariant i59: a == 6 ==> (58);\nloop invariant i60: a == 6 ==> (59);\nloop invariant i61: a == 6 ==> (60);\nloop invariant i62: a == 6 ==> (61);\nloop invariant i63: a == 6 ==> (62);\nloop invariant i64: a == 6 ==> (63);\nloop invariant i65: a == 6 ==> (64);\nloop invariant i66: a == 6 ==> (65);\nloop invariant i67: a == 6 ==> (66);\nloop invariant i68: a == 6 ==> (67);\nloop invariant i69: a == 6 ==> (68);\nloop invariant i70: a == 6 ==> (69);\nloop invariant i71: a == 6 ==> (70);\nloop invariant i72: a == 6 ==> (71);\nloop invariant i73: a == 6 ==> (72);\nloop invariant i74: a == 6 ==> (73);\nloop invariant i75: a == 6 ==> (74);\nloop invariant i76: a == 6 ==> (75);\nloop invariant i77: a == 6 ==> (76);\nloop invariant i78: a == 6 ==> (77);\nloop invariant i79: a == 6 ==> (78);\nloop invariant i80: a == 6 ==> (79);\nloop invariant i81: a == 6 ==> (80);\nloop invariant i82: a == 6 ==> (81);\nloop invariant i83: a == 6 ==> (82);\nloop invariant i84: a == 6 ==> (83);\nloop invariant i85: a == 6 ==> (84);\nloop invariant i86: a == 6 ==> (85);\nloop invariant i87: a == 6 ==> (86);\nloop invariant i88: a == 6 ==> (87);\nloop invariant i89: a == 6 ==> (88);\nloop invariant i90: a == 6 ==> (89);\nloop invariant i91: a == 6 ==> (90);\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 6;\nloop invariant (a == 6) ==> a == 6;\nloop invariant (a < 6) ==> a >= 0 && a < 6 && a <= 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: (a == 6) ==> a == 6;\nloop invariant i3: (a < 6) ==> a >= 0 && a < 6 && a <= 5;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: unbound logic variable false. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a >= 6 ==> a == 6;\nloop invariant i3: a < 6 ==> 0 <= a < 6;\nloop invariant i4: a < 6 ==> a + 1 == a + 1;\nloop invariant i5: a < 6 ==> a + 1 < 6;\nloop invariant i6: a < 6 ==> a < 7;\nloop invariant i7: a < 6 ==> a < 6 ==> a < 6;\nloop invariant i8: a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i9: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i10: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i11: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i12: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i13: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i14: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i15: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i16: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i17: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i18: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i19: a >= 6 ==> a >= 0;\nloop invariant i20: a >= 6 ==> a <= 6;\nloop invariant i21: a == 6;\nloop invariant i22: a <= 6;\nloop invariant i23: a <= 6 ==> a == 6;\nloop invariant i24: a >= 6;\nloop invariant i25: a == 6 ==> a == 6;\nloop invariant i26: a == 6 ==> a >= 0;\nloop invariant i27: a == 6 ==> a <= 6;\nloop invariant i28: a == 6 ==> a < 6 == false;\nloop invariant i29: 0 <= y <= 100000;\nloop invariant i30: x >= (1 + (y - 1) * y / 2);\nloop invariant i31: y >= 100000 ==> x >= (1 + (99999 * 100000) / 2);\nloop invariant i32: a == 6 ==> (1);\nloop invariant i33: a == 6 ==> (2);\nloop invariant i34: a == 6 ==> (3);\nloop invariant i35: a == 6 ==> (4);\nloop invariant i36: a == 6 ==> (5);\nloop invariant i37: a == 6 ==> (6);\nloop invariant i38: a == 6 ==> (7);\nloop invariant i39: a == 6 ==> (8);\nloop invariant i40: a == 6 ==> (9);\nloop invariant i41: a == 6 ==> (10);\nloop invariant i42: a == 6 ==> (11);\nloop invariant i43: a == 6 ==> (12);\nloop invariant i44: a == 6 ==> (13);\nloop invariant i45: a == 6 ==> (14);\nloop invariant i46: a == 6 ==> (15);\nloop invariant i47: a == 6 ==> (16);\nloop invariant i48: a == 6 ==> (17);\nloop invariant i49: a == 6 ==> (18);\nloop invariant i50: a == 6 ==> (19);\nloop invariant i51: a == 6 ==> (20);\nloop invariant i52: a == 6 ==> (21);\nloop invariant i53: a == 6 ==> (22);\nloop invariant i54: a == 6 ==> (23);\nloop invariant i55: a == 6 ==> (24);\nloop invariant i56: a == 6 ==> (25);\nloop invariant i57: a == 6 ==> (26);\nloop invariant i58: a == 6 ==> (27);\nloop invariant i59: a == 6 ==> (28);\nloop invariant i60: a == 6 ==> (29);\nloop invariant i61: a == 6 ==> (30);\nloop invariant i62: a == 6 ==> (31);\nloop invariant i63: a == 6 ==> (32);\nloop invariant i64: a == 6 ==> (33);\nloop invariant i65: a == 6 ==> (34);\nloop invariant i66: a == 6 ==> (35);\nloop invariant i67: a == 6 ==> (36);\nloop invariant i68: a == 6 ==> (37);\nloop invariant i69: a == 6 ==> (38);\nloop invariant i70: a == 6 ==> (39);\nloop invariant i71: a == 6 ==> (40);\nloop invariant i72: a == 6 ==> (41);\nloop invariant i73: a == 6 ==> (42);\nloop invariant i74: a == 6 ==> (43);\nloop invariant i75: a == 6 ==> (44);\nloop invariant i76: a == 6 ==> (45);\nloop invariant i77: a == 6 ==> (46);\nloop invariant i78: a == 6 ==> (47);\nloop invariant i79: a == 6 ==> (48);\nloop invariant i80: a == 6 ==> (49);\nloop invariant i81: a == 6 ==> (50);\nloop invariant i82: a == 6 ==> (51);\nloop invariant i83: a == 6 ==> (52);\nloop invariant i84: a == 6 ==> (53);\nloop invariant i85: a == 6 ==> (54);\nloop invariant i86: a == 6 ==> (55);\nloop invariant i87: a == 6 ==> (56);\nloop invariant i88: a == 6 ==> (57);\nloop invariant i89: a == 6 ==> (58);\nloop invariant i90: a == 6 ==> (59);\nloop invariant i91: a == 6 ==> (60);\nloop invariant i92: a == 6 ==> (61);\nloop invariant i93: a == 6 ==> (62);\nloop invariant i94: a == 6 ==> (63);\nloop invariant i95: a == 6 ==> (64);\nloop invariant i96: a == 6 ==> (65);\nloop invariant i97: a == 6 ==> (66);\nloop invariant i98: a == 6 ==> (67);\nloop invariant i99: a == 6 ==> (68);\nloop invariant i100: a == 6 ==> (69);\nloop invariant i101: a == 6 ==> (70);\nloop invariant i102: a == 6 ==> (71);\nloop invariant i103: a == 6 ==> (72);\nloop invariant i104: a == 6 ==> (73);\nloop invariant i105: a == 6 ==> (74);\nloop invariant i106: a == 6 ==> (75);\nloop invariant i107: a == 6 ==> (76);\nloop invariant i108: a == 6 ==> (77);\nloop invariant i109: a == 6 ==> (78);\nloop invariant i110: a == 6 ==> (79);\nloop invariant i111: a == 6 ==> (80);\nloop invariant i112: a == 6 ==> (81);\nloop invariant i113: a == 6 ==> (82);\nloop invariant i114: a == 6 ==> (83);\nloop invariant i115: a == 6 ==> (84);\nloop invariant i116: a == 6 ==> (85);\nloop invariant i117: a == 6 ==> (86);\nloop invariant i118: a == 6 ==> (87);\nloop invariant i119: a == 6 ==> (88);\nloop invariant i120: a == 6 ==> (89);\nloop invariant i121: a == 6 ==> (90);\nloop invariant i122: (a == 6) ==> a == 6;\nloop invariant i123: (a < 6) ==> a >= 0 && a < 6 && a <= 5;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
        "combined_annotation_num_solver_calls": 9,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n\tint a = 6;\n\n\t/*@\nloop invariant i1: 0 <= a <= 6;\nloop invariant i2: a >= 6 ==> a == 6;\nloop invariant i3: a < 6 ==> 0 <= a < 6;\nloop invariant i4: a < 6 ==> a + 1 == a + 1;\n\nloop invariant i6: a < 6 ==> a < 7;\nloop invariant i7: a < 6 ==> a < 6 ==> a < 6;\nloop invariant i8: a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i9: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i10: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i11: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i12: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i13: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i14: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i15: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i16: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i17: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i18: a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6 ==> a < 6;\nloop invariant i19: a >= 6 ==> a >= 0;\nloop invariant i20: a >= 6 ==> a <= 6;\n\nloop invariant i22: a <= 6;\n\n\nloop invariant i25: a == 6 ==> a == 6;\nloop invariant i26: a == 6 ==> a >= 0;\nloop invariant i27: a == 6 ==> a <= 6;\n\n\n\n\nloop invariant i32: a == 6 ==> (1);\nloop invariant i33: a == 6 ==> (2);\nloop invariant i34: a == 6 ==> (3);\nloop invariant i35: a == 6 ==> (4);\nloop invariant i36: a == 6 ==> (5);\nloop invariant i37: a == 6 ==> (6);\nloop invariant i38: a == 6 ==> (7);\nloop invariant i39: a == 6 ==> (8);\nloop invariant i40: a == 6 ==> (9);\nloop invariant i41: a == 6 ==> (10);\nloop invariant i42: a == 6 ==> (11);\nloop invariant i43: a == 6 ==> (12);\nloop invariant i44: a == 6 ==> (13);\nloop invariant i45: a == 6 ==> (14);\nloop invariant i46: a == 6 ==> (15);\nloop invariant i47: a == 6 ==> (16);\nloop invariant i48: a == 6 ==> (17);\nloop invariant i49: a == 6 ==> (18);\nloop invariant i50: a == 6 ==> (19);\nloop invariant i51: a == 6 ==> (20);\nloop invariant i52: a == 6 ==> (21);\nloop invariant i53: a == 6 ==> (22);\nloop invariant i54: a == 6 ==> (23);\nloop invariant i55: a == 6 ==> (24);\nloop invariant i56: a == 6 ==> (25);\nloop invariant i57: a == 6 ==> (26);\nloop invariant i58: a == 6 ==> (27);\nloop invariant i59: a == 6 ==> (28);\nloop invariant i60: a == 6 ==> (29);\nloop invariant i61: a == 6 ==> (30);\nloop invariant i62: a == 6 ==> (31);\nloop invariant i63: a == 6 ==> (32);\nloop invariant i64: a == 6 ==> (33);\nloop invariant i65: a == 6 ==> (34);\nloop invariant i66: a == 6 ==> (35);\nloop invariant i67: a == 6 ==> (36);\nloop invariant i68: a == 6 ==> (37);\nloop invariant i69: a == 6 ==> (38);\nloop invariant i70: a == 6 ==> (39);\nloop invariant i71: a == 6 ==> (40);\nloop invariant i72: a == 6 ==> (41);\nloop invariant i73: a == 6 ==> (42);\nloop invariant i74: a == 6 ==> (43);\nloop invariant i75: a == 6 ==> (44);\nloop invariant i76: a == 6 ==> (45);\nloop invariant i77: a == 6 ==> (46);\nloop invariant i78: a == 6 ==> (47);\nloop invariant i79: a == 6 ==> (48);\nloop invariant i80: a == 6 ==> (49);\nloop invariant i81: a == 6 ==> (50);\nloop invariant i82: a == 6 ==> (51);\nloop invariant i83: a == 6 ==> (52);\nloop invariant i84: a == 6 ==> (53);\nloop invariant i85: a == 6 ==> (54);\nloop invariant i86: a == 6 ==> (55);\nloop invariant i87: a == 6 ==> (56);\nloop invariant i88: a == 6 ==> (57);\nloop invariant i89: a == 6 ==> (58);\nloop invariant i90: a == 6 ==> (59);\nloop invariant i91: a == 6 ==> (60);\nloop invariant i92: a == 6 ==> (61);\nloop invariant i93: a == 6 ==> (62);\nloop invariant i94: a == 6 ==> (63);\nloop invariant i95: a == 6 ==> (64);\nloop invariant i96: a == 6 ==> (65);\nloop invariant i97: a == 6 ==> (66);\nloop invariant i98: a == 6 ==> (67);\nloop invariant i99: a == 6 ==> (68);\nloop invariant i100: a == 6 ==> (69);\nloop invariant i101: a == 6 ==> (70);\nloop invariant i102: a == 6 ==> (71);\nloop invariant i103: a == 6 ==> (72);\nloop invariant i104: a == 6 ==> (73);\nloop invariant i105: a == 6 ==> (74);\nloop invariant i106: a == 6 ==> (75);\nloop invariant i107: a == 6 ==> (76);\nloop invariant i108: a == 6 ==> (77);\nloop invariant i109: a == 6 ==> (78);\nloop invariant i110: a == 6 ==> (79);\nloop invariant i111: a == 6 ==> (80);\nloop invariant i112: a == 6 ==> (81);\nloop invariant i113: a == 6 ==> (82);\nloop invariant i114: a == 6 ==> (83);\nloop invariant i115: a == 6 ==> (84);\nloop invariant i116: a == 6 ==> (85);\nloop invariant i117: a == 6 ==> (86);\nloop invariant i118: a == 6 ==> (87);\nloop invariant i119: a == 6 ==> (88);\nloop invariant i120: a == 6 ==> (89);\nloop invariant i121: a == 6 ==> (90);\nloop invariant i122: (a == 6) ==> a == 6;\nloop invariant i123: (a < 6) ==> a >= 0 && a < 6 && a <= 5;\n*/\nfor(a = 0; a < 6; ++a) {\n\n\t}\n\tif(!(a == 6 )) {\n\t\t{; \n//@ assert(\\false);\n};\n\t}\n\treturn 1;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c"
        ],
        "skipped": [],
        "total": 122,
        "success_count": 104,
        "failure_count": 18,
        "success_rate": 0.8524590163934426
    }
}